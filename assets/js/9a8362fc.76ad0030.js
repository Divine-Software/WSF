"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[3469],{9613:function(e,t,n){n.d(t,{Zo:function(){return o},kt:function(){return c}});var a=n(9496);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function p(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var d=a.createContext({}),s=function(e){var t=a.useContext(d),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},o=function(e){var t=s(e.components);return a.createElement(d.Provider,{value:t},e.children)},m={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},k=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,i=e.originalType,d=e.parentName,o=p(e,["components","mdxType","originalType","parentName"]),k=s(n),c=r,N=k["".concat(d,".").concat(c)]||k[c]||m[c]||i;return n?a.createElement(N,l(l({ref:t},o),{},{components:n})):a.createElement(N,l({ref:t},o))}));function c(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=n.length,l=new Array(i);l[0]=k;var p={};for(var d in t)hasOwnProperty.call(t,d)&&(p[d]=t[d]);p.originalType=e,p.mdxType="string"==typeof e?e:r,l[1]=p;for(var s=2;s<i;s++)l[s]=n[s];return a.createElement.apply(null,l)}return a.createElement.apply(null,n)}k.displayName="MDXCreateElement"},5557:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return p},contentTitle:function(){return d},metadata:function(){return s},toc:function(){return o},default:function(){return k}});var a=n(9624),r=n(42),i=(n(9496),n(9613)),l=["components"],p={id:"divine_web_service",title:"Module: @divine/web-service",sidebar_label:"@divine/web-service",sidebar_position:0,custom_edit_url:null},d=void 0,s={unversionedId:"api/modules/divine_web_service",id:"api/modules/divine_web_service",title:"Module: @divine/web-service",description:"Enumerations",source:"@site/docs/api/modules/divine_web_service.md",sourceDirName:"api/modules",slug:"/api/modules/divine_web_service",permalink:"/WSF/docs/api/modules/divine_web_service",editUrl:null,tags:[],version:"current",sidebarPosition:0,frontMatter:{id:"divine_web_service",title:"Module: @divine/web-service",sidebar_label:"@divine/web-service",sidebar_position:0,custom_edit_url:null},sidebar:"tutorialSidebar",previous:{title:"@divine/uri-x4e-parser",permalink:"/WSF/docs/api/modules/divine_uri_x4e_parser"},next:{title:"@divine/x4e",permalink:"/WSF/docs/api/modules/divine_x4e"}},o=[{value:"Enumerations",id:"enumerations",children:[],level:2},{value:"Classes",id:"classes",children:[],level:2},{value:"Interfaces",id:"interfaces",children:[],level:2},{value:"Type aliases",id:"type-aliases",children:[{value:"RPCClient",id:"rpcclient",children:[{value:"Type parameters",id:"type-parameters",children:[],level:4},{value:"Defined in",id:"defined-in",children:[],level:4}],level:3},{value:"RPCClientProxy",id:"rpcclientproxy",children:[{value:"Type parameters",id:"type-parameters-1",children:[],level:4},{value:"Type declaration",id:"type-declaration",children:[{value:"Parameters",id:"parameters",children:[],level:5},{value:"Returns",id:"returns",children:[],level:5}],level:4},{value:"Defined in",id:"defined-in-1",children:[],level:4}],level:3},{value:"RPCEndpoints",id:"rpcendpoints",children:[{value:"Type parameters",id:"type-parameters-2",children:[],level:4},{value:"Defined in",id:"defined-in-2",children:[],level:4}],level:3},{value:"RPCParams",id:"rpcparams",children:[{value:"Type parameters",id:"type-parameters-3",children:[],level:4},{value:"Defined in",id:"defined-in-3",children:[],level:4}],level:3},{value:"RPCResult",id:"rpcresult",children:[{value:"Type parameters",id:"type-parameters-4",children:[],level:4},{value:"Defined in",id:"defined-in-4",children:[],level:4}],level:3},{value:"RPCService",id:"rpcservice",children:[{value:"Type parameters",id:"type-parameters-5",children:[],level:4},{value:"Defined in",id:"defined-in-5",children:[],level:4}],level:3},{value:"RPCSeviceProxy",id:"rpcseviceproxy",children:[{value:"Type parameters",id:"type-parameters-6",children:[],level:4},{value:"Type declaration",id:"type-declaration-1",children:[{value:"Parameters",id:"parameters-1",children:[],level:5},{value:"Returns",id:"returns-1",children:[],level:5}],level:4},{value:"Defined in",id:"defined-in-6",children:[],level:4}],level:3},{value:"WebErrorHandler",id:"weberrorhandler",children:[{value:"Type parameters",id:"type-parameters-7",children:[],level:4},{value:"Type declaration",id:"type-declaration-2",children:[{value:"Parameters",id:"parameters-2",children:[],level:5},{value:"Returns",id:"returns-2",children:[],level:5}],level:4},{value:"Defined in",id:"defined-in-7",children:[],level:4}],level:3},{value:"WebResponses",id:"webresponses",children:[{value:"Defined in",id:"defined-in-8",children:[],level:4}],level:3}],level:2},{value:"Variables",id:"variables",children:[{value:"EVENT_ID",id:"event_id",children:[{value:"Defined in",id:"defined-in-9",children:[],level:4}],level:3},{value:"EVENT_RETRY",id:"event_retry",children:[{value:"Defined in",id:"defined-in-10",children:[],level:4}],level:3},{value:"EVENT_TYPE",id:"event_type",children:[{value:"Defined in",id:"defined-in-11",children:[],level:4}],level:3},{value:"RPC_DEFAULT_KEEPALIVE",id:"rpc_default_keepalive",children:[{value:"Defined in",id:"defined-in-12",children:[],level:4}],level:3},{value:"RPC_DISABLE_KEEPALIVE",id:"rpc_disable_keepalive",children:[{value:"Defined in",id:"defined-in-13",children:[],level:4}],level:3}],level:2},{value:"Functions",id:"functions",children:[{value:"createRPCClient",id:"createrpcclient",children:[{value:"Type parameters",id:"type-parameters-8",children:[],level:4},{value:"Parameters",id:"parameters-3",children:[],level:4},{value:"Returns",id:"returns-3",children:[],level:4},{value:"Defined in",id:"defined-in-14",children:[],level:4}],level:3},{value:"createRPCService",id:"createrpcservice",children:[{value:"Type parameters",id:"type-parameters-9",children:[],level:4},{value:"Parameters",id:"parameters-4",children:[],level:4},{value:"Returns",id:"returns-4",children:[],level:4},{value:"Defined in",id:"defined-in-15",children:[],level:4},{value:"Type parameters",id:"type-parameters-10",children:[],level:4},{value:"Parameters",id:"parameters-5",children:[],level:4},{value:"Returns",id:"returns-5",children:[],level:4},{value:"Defined in",id:"defined-in-16",children:[],level:4}],level:3}],level:2}],m={toc:o};function k(e){var t=e.components,n=(0,r.Z)(e,l);return(0,i.kt)("wrapper",(0,a.Z)({},m,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h2",{id:"enumerations"},"Enumerations"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"../enums/divine_web_service.WebStatus"},"WebStatus"))),(0,i.kt)("h2",{id:"classes"},"Classes"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"../classes/divine_web_service.CORSFilter"},"CORSFilter")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"../classes/divine_web_service.EventStreamResponse"},"EventStreamResponse")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"../classes/divine_web_service.WebArguments"},"WebArguments")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"../classes/divine_web_service.WebError"},"WebError")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"../classes/divine_web_service.WebFilterBase"},"WebFilterBase")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"../classes/divine_web_service.WebRequest"},"WebRequest")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"../classes/divine_web_service.WebResourceBase"},"WebResourceBase")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"../classes/divine_web_service.WebResponse"},"WebResponse")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"../classes/divine_web_service.WebServer"},"WebServer")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"../classes/divine_web_service.WebService"},"WebService"))),(0,i.kt)("h2",{id:"interfaces"},"Interfaces"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"../interfaces/divine_web_service.CORSFilterParams"},"CORSFilterParams")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"../interfaces/divine_web_service.EventAttributes"},"EventAttributes")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"../interfaces/divine_web_service.RPCEndpointOptions"},"RPCEndpointOptions")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"../interfaces/divine_web_service.RPCServiceCtor"},"RPCServiceCtor")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"../interfaces/divine_web_service.StartOptions"},"StartOptions")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"../interfaces/divine_web_service.UserAgent"},"UserAgent")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"../interfaces/divine_web_service.WebFilter"},"WebFilter")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"../interfaces/divine_web_service.WebFilterCtor"},"WebFilterCtor")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"../interfaces/divine_web_service.WebResource"},"WebResource")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"../interfaces/divine_web_service.WebResourceCtor"},"WebResourceCtor")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"../interfaces/divine_web_service.WebResponseHeaders"},"WebResponseHeaders")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"../interfaces/divine_web_service.WebServiceConfig"},"WebServiceConfig"))),(0,i.kt)("h2",{id:"type-aliases"},"Type aliases"),(0,i.kt)("h3",{id:"rpcclient"},"RPCClient"),(0,i.kt)("p",null,"\u01ac ",(0,i.kt)("strong",{parentName:"p"},"RPCClient"),"<",(0,i.kt)("inlineCode",{parentName:"p"},"M"),">",": { ","[K in keyof M]",": Function }"),(0,i.kt)("p",null,"The RPC client API. Used by clients to call an RPC method."),(0,i.kt)("h4",{id:"type-parameters"},"Type parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"M")),(0,i.kt)("td",{parentName:"tr",align:"left"},"extends ",(0,i.kt)("inlineCode",{parentName:"td"},"RPCMethods"),"<",(0,i.kt)("inlineCode",{parentName:"td"},"M"),">"),(0,i.kt)("td",{parentName:"tr",align:"left"},"The interface that defines all RPC method request and response types (as tuples).")))),(0,i.kt)("h4",{id:"defined-in"},"Defined in"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/Divine-Software/wsf/blob/9b9430b/web-service/src/rpc.ts#L29"},"web-service/src/rpc.ts:29")),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"rpcclientproxy"},"RPCClientProxy"),(0,i.kt)("p",null,"\u01ac ",(0,i.kt)("strong",{parentName:"p"},"RPCClientProxy"),"<",(0,i.kt)("inlineCode",{parentName:"p"},"M"),">",": (",(0,i.kt)("inlineCode",{parentName:"p"},"method"),": keyof ",(0,i.kt)("inlineCode",{parentName:"p"},"M"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"options"),": ",(0,i.kt)("inlineCode",{parentName:"p"},"Required"),"<",(0,i.kt)("a",{parentName:"p",href:"../interfaces/divine_web_service.RPCEndpointOptions"},(0,i.kt)("inlineCode",{parentName:"a"},"RPCEndpointOptions")),">",", ",(0,i.kt)("inlineCode",{parentName:"p"},"params"),": ",(0,i.kt)("inlineCode",{parentName:"p"},"RPCParamsType"),") => ",(0,i.kt)("inlineCode",{parentName:"p"},"Promise"),"<",(0,i.kt)("inlineCode",{parentName:"p"},"RPCResultType"),">"),(0,i.kt)("h4",{id:"type-parameters-1"},"Type parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"M")),(0,i.kt)("td",{parentName:"tr",align:"left"},"extends ",(0,i.kt)("inlineCode",{parentName:"td"},"RPCMethods"),"<",(0,i.kt)("inlineCode",{parentName:"td"},"M"),">"),(0,i.kt)("td",{parentName:"tr",align:"left"},"The interface that defines all RPC method request and response types (as tuples).")))),(0,i.kt)("h4",{id:"type-declaration"},"Type declaration"),(0,i.kt)("p",null,"\u25b8 (",(0,i.kt)("inlineCode",{parentName:"p"},"method"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"options"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"params"),"): ",(0,i.kt)("inlineCode",{parentName:"p"},"Promise"),"<",(0,i.kt)("inlineCode",{parentName:"p"},"RPCResultType"),">"),(0,i.kt)("p",null,"This function is should issue an HTTP ",(0,i.kt)("inlineCode",{parentName:"p"},"POST")," request to the remote server and return the response."),(0,i.kt)("p",null,"A minimal implementation using ",(0,i.kt)("inlineCode",{parentName:"p"},"@divine/uri")," could look like this:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-ts"},"interface MyAPI {\n    hello: [ { who?: string }, { greeting: string } ];\n}\n\nconst clientProxy: RPCClientProxy<MyAPI> = (method, options, params) =>\n    new URI(options.path, 'http://api.example.com/my-api/').append(params);\n")),(0,i.kt)("h5",{id:"parameters"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"method")),(0,i.kt)("td",{parentName:"tr",align:"left"},"keyof ",(0,i.kt)("inlineCode",{parentName:"td"},"M")),(0,i.kt)("td",{parentName:"tr",align:"left"},"The name of the RPC method to invoke.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"options")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"Required"),"<",(0,i.kt)("a",{parentName:"td",href:"../interfaces/divine_web_service.RPCEndpointOptions"},(0,i.kt)("inlineCode",{parentName:"a"},"RPCEndpointOptions")),">"),(0,i.kt)("td",{parentName:"tr",align:"left"},"Contains the RPC method endpoint in the ",(0,i.kt)("a",{parentName:"td",href:"../interfaces/divine_web_service.RPCEndpointOptions#path"},"path")," property.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"params")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"RPCParamsType")),(0,i.kt)("td",{parentName:"tr",align:"left"},"RPC method parameters to be ",(0,i.kt)("inlineCode",{parentName:"td"},"POST"),"'ed.")))),(0,i.kt)("h5",{id:"returns"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"Promise"),"<",(0,i.kt)("inlineCode",{parentName:"p"},"RPCResultType"),">"),(0,i.kt)("p",null,"The response as receieved from the RPC serivce."),(0,i.kt)("h4",{id:"defined-in-1"},"Defined in"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/Divine-Software/wsf/blob/9b9430b/web-service/src/rpc.ts#L110"},"web-service/src/rpc.ts:110")),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"rpcendpoints"},"RPCEndpoints"),(0,i.kt)("p",null,"\u01ac ",(0,i.kt)("strong",{parentName:"p"},"RPCEndpoints"),"<",(0,i.kt)("inlineCode",{parentName:"p"},"M"),">",": ",(0,i.kt)("inlineCode",{parentName:"p"},"Record"),"<keyof ",(0,i.kt)("inlineCode",{parentName:"p"},"M"),", ",(0,i.kt)("a",{parentName:"p",href:"../interfaces/divine_web_service.RPCEndpointOptions"},(0,i.kt)("inlineCode",{parentName:"a"},"RPCEndpointOptions"))," ","|"," ",(0,i.kt)("inlineCode",{parentName:"p"},"null"),">"),(0,i.kt)("p",null,"RPC endpoint configuration. For each RPC method (the key) this interface contains either an ",(0,i.kt)("a",{parentName:"p",href:"../interfaces/divine_web_service.RPCEndpointOptions"},"RPCEndpointOptions"),"\nobject or ",(0,i.kt)("inlineCode",{parentName:"p"},"null")," for defaults."),(0,i.kt)("p",null,"This object is the run-time (JavaScript) view of the RPC service API. It's important that every RPC method is present\nin this object, even if its configuration is ",(0,i.kt)("inlineCode",{parentName:"p"},"null"),", becasue this is the only source of method names for JavaScript.\nBoth ",(0,i.kt)("a",{parentName:"p",href:"divine_web_service#createrpcclient"},"createRPCClient")," and ",(0,i.kt)("a",{parentName:"p",href:"divine_web_service#createrpcservice"},"createRPCService")," use this object as input when creating the RPC client or service\nproxy."),(0,i.kt)("h4",{id:"type-parameters-2"},"Type parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"M")),(0,i.kt)("td",{parentName:"tr",align:"left"},"extends ",(0,i.kt)("inlineCode",{parentName:"td"},"RPCMethods"),"<",(0,i.kt)("inlineCode",{parentName:"td"},"M"),">"),(0,i.kt)("td",{parentName:"tr",align:"left"},"The interface that defines all RPC method request and response types (as tuples). This is the              compile-time (TypeScript) view of the RPC service API.")))),(0,i.kt)("h4",{id:"defined-in-2"},"Defined in"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/Divine-Software/wsf/blob/9b9430b/web-service/src/rpc.ts#L69"},"web-service/src/rpc.ts:69")),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"rpcparams"},"RPCParams"),(0,i.kt)("p",null,"\u01ac ",(0,i.kt)("strong",{parentName:"p"},"RPCParams"),"<",(0,i.kt)("inlineCode",{parentName:"p"},"M"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"K"),">",": ",(0,i.kt)("inlineCode",{parentName:"p"},"M"),"[",(0,i.kt)("inlineCode",{parentName:"p"},"K"),"]"," extends ","[infer A, infer ","_","B]"," ? ",(0,i.kt)("inlineCode",{parentName:"p"},"A")," : ",(0,i.kt)("inlineCode",{parentName:"p"},"never")),(0,i.kt)("p",null,"Given the compile-time RPC service API interface and a method name, extracs the request parameters."),(0,i.kt)("h4",{id:"type-parameters-3"},"Type parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"M")),(0,i.kt)("td",{parentName:"tr",align:"left"},"extends ",(0,i.kt)("inlineCode",{parentName:"td"},"RPCMethods"),"<",(0,i.kt)("inlineCode",{parentName:"td"},"M"),">"),(0,i.kt)("td",{parentName:"tr",align:"left"},"The interface that defines all RPC method request and response types (as tuples).")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"K")),(0,i.kt)("td",{parentName:"tr",align:"left"},"extends keyof ",(0,i.kt)("inlineCode",{parentName:"td"},"M")),(0,i.kt)("td",{parentName:"tr",align:"left"},"-")))),(0,i.kt)("h4",{id:"defined-in-3"},"Defined in"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/Divine-Software/wsf/blob/9b9430b/web-service/src/rpc.ts#L15"},"web-service/src/rpc.ts:15")),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"rpcresult"},"RPCResult"),(0,i.kt)("p",null,"\u01ac ",(0,i.kt)("strong",{parentName:"p"},"RPCResult"),"<",(0,i.kt)("inlineCode",{parentName:"p"},"M"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"K"),">",": ",(0,i.kt)("inlineCode",{parentName:"p"},"M"),"[",(0,i.kt)("inlineCode",{parentName:"p"},"K"),"]"," extends ","[infer ","_","A, infer B]"," ? ",(0,i.kt)("inlineCode",{parentName:"p"},"B")," : ",(0,i.kt)("inlineCode",{parentName:"p"},"never")),(0,i.kt)("p",null,"Given the compile-time RPC service API interface and a method name, extracs the result/response type."),(0,i.kt)("h4",{id:"type-parameters-4"},"Type parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"M")),(0,i.kt)("td",{parentName:"tr",align:"left"},"extends ",(0,i.kt)("inlineCode",{parentName:"td"},"RPCMethods"),"<",(0,i.kt)("inlineCode",{parentName:"td"},"M"),">"),(0,i.kt)("td",{parentName:"tr",align:"left"},"The interface that defines all RPC method request and response types (as tuples).")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"K")),(0,i.kt)("td",{parentName:"tr",align:"left"},"extends keyof ",(0,i.kt)("inlineCode",{parentName:"td"},"M")),(0,i.kt)("td",{parentName:"tr",align:"left"},"-")))),(0,i.kt)("h4",{id:"defined-in-4"},"Defined in"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/Divine-Software/wsf/blob/9b9430b/web-service/src/rpc.ts#L22"},"web-service/src/rpc.ts:22")),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"rpcservice"},"RPCService"),(0,i.kt)("p",null,"\u01ac ",(0,i.kt)("strong",{parentName:"p"},"RPCService"),"<",(0,i.kt)("inlineCode",{parentName:"p"},"M"),">",": { ","[K in keyof M]",": Function }"),(0,i.kt)("p",null,"The RPC service API. The server should implement this API to handle incoming RPC method calls."),(0,i.kt)("h4",{id:"type-parameters-5"},"Type parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"M")),(0,i.kt)("td",{parentName:"tr",align:"left"},"extends ",(0,i.kt)("inlineCode",{parentName:"td"},"RPCMethods"),"<",(0,i.kt)("inlineCode",{parentName:"td"},"M"),">"),(0,i.kt)("td",{parentName:"tr",align:"left"},"The interface that defines all RPC method request and response types (as tuples).")))),(0,i.kt)("h4",{id:"defined-in-5"},"Defined in"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/Divine-Software/wsf/blob/9b9430b/web-service/src/rpc.ts#L38"},"web-service/src/rpc.ts:38")),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"rpcseviceproxy"},"RPCSeviceProxy"),(0,i.kt)("p",null,"\u01ac ",(0,i.kt)("strong",{parentName:"p"},"RPCSeviceProxy"),"<",(0,i.kt)("inlineCode",{parentName:"p"},"M"),">",": (",(0,i.kt)("inlineCode",{parentName:"p"},"method"),": keyof ",(0,i.kt)("inlineCode",{parentName:"p"},"M"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"options"),": ",(0,i.kt)("inlineCode",{parentName:"p"},"Required"),"<",(0,i.kt)("a",{parentName:"p",href:"../interfaces/divine_web_service.RPCEndpointOptions"},(0,i.kt)("inlineCode",{parentName:"a"},"RPCEndpointOptions")),">",", ",(0,i.kt)("inlineCode",{parentName:"p"},"args"),": ",(0,i.kt)("a",{parentName:"p",href:"../classes/divine_web_service.WebArguments"},(0,i.kt)("inlineCode",{parentName:"a"},"WebArguments")),", ",(0,i.kt)("inlineCode",{parentName:"p"},"fn"),": (",(0,i.kt)("inlineCode",{parentName:"p"},"params"),": ",(0,i.kt)("inlineCode",{parentName:"p"},"RPCParamsType"),") => ",(0,i.kt)("inlineCode",{parentName:"p"},"Promise"),"<",(0,i.kt)("inlineCode",{parentName:"p"},"RPCResultType"),">",") => ",(0,i.kt)("inlineCode",{parentName:"p"},"Promise"),"<",(0,i.kt)("inlineCode",{parentName:"p"},"RPCResultType"),">"),(0,i.kt)("h4",{id:"type-parameters-6"},"Type parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"M")),(0,i.kt)("td",{parentName:"tr",align:"left"},"extends ",(0,i.kt)("inlineCode",{parentName:"td"},"RPCMethods"),"<",(0,i.kt)("inlineCode",{parentName:"td"},"M"),">"),(0,i.kt)("td",{parentName:"tr",align:"left"},"The interface that defines all RPC method request and response types (as tuples).")))),(0,i.kt)("h4",{id:"type-declaration-1"},"Type declaration"),(0,i.kt)("p",null,"\u25b8 (",(0,i.kt)("inlineCode",{parentName:"p"},"method"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"options"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"args"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"fn"),"): ",(0,i.kt)("inlineCode",{parentName:"p"},"Promise"),"<",(0,i.kt)("inlineCode",{parentName:"p"},"RPCResultType"),">"),(0,i.kt)("p",null,"This function should load the request parameters from ",(0,i.kt)("a",{parentName:"p",href:"../classes/divine_web_service.WebArguments#body"},"WebArguments.body")," and invoke the callback function."),(0,i.kt)("p",null,"This is a great place to perform input validation (perhaps using a schema), authenticate the client somehow or add\ncustom response headers. If an ",(0,i.kt)("inlineCode",{parentName:"p"},"AsyncIterable")," is returned, it will automatically be wrapped in an ",(0,i.kt)("a",{parentName:"p",href:"../classes/divine_web_service.EventStreamResponse"},"EventStreamResponse"),",\nbut otherwise, you free to constuct the response as you wish."),(0,i.kt)("p",null,"A minimal implementation could look like this:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-ts"},"interface MyAPI {\n    hello: [ { who?: string }, { greeting: string } ];\n}\n\nconst serviceProxy: RPCSeviceProxy<MyAPI> = async (method, options, args, fn) =>\n    fn(await args.body());\n")),(0,i.kt)("h5",{id:"parameters-1"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"method")),(0,i.kt)("td",{parentName:"tr",align:"left"},"keyof ",(0,i.kt)("inlineCode",{parentName:"td"},"M")),(0,i.kt)("td",{parentName:"tr",align:"left"},"The name of the RPC method that should be invoked.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"options")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"Required"),"<",(0,i.kt)("a",{parentName:"td",href:"../interfaces/divine_web_service.RPCEndpointOptions"},(0,i.kt)("inlineCode",{parentName:"a"},"RPCEndpointOptions")),">"),(0,i.kt)("td",{parentName:"tr",align:"left"},"Contains the configured options for the RPC endpoint.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"args")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("a",{parentName:"td",href:"../classes/divine_web_service.WebArguments"},(0,i.kt)("inlineCode",{parentName:"a"},"WebArguments"))),(0,i.kt)("td",{parentName:"tr",align:"left"},"Incoming HTTP request arguments. You should at least load the body from it.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"fn")),(0,i.kt)("td",{parentName:"tr",align:"left"},"(",(0,i.kt)("inlineCode",{parentName:"td"},"params"),": ",(0,i.kt)("inlineCode",{parentName:"td"},"RPCParamsType"),") => ",(0,i.kt)("inlineCode",{parentName:"td"},"Promise"),"<",(0,i.kt)("inlineCode",{parentName:"td"},"RPCResultType"),">"),(0,i.kt)("td",{parentName:"tr",align:"left"},"The RPC service method that should be invoked with the request parameters.")))),(0,i.kt)("h5",{id:"returns-1"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"Promise"),"<",(0,i.kt)("inlineCode",{parentName:"p"},"RPCResultType"),">"),(0,i.kt)("p",null,"The return value of the ",(0,i.kt)("inlineCode",{parentName:"p"},"fn")," service method, either directly or wrapped in a ",(0,i.kt)("a",{parentName:"p",href:"../classes/divine_web_service.WebResponse"},"WebResponse"),"."),(0,i.kt)("h4",{id:"defined-in-6"},"Defined in"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/Divine-Software/wsf/blob/9b9430b/web-service/src/rpc.ts#L137"},"web-service/src/rpc.ts:137")),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"weberrorhandler"},"WebErrorHandler"),(0,i.kt)("p",null,"\u01ac ",(0,i.kt)("strong",{parentName:"p"},"WebErrorHandler"),"<",(0,i.kt)("inlineCode",{parentName:"p"},"Context"),">",": (",(0,i.kt)("inlineCode",{parentName:"p"},"err"),": ",(0,i.kt)("inlineCode",{parentName:"p"},"Error"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"context"),": ",(0,i.kt)("inlineCode",{parentName:"p"},"Context"),") => ",(0,i.kt)("inlineCode",{parentName:"p"},"Promise"),"<",(0,i.kt)("a",{parentName:"p",href:"../classes/divine_web_service.WebResponse"},(0,i.kt)("inlineCode",{parentName:"a"},"WebResponse")),">"),(0,i.kt)("h4",{id:"type-parameters-7"},"Type parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"Context")),(0,i.kt)("td",{parentName:"tr",align:"left"},"The type of the WebService context.")))),(0,i.kt)("h4",{id:"type-declaration-2"},"Type declaration"),(0,i.kt)("p",null,"\u25b8 (",(0,i.kt)("inlineCode",{parentName:"p"},"err"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"context"),"): ",(0,i.kt)("inlineCode",{parentName:"p"},"Promise"),"<",(0,i.kt)("a",{parentName:"p",href:"../classes/divine_web_service.WebResponse"},(0,i.kt)("inlineCode",{parentName:"a"},"WebResponse")),">"),(0,i.kt)("p",null,"A custom error handler."),(0,i.kt)("h5",{id:"parameters-2"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"err")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"Error")),(0,i.kt)("td",{parentName:"tr",align:"left"},"The error that caused the handler to be invoked.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"context")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"Context")),(0,i.kt)("td",{parentName:"tr",align:"left"},"The WebService context.")))),(0,i.kt)("h5",{id:"returns-2"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"Promise"),"<",(0,i.kt)("a",{parentName:"p",href:"../classes/divine_web_service.WebResponse"},(0,i.kt)("inlineCode",{parentName:"a"},"WebResponse")),">"),(0,i.kt)("p",null,"A response that should be sent back to the client."),(0,i.kt)("h4",{id:"defined-in-7"},"Defined in"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/Divine-Software/wsf/blob/9b9430b/web-service/src/resource.ts#L15"},"web-service/src/resource.ts:15")),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"webresponses"},"WebResponses"),(0,i.kt)("p",null,"\u01ac ",(0,i.kt)("strong",{parentName:"p"},"WebResponses"),": ",(0,i.kt)("inlineCode",{parentName:"p"},"null")," ","|"," ",(0,i.kt)("a",{parentName:"p",href:"../classes/divine_web_service.WebResponse"},(0,i.kt)("inlineCode",{parentName:"a"},"WebResponse"))," ","|"," ",(0,i.kt)("inlineCode",{parentName:"p"},"NodeJS.ReadableStream")," ","|"," ",(0,i.kt)("inlineCode",{parentName:"p"},"Buffer")," ","|"," ",(0,i.kt)("inlineCode",{parentName:"p"},"string")," ","|"," ",(0,i.kt)("inlineCode",{parentName:"p"},"number")," ","|"," ",(0,i.kt)("inlineCode",{parentName:"p"},"bigint")," ","|"," ",(0,i.kt)("inlineCode",{parentName:"p"},"boolean")," ","|"," ",(0,i.kt)("inlineCode",{parentName:"p"},"Date")," ","|"," ",(0,i.kt)("inlineCode",{parentName:"p"},"object")),(0,i.kt)("p",null,"A union of all types a ",(0,i.kt)("a",{parentName:"p",href:"../interfaces/divine_web_service.WebResource"},"WebResource")," method may return."),(0,i.kt)("h4",{id:"defined-in-8"},"Defined in"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/Divine-Software/wsf/blob/9b9430b/web-service/src/response.ts#L336"},"web-service/src/response.ts:336")),(0,i.kt)("h2",{id:"variables"},"Variables"),(0,i.kt)("h3",{id:"event_id"},"EVENT","_","ID"),(0,i.kt)("p",null,"\u2022 ",(0,i.kt)("strong",{parentName:"p"},"EVENT","_","ID"),": typeof ",(0,i.kt)("a",{parentName:"p",href:"divine_web_service#event_id"},(0,i.kt)("inlineCode",{parentName:"a"},"EVENT_ID"))),(0,i.kt)("p",null,"A symbol in ",(0,i.kt)("a",{parentName:"p",href:"../interfaces/divine_web_service.EventAttributes"},"EventAttributes")," representing the event's ",(0,i.kt)("inlineCode",{parentName:"p"},"id")," field"),(0,i.kt)("h4",{id:"defined-in-9"},"Defined in"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/Divine-Software/wsf/blob/9b9430b/web-service/src/helpers.ts#L151"},"web-service/src/helpers.ts:151")),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"event_retry"},"EVENT","_","RETRY"),(0,i.kt)("p",null,"\u2022 ",(0,i.kt)("strong",{parentName:"p"},"EVENT","_","RETRY"),": typeof ",(0,i.kt)("a",{parentName:"p",href:"divine_web_service#event_retry"},(0,i.kt)("inlineCode",{parentName:"a"},"EVENT_RETRY"))),(0,i.kt)("p",null,"A symbol in ",(0,i.kt)("a",{parentName:"p",href:"../interfaces/divine_web_service.EventAttributes"},"EventAttributes")," representing the event's ",(0,i.kt)("inlineCode",{parentName:"p"},"retry")," field"),(0,i.kt)("h4",{id:"defined-in-10"},"Defined in"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/Divine-Software/wsf/blob/9b9430b/web-service/src/helpers.ts#L157"},"web-service/src/helpers.ts:157")),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"event_type"},"EVENT","_","TYPE"),(0,i.kt)("p",null,"\u2022 ",(0,i.kt)("strong",{parentName:"p"},"EVENT","_","TYPE"),": typeof ",(0,i.kt)("a",{parentName:"p",href:"divine_web_service#event_type"},(0,i.kt)("inlineCode",{parentName:"a"},"EVENT_TYPE"))),(0,i.kt)("p",null,"A symbol in ",(0,i.kt)("a",{parentName:"p",href:"../interfaces/divine_web_service.EventAttributes"},"EventAttributes")," representing the event's ",(0,i.kt)("inlineCode",{parentName:"p"},"event")," field"),(0,i.kt)("h4",{id:"defined-in-11"},"Defined in"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/Divine-Software/wsf/blob/9b9430b/web-service/src/helpers.ts#L154"},"web-service/src/helpers.ts:154")),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"rpc_default_keepalive"},"RPC","_","DEFAULT","_","KEEPALIVE"),(0,i.kt)("p",null,"\u2022 ",(0,i.kt)("strong",{parentName:"p"},"RPC","_","DEFAULT","_","KEEPALIVE"),": ",(0,i.kt)("inlineCode",{parentName:"p"},"10000")),(0,i.kt)("p",null,"The default keep-alive time for event streams, in milliseconds (10 s)."),(0,i.kt)("h4",{id:"defined-in-12"},"Defined in"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/Divine-Software/wsf/blob/9b9430b/web-service/src/rpc.ts#L43"},"web-service/src/rpc.ts:43")),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"rpc_disable_keepalive"},"RPC","_","DISABLE","_","KEEPALIVE"),(0,i.kt)("p",null,"\u2022 ",(0,i.kt)("strong",{parentName:"p"},"RPC","_","DISABLE","_","KEEPALIVE"),": ",(0,i.kt)("inlineCode",{parentName:"p"},"null")),(0,i.kt)("p",null,"The value to specify if keep-alive for event streams should be disabled."),(0,i.kt)("h4",{id:"defined-in-13"},"Defined in"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/Divine-Software/wsf/blob/9b9430b/web-service/src/rpc.ts#L46"},"web-service/src/rpc.ts:46")),(0,i.kt)("h2",{id:"functions"},"Functions"),(0,i.kt)("h3",{id:"createrpcclient"},"createRPCClient"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("strong",{parentName:"p"},"createRPCClient"),"<",(0,i.kt)("inlineCode",{parentName:"p"},"M"),">","(",(0,i.kt)("inlineCode",{parentName:"p"},"config"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"clientProxy"),"): ",(0,i.kt)("a",{parentName:"p",href:"divine_web_service#rpcclient"},(0,i.kt)("inlineCode",{parentName:"a"},"RPCClient")),"<",(0,i.kt)("inlineCode",{parentName:"p"},"M"),">"),(0,i.kt)("p",null,"Enumerates all keys in the ",(0,i.kt)("a",{parentName:"p",href:"divine_web_service#rpcendpoints"},"RPCEndpoints")," object and generates an ",(0,i.kt)("a",{parentName:"p",href:"divine_web_service#rpcclient"},"RPCClient"),"."),(0,i.kt)("p",null,"Example usage:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-ts"},"interface MyAPI {\n    hello: [ { who?: string; }, { greeting: string } ];\n}\n\nconst MyAPI: RPCEndpoints<MyAPI> = {\n    hello: null,\n}\n\nconst myAPI = createRPCClient(MyAPI, async (method, options, params) =>\n                  new URI(options.path, 'http://api.example.com/my-api/').append(params));\n\nconst { greeting } = await myAPI.hello({ who: 'beautiful' });\nconsole.log(greeting);\n")),(0,i.kt)("h4",{id:"type-parameters-8"},"Type parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"M")),(0,i.kt)("td",{parentName:"tr",align:"left"},"extends ",(0,i.kt)("inlineCode",{parentName:"td"},"RPCMethods"),"<",(0,i.kt)("inlineCode",{parentName:"td"},"M"),">"),(0,i.kt)("td",{parentName:"tr",align:"left"},"The interface that defines all RPC method request and response types (as tuples).")))),(0,i.kt)("h4",{id:"parameters-3"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"config")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("a",{parentName:"td",href:"divine_web_service#rpcendpoints"},(0,i.kt)("inlineCode",{parentName:"a"},"RPCEndpoints")),"<",(0,i.kt)("inlineCode",{parentName:"td"},"M"),">"),(0,i.kt)("td",{parentName:"tr",align:"left"},"RPC endpoint configuration to generate a client API for.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"clientProxy")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("a",{parentName:"td",href:"divine_web_service#rpcclientproxy"},(0,i.kt)("inlineCode",{parentName:"a"},"RPCClientProxy")),"<",(0,i.kt)("inlineCode",{parentName:"td"},"M"),">"),(0,i.kt)("td",{parentName:"tr",align:"left"},"Utility function that makes the actual HTTP request.")))),(0,i.kt)("h4",{id:"returns-3"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"divine_web_service#rpcclient"},(0,i.kt)("inlineCode",{parentName:"a"},"RPCClient")),"<",(0,i.kt)("inlineCode",{parentName:"p"},"M"),">"),(0,i.kt)("p",null,"A class that implements the client-side view of the RPC service API."),(0,i.kt)("h4",{id:"defined-in-14"},"Defined in"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/Divine-Software/wsf/blob/9b9430b/web-service/src/rpc.ts#L174"},"web-service/src/rpc.ts:174")),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"createrpcservice"},"createRPCService"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("strong",{parentName:"p"},"createRPCService"),"<",(0,i.kt)("inlineCode",{parentName:"p"},"M"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"Context"),">","(",(0,i.kt)("inlineCode",{parentName:"p"},"config"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"impl"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"serviceProxy"),"): ",(0,i.kt)("a",{parentName:"p",href:"../interfaces/divine_web_service.WebResourceCtor"},(0,i.kt)("inlineCode",{parentName:"a"},"WebResourceCtor")),"<",(0,i.kt)("inlineCode",{parentName:"p"},"Context"),">","[]"),(0,i.kt)("p",null,"Enumerates all keys in the ",(0,i.kt)("a",{parentName:"p",href:"divine_web_service#rpcendpoints"},"RPCEndpoints")," object and generates an array of ",(0,i.kt)("a",{parentName:"p",href:"../interfaces/divine_web_service.WebResource"},"WebResource")," classes which will\ninvoke the RPC service methods provided."),(0,i.kt)("p",null,"Example usage:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-ts"},"interface MyAPI {\n    hello: [ { who?: string; }, { greeting: string } ];\n}\n\nconst MyAPI: RPCEndpoints<MyAPI> = {\n    hello: null,\n}\n\nclass MyAPIService implements RPCService<MyAPI> {\n    async hello({ who }: RPCParams<MyAPI, 'hello'>): Promise<RPCResult<MyAPI, 'hello'>> {\n        return { greeting: `Hello, ${who ?? 'World'}!` };\n    }\n}\n\nconst ws = new WebService(null)\n    .addResources(createRPCService(MyAPI, MyAPIService,\n        async (method, options, args, fn) => fn(await args.body())));\n")),(0,i.kt)("h4",{id:"type-parameters-9"},"Type parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"M")),(0,i.kt)("td",{parentName:"tr",align:"left"},"extends ",(0,i.kt)("inlineCode",{parentName:"td"},"RPCMethods"),"<",(0,i.kt)("inlineCode",{parentName:"td"},"M"),">"),(0,i.kt)("td",{parentName:"tr",align:"left"},"The interface that defines all RPC method request and response types (as tuples).")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"Context")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"Context")),(0,i.kt)("td",{parentName:"tr",align:"left"},"The ",(0,i.kt)("a",{parentName:"td",href:"../classes/divine_web_service.WebService"},"WebService")," context type.")))),(0,i.kt)("h4",{id:"parameters-4"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"config")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("a",{parentName:"td",href:"divine_web_service#rpcendpoints"},(0,i.kt)("inlineCode",{parentName:"a"},"RPCEndpoints")),"<",(0,i.kt)("inlineCode",{parentName:"td"},"M"),">"),(0,i.kt)("td",{parentName:"tr",align:"left"},"RPC endpoint configuration to generate a client API for.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"impl")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("a",{parentName:"td",href:"../interfaces/divine_web_service.RPCServiceCtor"},(0,i.kt)("inlineCode",{parentName:"a"},"RPCServiceCtor")),"<",(0,i.kt)("inlineCode",{parentName:"td"},"Context"),", ",(0,i.kt)("inlineCode",{parentName:"td"},"M"),">"),(0,i.kt)("td",{parentName:"tr",align:"left"},"An RPC service class. A new instance will be constructed for each incoming request.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"serviceProxy")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("a",{parentName:"td",href:"divine_web_service#rpcseviceproxy"},(0,i.kt)("inlineCode",{parentName:"a"},"RPCSeviceProxy")),"<",(0,i.kt)("inlineCode",{parentName:"td"},"M"),">"),(0,i.kt)("td",{parentName:"tr",align:"left"},"A function that extracts the request parameters, calls the RPC service method and retuns the                      result.")))),(0,i.kt)("h4",{id:"returns-4"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"../interfaces/divine_web_service.WebResourceCtor"},(0,i.kt)("inlineCode",{parentName:"a"},"WebResourceCtor")),"<",(0,i.kt)("inlineCode",{parentName:"p"},"Context"),">","[]"),(0,i.kt)("p",null,"An array of ",(0,i.kt)("a",{parentName:"p",href:"../interfaces/divine_web_service.WebResource"},"WebResource")," classes that should be registered to a WebService via\n",(0,i.kt)("a",{parentName:"p",href:"../classes/divine_web_service.WebService#addresources"},"WebService.addResources"),"."),(0,i.kt)("h4",{id:"defined-in-15"},"Defined in"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/Divine-Software/wsf/blob/9b9430b/web-service/src/rpc.ts#L221"},"web-service/src/rpc.ts:221")),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("strong",{parentName:"p"},"createRPCService"),"<",(0,i.kt)("inlineCode",{parentName:"p"},"M"),">","(",(0,i.kt)("inlineCode",{parentName:"p"},"config"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"impl"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"serviceProxy"),"): ",(0,i.kt)("a",{parentName:"p",href:"../interfaces/divine_web_service.WebResourceCtor"},(0,i.kt)("inlineCode",{parentName:"a"},"WebResourceCtor")),"<",(0,i.kt)("inlineCode",{parentName:"p"},"unknown"),">","[]"),(0,i.kt)("p",null,"Enumerates all keys in the ",(0,i.kt)("a",{parentName:"p",href:"divine_web_service#rpcendpoints"},"RPCEndpoints")," object and generates an array of ",(0,i.kt)("a",{parentName:"p",href:"../interfaces/divine_web_service.WebResource"},"WebResource")," classes which will\ninvoke the RPC service methods provided."),(0,i.kt)("p",null,"Example usage:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-ts"},"interface MyAPI {\n    hello: [ { who?: string; }, { greeting: string } ];\n}\n\nconst MyAPI: RPCEndpoints<MyAPI> = {\n    hello: null,\n}\n\nconst myAPIService = new class implements RPCService<MyAPI> {\n    async hello({ who }: RPCParams<MyAPI, 'hello'>): Promise<RPCResult<MyAPI, 'hello'>> {\n        return { greeting: `Hello, ${who ?? 'World'}!` };\n    }\n}\n\nconst ws = new WebService(null)\n    .addResources(createRPCService(MyAPI, myAPIService,\n        async (method, options, args, fn) => fn(await args.body())));\n")),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"@template M          The interface that defines all RPC method request and response types (as tuples).")),(0,i.kt)("h4",{id:"type-parameters-10"},"Type parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"M")),(0,i.kt)("td",{parentName:"tr",align:"left"},"extends ",(0,i.kt)("inlineCode",{parentName:"td"},"RPCMethods"),"<",(0,i.kt)("inlineCode",{parentName:"td"},"M"),">")))),(0,i.kt)("h4",{id:"parameters-5"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"config")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("a",{parentName:"td",href:"divine_web_service#rpcendpoints"},(0,i.kt)("inlineCode",{parentName:"a"},"RPCEndpoints")),"<",(0,i.kt)("inlineCode",{parentName:"td"},"M"),">"),(0,i.kt)("td",{parentName:"tr",align:"left"},"RPC endpoint configuration to generate a client API for.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"impl")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("a",{parentName:"td",href:"divine_web_service#rpcservice"},(0,i.kt)("inlineCode",{parentName:"a"},"RPCService")),"<",(0,i.kt)("inlineCode",{parentName:"td"},"M"),">"),(0,i.kt)("td",{parentName:"tr",align:"left"},"An RPC service instance (which may be stateful). Its methods will be invoked directly.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"serviceProxy")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("a",{parentName:"td",href:"divine_web_service#rpcseviceproxy"},(0,i.kt)("inlineCode",{parentName:"a"},"RPCSeviceProxy")),"<",(0,i.kt)("inlineCode",{parentName:"td"},"M"),">"),(0,i.kt)("td",{parentName:"tr",align:"left"},"A function that extracts the request parameters, calls the RPC service method and retuns the                      result.")))),(0,i.kt)("h4",{id:"returns-5"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"../interfaces/divine_web_service.WebResourceCtor"},(0,i.kt)("inlineCode",{parentName:"a"},"WebResourceCtor")),"<",(0,i.kt)("inlineCode",{parentName:"p"},"unknown"),">","[]"),(0,i.kt)("p",null,"An array of ",(0,i.kt)("a",{parentName:"p",href:"../interfaces/divine_web_service.WebResource"},"WebResource")," classes that should be registered to a WebService via\n",(0,i.kt)("a",{parentName:"p",href:"../classes/divine_web_service.WebService#addresources"},"WebService.addResources"),"."),(0,i.kt)("h4",{id:"defined-in-16"},"Defined in"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/Divine-Software/wsf/blob/9b9430b/web-service/src/rpc.ts#L257"},"web-service/src/rpc.ts:257")))}k.isMDXComponent=!0}}]);