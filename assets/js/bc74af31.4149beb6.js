"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[7316],{9613:function(e,r,t){t.d(r,{Zo:function(){return l},kt:function(){return f}});var n=t(9496);function a(e,r,t){return r in e?Object.defineProperty(e,r,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[r]=t,e}function o(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);r&&(n=n.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,n)}return t}function s(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?o(Object(t),!0).forEach((function(r){a(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}function i(e,r){if(null==e)return{};var t,n,a=function(e,r){if(null==e)return{};var t,n,a={},o=Object.keys(e);for(n=0;n<o.length;n++)t=o[n],r.indexOf(t)>=0||(a[t]=e[t]);return a}(e,r);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)t=o[n],r.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var c=n.createContext({}),p=function(e){var r=n.useContext(c),t=r;return e&&(t="function"==typeof e?e(r):s(s({},r),e)),t},l=function(e){var r=p(e.components);return n.createElement(c.Provider,{value:r},e.children)},u={inlineCode:"code",wrapper:function(e){var r=e.children;return n.createElement(n.Fragment,{},r)}},d=n.forwardRef((function(e,r){var t=e.components,a=e.mdxType,o=e.originalType,c=e.parentName,l=i(e,["components","mdxType","originalType","parentName"]),d=p(t),f=a,m=d["".concat(c,".").concat(f)]||d[f]||u[f]||o;return t?n.createElement(m,s(s({ref:r},l),{},{components:t})):n.createElement(m,s({ref:r},l))}));function f(e,r){var t=arguments,a=r&&r.mdxType;if("string"==typeof e||a){var o=t.length,s=new Array(o);s[0]=d;var i={};for(var c in r)hasOwnProperty.call(r,c)&&(i[c]=r[c]);i.originalType=e,i.mdxType="string"==typeof e?e:a,s[1]=i;for(var p=2;p<o;p++)s[p]=t[p];return n.createElement.apply(null,s)}return n.createElement.apply(null,t)}d.displayName="MDXCreateElement"},4827:function(e,r,t){t.r(r),t.d(r,{frontMatter:function(){return i},contentTitle:function(){return c},metadata:function(){return p},toc:function(){return l},default:function(){return d}});var n=t(9624),a=t(42),o=(t(9496),t(9613)),s=["components"],i={sidebar_position:2},c="Data Formats",p={unversionedId:"parse/parse",id:"parse/parse",title:"Data Formats",description:"Whenever you read something from an [URI], one of the built-in parsers is used to make sense of the byte stream",source:"@site/docs/parse/parse.md",sourceDirName:"parse",slug:"/parse/",permalink:"/WSF/docs/parse/",editUrl:"https://github.com/Divine-Software/WSF/tree/master/website/docs/parse/parse.md",tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2},sidebar:"tutorialSidebar",previous:{title:"Databases",permalink:"/WSF/docs/connect/databases"},next:{title:"Bytes and Text",permalink:"/WSF/docs/parse/sequences"}},l=[],u={toc:l};function d(e){var r=e.components,t=(0,a.Z)(e,s);return(0,o.kt)("wrapper",(0,n.Z)({},u,t,{components:r,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"data-formats"},"Data Formats"),(0,o.kt)("p",null,"Whenever you read something from an ",(0,o.kt)("a",{parentName:"p",href:"/WSF/docs/api/classes/divine_uri.URI"},"URI"),", one of the built-in parsers is used to make sense of the byte stream\nreceived; likewise, whenever you write something, one of the parsers is responsible for converting whatever object or\nprimitive you try to write into a byte stream that can be transmitted and stored at the resource the URI references."),(0,o.kt)("p",null,"To parse or serialize something manually, you usually use the static methods ",(0,o.kt)("a",{parentName:"p",href:"/WSF/docs/api/classes/divine_uri.Parser#parse"},"Parser.parse")," and ",(0,o.kt)("a",{parentName:"p",href:"/WSF/docs/api/classes/divine_uri.Parser#serialize"},"Parser.serialize"),", but\nit's also possible to manually create a parser and calling its methods directly. Please see ",(0,o.kt)("a",{parentName:"p",href:"/WSF/docs/api/classes/divine_uri.Parser"},"Parser")," for a list of all\nknown parsers and what media types the handle."),(0,o.kt)("p",null,"Additionally, byte streams may also be transformed by ",(0,o.kt)("em",{parentName:"p"},"encoders"),". Like parsers, encoders are usually invoked manually\nusing ",(0,o.kt)("a",{parentName:"p",href:"/WSF/docs/api/classes/divine_uri.Encoder#encode"},"Encoder.encode")," and ",(0,o.kt)("a",{parentName:"p",href:"/WSF/docs/api/classes/divine_uri.Encoder#decode"},"Encoder.decode"),", but you can instantiate encoders yourself too. See ",(0,o.kt)("a",{parentName:"p",href:"/WSF/docs/api/classes/divine_uri.Encoder"},"Encoder")," for a list of\navailable encoders. Encoders are used to handle headers such as ",(0,o.kt)("inlineCode",{parentName:"p"},"content-encoding")," and ",(0,o.kt)("inlineCode",{parentName:"p"},"transfer-encoding")," in HTTP, or\n",(0,o.kt)("inlineCode",{parentName:"p"},"content-transfer-encoding")," in MIME."),(0,o.kt)("p",null,"In the following sections, we'll discuss some of the available parsers and encoders."))}d.isMDXComponent=!0}}]);