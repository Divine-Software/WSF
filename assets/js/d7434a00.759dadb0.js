"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[2330],{9613:(e,t,r)=>{r.d(t,{Zo:()=>d,kt:()=>k});var n=r(9496);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function i(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function l(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?i(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function s(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},i=Object.keys(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var o=n.createContext({}),p=function(e){var t=n.useContext(o),r=t;return e&&(r="function"==typeof e?e(t):l(l({},t),e)),r},d=function(e){var t=p(e.components);return n.createElement(o.Provider,{value:t},e.children)},u="mdxType",c={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},m=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,i=e.originalType,o=e.parentName,d=s(e,["components","mdxType","originalType","parentName"]),u=p(r),m=a,k=u["".concat(o,".").concat(m)]||u[m]||c[m]||i;return r?n.createElement(k,l(l({ref:t},d),{},{components:r})):n.createElement(k,l({ref:t},d))}));function k(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=r.length,l=new Array(i);l[0]=m;var s={};for(var o in t)hasOwnProperty.call(t,o)&&(s[o]=t[o]);s.originalType=e,s[u]="string"==typeof e?e:a,l[1]=s;for(var p=2;p<i;p++)l[p]=r[p];return n.createElement.apply(null,l)}return n.createElement.apply(null,r)}m.displayName="MDXCreateElement"},565:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>o,contentTitle:()=>l,default:()=>c,frontMatter:()=>i,metadata:()=>s,toc:()=>p});var n=r(2564),a=(r(9496),r(9613));const i={id:"divine_uri.DBQuery",title:"Class: DBQuery",sidebar_label:"@divine/uri.DBQuery",custom_edit_url:null},l=void 0,s={unversionedId:"api/classes/divine_uri.DBQuery",id:"api/classes/divine_uri.DBQuery",title:"Class: DBQuery",description:"@divine/uri.DBQuery",source:"@site/docs/api/classes/divine_uri.DBQuery.md",sourceDirName:"api/classes",slug:"/api/classes/divine_uri.DBQuery",permalink:"/WSF/docs/api/classes/divine_uri.DBQuery",draft:!1,editUrl:null,tags:[],version:"current",frontMatter:{id:"divine_uri.DBQuery",title:"Class: DBQuery",sidebar_label:"@divine/uri.DBQuery",custom_edit_url:null},sidebar:"tutorialSidebar",previous:{title:"@divine/uri.DBError",permalink:"/WSF/docs/api/classes/divine_uri.DBError"},next:{title:"@divine/uri.DBResult",permalink:"/WSF/docs/api/classes/divine_uri.DBResult"}},o={},p=[{value:"Constructors",id:"constructors",level:2},{value:"constructor",id:"constructor",level:3},{value:"Parameters",id:"parameters",level:4},{value:"Defined in",id:"defined-in",level:4},{value:"Accessors",id:"accessors",level:2},{value:"params",id:"params",level:3},{value:"Returns",id:"returns",level:4},{value:"Defined in",id:"defined-in-1",level:4},{value:"Methods",id:"methods",level:2},{value:"toString",id:"tostring",level:3},{value:"Parameters",id:"parameters-1",level:4},{value:"Returns",id:"returns-1",level:4},{value:"Defined in",id:"defined-in-2",level:4}],d={toc:p},u="wrapper";function c(e){let{components:t,...r}=e;return(0,a.kt)(u,(0,n.Z)({},d,r,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"/WSF/docs/api/modules/divine_uri"},"@divine/uri"),".DBQuery"),(0,a.kt)("h2",{id:"constructors"},"Constructors"),(0,a.kt)("h3",{id:"constructor"},"constructor"),(0,a.kt)("p",null,"\u2022 ",(0,a.kt)("strong",{parentName:"p"},"new DBQuery"),"(",(0,a.kt)("inlineCode",{parentName:"p"},"query"),", ",(0,a.kt)("inlineCode",{parentName:"p"},"params"),")"),(0,a.kt)("p",null,"Constructs a new DBQuery object."),(0,a.kt)("p",null,"If one of the parameters is itself a DBQuery, the query will be merged with this one at constructon time and its\nparameters adopted."),(0,a.kt)("p",null,"This constructor is semi-private: You should use ",(0,a.kt)("a",{parentName:"p",href:"/WSF/docs/api/modules/divine_uri#q"},"q"),", ",(0,a.kt)("a",{parentName:"p",href:"/WSF/docs/api/namespaces/divine_uri.q#quote"},"quote"),", ",(0,a.kt)("a",{parentName:"p",href:"/WSF/docs/api/namespaces/divine_uri.q#raw"},"raw"),", ",(0,a.kt)("a",{parentName:"p",href:"/WSF/docs/api/namespaces/divine_uri.q#join"},"join"),",\n",(0,a.kt)("a",{parentName:"p",href:"/WSF/docs/api/namespaces/divine_uri.q#list"},"list"),", ",(0,a.kt)("a",{parentName:"p",href:"/WSF/docs/api/namespaces/divine_uri.q#values"},"values")," or ",(0,a.kt)("a",{parentName:"p",href:"/WSF/docs/api/namespaces/divine_uri.q#assign"},"assign")," to construct queries, or just call ",(0,a.kt)("a",{parentName:"p",href:"/WSF/docs/api/classes/divine_uri.DatabaseURI#query"},"query"),"\ndirectly."),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},(0,a.kt)("inlineCode",{parentName:"strong"},"Throws"))),(0,a.kt)("p",null,"TypeError  If one of the parameters is ",(0,a.kt)("inlineCode",{parentName:"p"},"undefined")," or if a nested DBQuery is invalid."),(0,a.kt)("h4",{id:"parameters"},"Parameters"),(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,a.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,a.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:"left"},(0,a.kt)("inlineCode",{parentName:"td"},"query")),(0,a.kt)("td",{parentName:"tr",align:"left"},"readonly ",(0,a.kt)("inlineCode",{parentName:"td"},"string"),"[]"),(0,a.kt)("td",{parentName:"tr",align:"left"},"The query segments, much like a template literal string array.")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:"left"},(0,a.kt)("inlineCode",{parentName:"td"},"params")),(0,a.kt)("td",{parentName:"tr",align:"left"},(0,a.kt)("inlineCode",{parentName:"td"},"unknown"),"[]"),(0,a.kt)("td",{parentName:"tr",align:"left"},"The parameters. There should be exactly one less parameter than query segments.")))),(0,a.kt)("h4",{id:"defined-in"},"Defined in"),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"https://github.com/Divine-Software/WSF/blob/c3447be/uri/src/protocols/database.ts#L395"},"uri/src/protocols/database.ts:395")),(0,a.kt)("h2",{id:"accessors"},"Accessors"),(0,a.kt)("h3",{id:"params"},"params"),(0,a.kt)("p",null,"\u2022 ",(0,a.kt)("inlineCode",{parentName:"p"},"get")," ",(0,a.kt)("strong",{parentName:"p"},"params"),"(): ",(0,a.kt)("inlineCode",{parentName:"p"},"unknown"),"[]"),(0,a.kt)("p",null,"The parameters as an array"),(0,a.kt)("h4",{id:"returns"},"Returns"),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"unknown"),"[]"),(0,a.kt)("h4",{id:"defined-in-1"},"Defined in"),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"https://github.com/Divine-Software/WSF/blob/c3447be/uri/src/protocols/database.ts#L431"},"uri/src/protocols/database.ts:431")),(0,a.kt)("h2",{id:"methods"},"Methods"),(0,a.kt)("h3",{id:"tostring"},"toString"),(0,a.kt)("p",null,"\u25b8 ",(0,a.kt)("strong",{parentName:"p"},"toString"),"(",(0,a.kt)("inlineCode",{parentName:"p"},"placeholder?"),"): ",(0,a.kt)("inlineCode",{parentName:"p"},"string")),(0,a.kt)("p",null,"Converts this query into a string."),(0,a.kt)("h4",{id:"parameters-1"},"Parameters"),(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,a.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,a.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:"left"},(0,a.kt)("inlineCode",{parentName:"td"},"placeholder")),(0,a.kt)("td",{parentName:"tr",align:"left"},"(",(0,a.kt)("inlineCode",{parentName:"td"},"value"),": ",(0,a.kt)("inlineCode",{parentName:"td"},"unknown"),", ",(0,a.kt)("inlineCode",{parentName:"td"},"index"),": ",(0,a.kt)("inlineCode",{parentName:"td"},"number"),", ",(0,a.kt)("inlineCode",{parentName:"td"},"query"),": ",(0,a.kt)("a",{parentName:"td",href:"/WSF/docs/api/classes/divine_uri.DBQuery"},(0,a.kt)("inlineCode",{parentName:"a"},"DBQuery")),") => ",(0,a.kt)("inlineCode",{parentName:"td"},"string")),(0,a.kt)("td",{parentName:"tr",align:"left"},"A function that returns a placeholder for each parameter. Might return just ",(0,a.kt)("inlineCode",{parentName:"td"},"?")," or ",(0,a.kt)("inlineCode",{parentName:"td"},"$1"),"/",(0,a.kt)("inlineCode",{parentName:"td"},"$2"),"/etc, or actually encode the parameter to make the resulting query safe for execution.")))),(0,a.kt)("h4",{id:"returns-1"},"Returns"),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"string")),(0,a.kt)("p",null,"The query as a string, with the parameters expanded by the ",(0,a.kt)("inlineCode",{parentName:"p"},"placeholder")," function."),(0,a.kt)("h4",{id:"defined-in-2"},"Defined in"),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"https://github.com/Divine-Software/WSF/blob/c3447be/uri/src/protocols/database.ts#L444"},"uri/src/protocols/database.ts:444")))}c.isMDXComponent=!0}}]);