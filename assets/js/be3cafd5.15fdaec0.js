"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[9402],{9613:function(e,t,a){a.d(t,{Zo:function(){return o},kt:function(){return u}});var n=a(9496);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function i(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function l(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?i(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):i(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function d(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},i=Object.keys(e);for(n=0;n<i.length;n++)a=i[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)a=i[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var p=n.createContext({}),s=function(e){var t=n.useContext(p),a=t;return e&&(a="function"==typeof e?e(t):l(l({},t),e)),a},o=function(e){var t=s(e.components);return n.createElement(p.Provider,{value:t},e.children)},m={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},k=n.forwardRef((function(e,t){var a=e.components,r=e.mdxType,i=e.originalType,p=e.parentName,o=d(e,["components","mdxType","originalType","parentName"]),k=s(a),u=r,h=k["".concat(p,".").concat(u)]||k[u]||m[u]||i;return a?n.createElement(h,l(l({ref:t},o),{},{components:a})):n.createElement(h,l({ref:t},o))}));function u(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=a.length,l=new Array(i);l[0]=k;var d={};for(var p in t)hasOwnProperty.call(t,p)&&(d[p]=t[p]);d.originalType=e,d.mdxType="string"==typeof e?e:r,l[1]=d;for(var s=2;s<i;s++)l[s]=a[s];return n.createElement.apply(null,l)}return n.createElement.apply(null,a)}k.displayName="MDXCreateElement"},9818:function(e,t,a){a.r(t),a.d(t,{frontMatter:function(){return d},contentTitle:function(){return p},metadata:function(){return s},toc:function(){return o},default:function(){return k}});var n=a(7813),r=a(7044),i=(a(9496),a(9613)),l=["components"],d={id:"divine_uri.DatabaseURI",title:"Class: DatabaseURI",sidebar_label:"DatabaseURI",custom_edit_url:null},p=void 0,s={unversionedId:"api/classes/divine_uri.DatabaseURI",id:"api/classes/divine_uri.DatabaseURI",title:"Class: DatabaseURI",description:"@divine/uri.DatabaseURI",source:"@site/docs/api/classes/divine_uri.DatabaseURI.md",sourceDirName:"api/classes",slug:"/api/classes/divine_uri.DatabaseURI",permalink:"/WSF/docs/api/classes/divine_uri.DatabaseURI",editUrl:null,tags:[],version:"current",frontMatter:{id:"divine_uri.DatabaseURI",title:"Class: DatabaseURI",sidebar_label:"DatabaseURI",custom_edit_url:null},sidebar:"tutorialSidebar",previous:{title:"DBResult",permalink:"/WSF/docs/api/classes/divine_uri.DBResult"},next:{title:"Encoder",permalink:"/WSF/docs/api/classes/divine_uri.Encoder"}},o=[{value:"CRUD row operations with <em>DB references</em>",id:"crud-row-operations-with-db-references",children:[{value:"Filters",id:"filters",children:[],level:3},{value:"Examples",id:"examples",children:[],level:3}],level:2},{value:"Custom SQL queries",id:"custom-sql-queries",children:[],level:2},{value:"Transactions",id:"transactions",children:[{value:"Deadlock handling",id:"deadlock-handling",children:[],level:3}],level:2},{value:"Change Data Capture",id:"change-data-capture",children:[],level:2},{value:"Shutting down",id:"shutting-down",children:[],level:2},{value:"Hierarchy",id:"hierarchy",children:[],level:2},{value:"Constructors",id:"constructors",children:[{value:"constructor",id:"constructor",children:[{value:"Parameters",id:"parameters",children:[],level:4},{value:"Inherited from",id:"inherited-from",children:[],level:4},{value:"Defined in",id:"defined-in",children:[],level:4},{value:"Parameters",id:"parameters-1",children:[],level:4},{value:"Inherited from",id:"inherited-from-1",children:[],level:4},{value:"Defined in",id:"defined-in-1",children:[],level:4}],level:3}],level:2},{value:"Properties",id:"properties",children:[{value:"hash",id:"hash",children:[{value:"Inherited from",id:"inherited-from-2",children:[],level:4},{value:"Defined in",id:"defined-in-2",children:[],level:4}],level:3},{value:"host",id:"host",children:[{value:"Inherited from",id:"inherited-from-3",children:[],level:4},{value:"Defined in",id:"defined-in-3",children:[],level:4}],level:3},{value:"hostname",id:"hostname",children:[{value:"Inherited from",id:"inherited-from-4",children:[],level:4},{value:"Defined in",id:"defined-in-4",children:[],level:4}],level:3},{value:"href",id:"href",children:[{value:"Inherited from",id:"inherited-from-5",children:[],level:4},{value:"Defined in",id:"defined-in-5",children:[],level:4}],level:3},{value:"origin",id:"origin",children:[{value:"Inherited from",id:"inherited-from-6",children:[],level:4},{value:"Defined in",id:"defined-in-6",children:[],level:4}],level:3},{value:"password",id:"password",children:[{value:"Inherited from",id:"inherited-from-7",children:[],level:4},{value:"Defined in",id:"defined-in-7",children:[],level:4}],level:3},{value:"pathname",id:"pathname",children:[{value:"Inherited from",id:"inherited-from-8",children:[],level:4},{value:"Defined in",id:"defined-in-8",children:[],level:4}],level:3},{value:"port",id:"port",children:[{value:"Inherited from",id:"inherited-from-9",children:[],level:4},{value:"Defined in",id:"defined-in-9",children:[],level:4}],level:3},{value:"protocol",id:"protocol",children:[{value:"Inherited from",id:"inherited-from-10",children:[],level:4},{value:"Defined in",id:"defined-in-10",children:[],level:4}],level:3},{value:"search",id:"search",children:[{value:"Inherited from",id:"inherited-from-11",children:[],level:4},{value:"Defined in",id:"defined-in-11",children:[],level:4}],level:3},{value:"searchParams",id:"searchparams",children:[{value:"Inherited from",id:"inherited-from-12",children:[],level:4},{value:"Defined in",id:"defined-in-12",children:[],level:4}],level:3},{value:"selectors",id:"selectors",children:[{value:"Type declaration",id:"type-declaration",children:[],level:4},{value:"Inherited from",id:"inherited-from-13",children:[],level:4},{value:"Defined in",id:"defined-in-13",children:[],level:4}],level:3},{value:"username",id:"username",children:[{value:"Inherited from",id:"inherited-from-14",children:[],level:4},{value:"Defined in",id:"defined-in-14",children:[],level:4}],level:3},{value:"FIELDS",id:"fields",children:[{value:"Inherited from",id:"inherited-from-15",children:[],level:4},{value:"Defined in",id:"defined-in-15",children:[],level:4}],level:3},{value:"FINALIZE",id:"finalize",children:[{value:"Inherited from",id:"inherited-from-16",children:[],level:4},{value:"Defined in",id:"defined-in-16",children:[],level:4}],level:3},{value:"HEADERS",id:"headers",children:[{value:"Inherited from",id:"inherited-from-17",children:[],level:4},{value:"Defined in",id:"defined-in-17",children:[],level:4}],level:3},{value:"NULL",id:"null",children:[{value:"Inherited from",id:"inherited-from-18",children:[],level:4},{value:"Defined in",id:"defined-in-18",children:[],level:4}],level:3},{value:"STATUS",id:"status",children:[{value:"Inherited from",id:"inherited-from-19",children:[],level:4},{value:"Defined in",id:"defined-in-19",children:[],level:4}],level:3},{value:"STATUS_TEXT",id:"status_text",children:[{value:"Inherited from",id:"inherited-from-20",children:[],level:4},{value:"Defined in",id:"defined-in-20",children:[],level:4}],level:3},{value:"VOID",id:"void",children:[{value:"Inherited from",id:"inherited-from-21",children:[],level:4},{value:"Defined in",id:"defined-in-21",children:[],level:4}],level:3}],level:2},{value:"Methods",id:"methods",children:[{value:"$",id:"",children:[{value:"Parameters",id:"parameters-2",children:[],level:4},{value:"Returns",id:"returns",children:[],level:4},{value:"Overrides",id:"overrides",children:[],level:4},{value:"Defined in",id:"defined-in-22",children:[],level:4}],level:3},{value:"asyncIterator",id:"asynciterator",children:[{value:"Returns",id:"returns-1",children:[],level:4},{value:"Inherited from",id:"inherited-from-22",children:[],level:4},{value:"Defined in",id:"defined-in-23",children:[],level:4}],level:3},{value:"_createDBConnectionPool",id:"_createdbconnectionpool",children:[{value:"Parameters",id:"parameters-3",children:[],level:4},{value:"Returns",id:"returns-2",children:[],level:4},{value:"Defined in",id:"defined-in-24",children:[],level:4}],level:3},{value:"_getAuthorization",id:"_getauthorization",children:[{value:"Parameters",id:"parameters-4",children:[],level:4},{value:"Returns",id:"returns-3",children:[],level:4},{value:"Inherited from",id:"inherited-from-23",children:[],level:4},{value:"Defined in",id:"defined-in-25",children:[],level:4}],level:3},{value:"_getBestSelector",id:"_getbestselector",children:[{value:"Type parameters",id:"type-parameters",children:[],level:4},{value:"Parameters",id:"parameters-5",children:[],level:4},{value:"Returns",id:"returns-4",children:[],level:4},{value:"Inherited from",id:"inherited-from-24",children:[],level:4},{value:"Defined in",id:"defined-in-26",children:[],level:4}],level:3},{value:"_guessContentType",id:"_guesscontenttype",children:[{value:"Parameters",id:"parameters-6",children:[],level:4},{value:"Returns",id:"returns-5",children:[],level:4},{value:"Inherited from",id:"inherited-from-25",children:[],level:4},{value:"Defined in",id:"defined-in-27",children:[],level:4}],level:3},{value:"_makeIOError",id:"_makeioerror",children:[{value:"Parameters",id:"parameters-7",children:[],level:4},{value:"Returns",id:"returns-6",children:[],level:4},{value:"Inherited from",id:"inherited-from-26",children:[],level:4},{value:"Defined in",id:"defined-in-28",children:[],level:4}],level:3},{value:"addSelector",id:"addselector",children:[{value:"Type parameters",id:"type-parameters-1",children:[],level:4},{value:"Parameters",id:"parameters-8",children:[],level:4},{value:"Returns",id:"returns-7",children:[],level:4},{value:"Inherited from",id:"inherited-from-27",children:[],level:4},{value:"Defined in",id:"defined-in-29",children:[],level:4}],level:3},{value:"append",id:"append",children:[{value:"Type parameters",id:"type-parameters-2",children:[],level:4},{value:"Parameters",id:"parameters-9",children:[],level:4},{value:"Returns",id:"returns-8",children:[],level:4},{value:"Overrides",id:"overrides-1",children:[],level:4},{value:"Defined in",id:"defined-in-30",children:[],level:4}],level:3},{value:"close",id:"close",children:[{value:"Returns",id:"returns-9",children:[],level:4},{value:"Overrides",id:"overrides-2",children:[],level:4},{value:"Defined in",id:"defined-in-31",children:[],level:4}],level:3},{value:"info",id:"info",children:[{value:"Type parameters",id:"type-parameters-3",children:[],level:4},{value:"Returns",id:"returns-10",children:[],level:4},{value:"Inherited from",id:"inherited-from-28",children:[],level:4},{value:"Defined in",id:"defined-in-32",children:[],level:4}],level:3},{value:"list",id:"list",children:[{value:"Type parameters",id:"type-parameters-4",children:[],level:4},{value:"Returns",id:"returns-11",children:[],level:4},{value:"Inherited from",id:"inherited-from-29",children:[],level:4},{value:"Defined in",id:"defined-in-33",children:[],level:4}],level:3},{value:"load",id:"load",children:[{value:"Type parameters",id:"type-parameters-5",children:[],level:4},{value:"Parameters",id:"parameters-10",children:[],level:4},{value:"Returns",id:"returns-12",children:[],level:4},{value:"Overrides",id:"overrides-3",children:[],level:4},{value:"Defined in",id:"defined-in-34",children:[],level:4}],level:3},{value:"modify",id:"modify",children:[{value:"Type parameters",id:"type-parameters-6",children:[],level:4},{value:"Parameters",id:"parameters-11",children:[],level:4},{value:"Returns",id:"returns-13",children:[],level:4},{value:"Overrides",id:"overrides-4",children:[],level:4},{value:"Defined in",id:"defined-in-35",children:[],level:4}],level:3},{value:"query",id:"query",children:[{value:"Type parameters",id:"type-parameters-7",children:[],level:4},{value:"Parameters",id:"parameters-12",children:[],level:4},{value:"Returns",id:"returns-14",children:[],level:4},{value:"Overrides",id:"overrides-5",children:[],level:4},{value:"Defined in",id:"defined-in-36",children:[],level:4},{value:"Type parameters",id:"type-parameters-8",children:[],level:4},{value:"Parameters",id:"parameters-13",children:[],level:4},{value:"Returns",id:"returns-15",children:[],level:4},{value:"Overrides",id:"overrides-6",children:[],level:4},{value:"Defined in",id:"defined-in-37",children:[],level:4},{value:"Type parameters",id:"type-parameters-9",children:[],level:4},{value:"Parameters",id:"parameters-14",children:[],level:4},{value:"Returns",id:"returns-16",children:[],level:4},{value:"Overrides",id:"overrides-7",children:[],level:4},{value:"Defined in",id:"defined-in-38",children:[],level:4},{value:"Type parameters",id:"type-parameters-10",children:[],level:4},{value:"Parameters",id:"parameters-15",children:[],level:4},{value:"Returns",id:"returns-17",children:[],level:4},{value:"Overrides",id:"overrides-8",children:[],level:4},{value:"Defined in",id:"defined-in-39",children:[],level:4},{value:"Type parameters",id:"type-parameters-11",children:[],level:4},{value:"Parameters",id:"parameters-16",children:[],level:4},{value:"Returns",id:"returns-18",children:[],level:4},{value:"Overrides",id:"overrides-9",children:[],level:4},{value:"Defined in",id:"defined-in-40",children:[],level:4}],level:3},{value:"remove",id:"remove",children:[{value:"Type parameters",id:"type-parameters-12",children:[],level:4},{value:"Parameters",id:"parameters-17",children:[],level:4},{value:"Returns",id:"returns-19",children:[],level:4},{value:"Overrides",id:"overrides-10",children:[],level:4},{value:"Defined in",id:"defined-in-41",children:[],level:4}],level:3},{value:"save",id:"save",children:[{value:"Type parameters",id:"type-parameters-13",children:[],level:4},{value:"Parameters",id:"parameters-18",children:[],level:4},{value:"Returns",id:"returns-20",children:[],level:4},{value:"Overrides",id:"overrides-11",children:[],level:4},{value:"Defined in",id:"defined-in-42",children:[],level:4}],level:3},{value:"toJSON",id:"tojson",children:[{value:"Returns",id:"returns-21",children:[],level:4},{value:"Inherited from",id:"inherited-from-30",children:[],level:4},{value:"Defined in",id:"defined-in-43",children:[],level:4}],level:3},{value:"toString",id:"tostring",children:[{value:"Returns",id:"returns-22",children:[],level:4},{value:"Inherited from",id:"inherited-from-31",children:[],level:4},{value:"Defined in",id:"defined-in-44",children:[],level:4}],level:3},{value:"watch",id:"watch",children:[{value:"Type parameters",id:"type-parameters-14",children:[],level:4},{value:"Parameters",id:"parameters-19",children:[],level:4},{value:"Returns",id:"returns-23",children:[],level:4},{value:"Overrides",id:"overrides-12",children:[],level:4},{value:"Defined in",id:"defined-in-45",children:[],level:4},{value:"Type parameters",id:"type-parameters-15",children:[],level:4},{value:"Parameters",id:"parameters-20",children:[],level:4},{value:"Returns",id:"returns-24",children:[],level:4},{value:"Overrides",id:"overrides-13",children:[],level:4},{value:"Defined in",id:"defined-in-46",children:[],level:4},{value:"Type parameters",id:"type-parameters-16",children:[],level:4},{value:"Parameters",id:"parameters-21",children:[],level:4},{value:"Returns",id:"returns-25",children:[],level:4},{value:"Overrides",id:"overrides-14",children:[],level:4},{value:"Defined in",id:"defined-in-47",children:[],level:4}],level:3},{value:"$",id:"-1",children:[{value:"Parameters",id:"parameters-22",children:[],level:4},{value:"Returns",id:"returns-26",children:[],level:4},{value:"Inherited from",id:"inherited-from-32",children:[],level:4},{value:"Defined in",id:"defined-in-48",children:[],level:4}],level:3},{value:"register",id:"register",children:[{value:"Parameters",id:"parameters-23",children:[],level:4},{value:"Returns",id:"returns-27",children:[],level:4},{value:"Inherited from",id:"inherited-from-33",children:[],level:4},{value:"Defined in",id:"defined-in-49",children:[],level:4}],level:3}],level:2}],m={toc:o};function k(e){var t=e.components,a=(0,r.Z)(e,l);return(0,i.kt)("wrapper",(0,n.Z)({},m,a,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"/WSF/docs/api/modules/divine_uri"},"@divine/uri"),".DatabaseURI"),(0,i.kt)("p",null,"The database URI base class defines the API for all database-specific protocols. It provides CRUD access to database\nrows via ",(0,i.kt)("a",{parentName:"p",href:"/WSF/docs/api/classes/divine_uri.DatabaseURI#load"},"load"),", ",(0,i.kt)("a",{parentName:"p",href:"/WSF/docs/api/classes/divine_uri.DatabaseURI#save"},"save"),", ",(0,i.kt)("a",{parentName:"p",href:"/WSF/docs/api/classes/divine_uri.DatabaseURI#append"},"append"),", ",(0,i.kt)("a",{parentName:"p",href:"/WSF/docs/api/classes/divine_uri.DatabaseURI#modify"},"modify")," and ",(0,i.kt)("a",{parentName:"p",href:"/WSF/docs/api/classes/divine_uri.DatabaseURI#remove"},"remove"),", ",(0,i.kt)("a",{parentName:"p",href:"/WSF/docs/api/classes/divine_uri.DatabaseURI#query"},"query"),' for executing custom queries in a\ndatabases-specific query language (read "SQL") and ',(0,i.kt)("a",{parentName:"p",href:"/WSF/docs/api/classes/divine_uri.DatabaseURI#watch"},"watch")," for ",(0,i.kt)("em",{parentName:"p"},"change data capture"),", provided the database and\ndriver supports it."),(0,i.kt)("p",null,"Below is a list of all known supported databases:"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:null},"Database"),(0,i.kt)("th",{parentName:"tr",align:null},"Database driver class"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"CockroachDB"),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("a",{parentName:"td",href:"/WSF/docs/api/classes/divine_uri_postgres_protocol.PostgresURI"},"PostgresURI"))),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"H2"),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("a",{parentName:"td",href:"/WSF/docs/api/classes/divine_uri_jdbc_protocol.JDBCURI"},"JDBCURI"),"\u2020")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"MariaDB"),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("a",{parentName:"td",href:"/WSF/docs/api/classes/divine_uri_mysql_protocol.MySQLURI"},"MySQLURI"))),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"MySQL"),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("a",{parentName:"td",href:"/WSF/docs/api/classes/divine_uri_mysql_protocol.MySQLURI"},"MySQLURI"))),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"PostgreSQL"),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("a",{parentName:"td",href:"/WSF/docs/api/classes/divine_uri_postgres_protocol.PostgresURI"},"PostgresURI"))),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"SQL Server"),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("a",{parentName:"td",href:"/WSF/docs/api/classes/divine_uri_tds_protocol.TDSURI"},"TDSURI"))),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"SQLite"),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("a",{parentName:"td",href:"/WSF/docs/api/classes/divine_uri_sqlite_protocol.SQLiteURI"},"SQLiteURI"))))),(0,i.kt)("p",null,"\u2020 In theory, any JDBC-enabled database should have at least basic support, but our unit tests are only run against H2."),(0,i.kt)("h2",{id:"crud-row-operations-with-db-references"},"CRUD row operations with ",(0,i.kt)("em",{parentName:"h2"},"DB references")),(0,i.kt)("p",null,"In order to provide CRUD (",(0,i.kt)("em",{parentName:"p"},"create"),", ",(0,i.kt)("em",{parentName:"p"},"read"),", ",(0,i.kt)("em",{parentName:"p"},"update")," and ",(0,i.kt)("em",{parentName:"p"},"delete"),") operations for database rows, DatabaseURI uses a\nsmall expression language called ",(0,i.kt)("em",{parentName:"p"},"DB reference")," in the URI fragment to specify what table, rows and columns to\naccess. A DB reference looks like this:"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"#")," ",(0,i.kt)("em",{parentName:"p"},"table")," { ",(0,i.kt)("inlineCode",{parentName:"p"},"[")," ",(0,i.kt)("em",{parentName:"p"},"keys")," ",(0,i.kt)("inlineCode",{parentName:"p"},"]")," } { ",(0,i.kt)("inlineCode",{parentName:"p"},"(")," ",(0,i.kt)("em",{parentName:"p"},"columns")," ",(0,i.kt)("inlineCode",{parentName:"p"},")")," } { ",(0,i.kt)("inlineCode",{parentName:"p"},";")," ",(0,i.kt)("em",{parentName:"p"},"scope")," } { ",(0,i.kt)("inlineCode",{parentName:"p"},"?")," ",(0,i.kt)("em",{parentName:"p"},"filter")," } { ",(0,i.kt)("inlineCode",{parentName:"p"},"&")," ",(0,i.kt)("em",{parentName:"p"},"name")," ",(0,i.kt)("inlineCode",{parentName:"p"},"=")," ",(0,i.kt)("em",{parentName:"p"},"value")," ... }"),(0,i.kt)("p",null,"It always starts with a hash sign, which signals the start of the URI fragment part, followed by a reference to what\ntable to access. The ",(0,i.kt)("em",{parentName:"p"},"table")," value may actually be a forward slash-separated table path, so it's possible to specify\ncatalog and schema as well (similar to how the dot is used in SQL)."),(0,i.kt)("p",null,"The remaining parts of the expression is optional (well, depeneding on what operation you're trying to perform)."),(0,i.kt)("p",null,"The ",(0,i.kt)("a",{parentName:"p",href:"/WSF/docs/api/classes/divine_uri.DatabaseURI#save"},"save")," operation may, depending on the actual database, require the primary key in order to work. The name of\nthe primary key optionally follows the table name, enclosed by square brackets. ",(0,i.kt)("em",{parentName:"p"},"keys")," may be a comma-separated list\nof columns, if the primary key spans multiple columns."),(0,i.kt)("p",null,"In order to limit what colomns to operate on, a list of ",(0,i.kt)("em",{parentName:"p"},"columns"),", enclosed by parentheses, may then follow. The\ndefault is all columns when reading and all the columns present in the data when writing."),(0,i.kt)("p",null,"Next up: ",(0,i.kt)("em",{parentName:"p"},"scope"),". The scope can be one of ",(0,i.kt)("inlineCode",{parentName:"p"},"scalar")," (a single cell), ",(0,i.kt)("inlineCode",{parentName:"p"},"one")," (a single row), ",(0,i.kt)("inlineCode",{parentName:"p"},"unique")," (distinct rows) or\n",(0,i.kt)("inlineCode",{parentName:"p"},"all")," (multiple rows). It's specifies how data should be interpreted when reading or writing."),(0,i.kt)("p",null,"When reading, a ",(0,i.kt)("em",{parentName:"p"},"filter")," specifies what rows to return. The filter part begins with a question mark followed by a\n(possible nested) expression enclosed by parentheses. Please see ",(0,i.kt)("em",{parentName:"p"},"Filters")," below for the filter syntax."),(0,i.kt)("p",null,"Finally, one or more parameters may be specified. Currently, parameters are only defined for read operations. A\nparameter begins with an ampersand followed by the ",(0,i.kt)("em",{parentName:"p"},"name")," of the parameter, and equals sign (",(0,i.kt)("inlineCode",{parentName:"p"},"="),") and the ",(0,i.kt)("em",{parentName:"p"},"value"),".\nThe available parameters are ",(0,i.kt)("inlineCode",{parentName:"p"},"offset")," (skip rows in the result set), ",(0,i.kt)("inlineCode",{parentName:"p"},"count")," (limit the result set), ",(0,i.kt)("inlineCode",{parentName:"p"},"sort")," (to\nspecify a sort column; precede with a dash to reverse the sort order) and ",(0,i.kt)("inlineCode",{parentName:"p"},"lock")," (either ",(0,i.kt)("inlineCode",{parentName:"p"},"read")," or ",(0,i.kt)("inlineCode",{parentName:"p"},"write"),") to lock\nthe rows returned."),(0,i.kt)("h3",{id:"filters"},"Filters"),(0,i.kt)("p",null,"Relational filters are written as ",(0,i.kt)("inlineCode",{parentName:"p"},"(")," ",(0,i.kt)("em",{parentName:"p"},"relation")," ",(0,i.kt)("inlineCode",{parentName:"p"},",")," ",(0,i.kt)("em",{parentName:"p"},"column")," ",(0,i.kt)("inlineCode",{parentName:"p"},",")," ",(0,i.kt)("em",{parentName:"p"},"value")," ",(0,i.kt)("inlineCode",{parentName:"p"},")"),", where ",(0,i.kt)("em",{parentName:"p"},"relation")," is one of ",(0,i.kt)("inlineCode",{parentName:"p"},"lt")," (less\nthan), ",(0,i.kt)("inlineCode",{parentName:"p"},"le")," (less than or equal), ",(0,i.kt)("inlineCode",{parentName:"p"},"eq")," (equal), ",(0,i.kt)("inlineCode",{parentName:"p"},"ge")," (greater than or equal) and ",(0,i.kt)("inlineCode",{parentName:"p"},"gt")," (greater than). These kinds of\nfilter expressions test a column against a fixed value."),(0,i.kt)("p",null,"There are also boolean filters. To require two or more filters to all be true, write ",(0,i.kt)("inlineCode",{parentName:"p"},"(")," ",(0,i.kt)("inlineCode",{parentName:"p"},"and")," ",(0,i.kt)("em",{parentName:"p"},"filter1")," ...\n",(0,i.kt)("em",{parentName:"p"},"filterN")," ",(0,i.kt)("inlineCode",{parentName:"p"},")"),". To require only one of several filters to be true, write ",(0,i.kt)("inlineCode",{parentName:"p"},"(")," ",(0,i.kt)("inlineCode",{parentName:"p"},"or")," ",(0,i.kt)("em",{parentName:"p"},"filter1")," ... ",(0,i.kt)("em",{parentName:"p"},"filterN")," ",(0,i.kt)("inlineCode",{parentName:"p"},")"),". It's\nalso possible to invert a filter by writing ",(0,i.kt)("inlineCode",{parentName:"p"},"(")," ",(0,i.kt)("inlineCode",{parentName:"p"},"not")," ",(0,i.kt)("em",{parentName:"p"},"filter")," ",(0,i.kt)("inlineCode",{parentName:"p"},")"),"."),(0,i.kt)("p",null,"Filters may be nested, so the following filter part of a DB reference would return all products that cost between 10\nand 20 USD as well as those being completely free:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"#products?(or(and(ge,amount,10)(le,amount,20))(eq,amount,0))\n")),(0,i.kt)("p",null,"This syntax, while perhaps a bit exotic for both JavaScript and SQL developers, was chosen so that filters do not\nhave to be URI-encoded when beeing included in the URI fragment."),(0,i.kt)("p",null,"As a general rule, filters should be kept simple with just one or two relations. Otherwise, it's probably better to\nsimply write an SQL query instead."),(0,i.kt)("h3",{id:"examples"},"Examples"),(0,i.kt)("p",null,"So why use DB references? Well, they can save you a lot of work! Assuming ",(0,i.kt)("inlineCode",{parentName:"p"},"db")," is your DatabaseURI, here are a few\nexamples."),(0,i.kt)("p",null,"Insert a row:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-ts"},"const user = await db.$`#users`.append<User>({ name: 'Martin', language: 'sv', country: 'se' });\n")),(0,i.kt)("p",null,"Insert multiple rows:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-ts"},"const user = await db.$`#users`.append<User[]>([\n    { name: 'Martin', language: 'sv', country: 'se' },\n    { name: 'Vilgot', language: 'es', country: 'mx' }\n]);\n")),(0,i.kt)("p",null,"Retrieve a row:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-ts"},"const user = await db.$`#users;one?(eq,id,${userID})`.load<User>();\n")),(0,i.kt)("p",null,"Retrieve multiple rows:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-ts"},"const users = await db.$`#users?(eq,country,mx)`.load<User[]>();\n")),(0,i.kt)("p",null,"Update one or more rows"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-ts"},"await db.$`#users?(eq,id,${userID})`.modify({ country: 'fi' });\n")),(0,i.kt)("p",null,"Remove one or more rows:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-ts"},"await db.$`#users?(eq,id,${userID})`.remove();\n")),(0,i.kt)("p",null,"Some databases also supports ",(0,i.kt)("em",{parentName:"p"},"upsert")," semantics, which means the row will be created if it doesn't exist, or updated\nif it does."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-ts"},"const user = await db.$`#users`.save<User>({ id: 1337, name: 'Martin', language: 'sv', country: 'se' });\n")),(0,i.kt)("p",null,"Depending on the database, you may have to provide the name of the primary key for this call to succeed. If the\ndatabase supports ",(0,i.kt)("em",{parentName:"p"},"upsert")," both with and without a primary key, it's better to omit it."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-ts"},"const user = await db.$`#users[id]`.save<User>({ id: 1337, name: 'Martin', language: 'sv', country: 'se' });\n")),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"save"),", like ",(0,i.kt)("inlineCode",{parentName:"p"},"append"),", also accepts an array for upserting multiple rows at once."),(0,i.kt)("div",{className:"admonition admonition-tip alert alert--success"},(0,i.kt)("div",{parentName:"div",className:"admonition-heading"},(0,i.kt)("h5",{parentName:"div"},(0,i.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,i.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,i.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"tip")),(0,i.kt)("div",{parentName:"div",className:"admonition-content"},(0,i.kt)("p",{parentName:"div"},"When writing data, ",(0,i.kt)("inlineCode",{parentName:"p"},"undefined")," values will map to the SQL ",(0,i.kt)("inlineCode",{parentName:"p"},"DEFAULT")," keyword."))),(0,i.kt)("h2",{id:"custom-sql-queries"},"Custom SQL queries"),(0,i.kt)("p",null,"CRUD operations beside, the main interface to databases is the SQL query, and that's what the ",(0,i.kt)("a",{parentName:"p",href:"/WSF/docs/api/classes/divine_uri.DatabaseURI#query"},"query")," method is all\nabout. It has a few different signatures, but most common is to use it as a tagged template literal:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-ts"},"const [ user ] = await db.query<User[]>`select * from users where id = ${userID}`;\n")),(0,i.kt)("p",null,"The ",(0,i.kt)("inlineCode",{parentName:"p"},"query")," function always returns an array. The raw ",(0,i.kt)("a",{parentName:"p",href:"/WSF/docs/api/classes/divine_uri.DBResult"},"result set")," is available via the ",(0,i.kt)("a",{parentName:"p",href:"/WSF/docs/api/classes/divine_uri.DatabaseURI#fields"},"FIELDS"),"\nsymbol. Sessions are handled automatically and is usually not something you will have to worry about. However, since\nthe database connections are pooled, two consecutive queries might execute on different connections. To execute\nmultiple queries in the same session, construct ",(0,i.kt)("a",{parentName:"p",href:"/WSF/docs/api/classes/divine_uri.DBQuery"},"DBQuery")," objects explicitly and pass them all to ",(0,i.kt)("inlineCode",{parentName:"p"},"query")," (or use a\ntransaction; see below):"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-ts"},"const id = await db.query(q`insert into users (name) values ('Martin')`, q`select last_insert_id()`);\n")),(0,i.kt)("p",null,"Note that the generated primary key is always available as ",(0,i.kt)("a",{parentName:"p",href:"/WSF/docs/api/classes/divine_uri.DBResult#rowkey"},"DBResult.rowKey"),", so this particular example is a bit\nsilly."),(0,i.kt)("h2",{id:"transactions"},"Transactions"),(0,i.kt)("p",null,"To execute a code block inside a transaction, pass a callback to ",(0,i.kt)("inlineCode",{parentName:"p"},"query"),", like this:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-ts"},"const orderID = await db.query(async () => {\n  const order = await db.$`orders`.append<Order>({ user_id: userID, date: new Date() });\n  const orderID = order.order_id ?? order[FIELDS][0].rowKey; // Not all drivers support `RETURNING *`\n  await db.$`order_lines`.append(lines.map((line) => ({ ...line, order_id: orderID }));\n\n  return orderID;\n});\n")),(0,i.kt)("p",null,"If the transaction fails (i.e., the callback throws an exception), the transaction will be automatically rolled back.\nIf it returns normally, it will be committed. Transactions may be nested, in which case ",(0,i.kt)("em",{parentName:"p"},"savepoints")," will be used\ninstead. Like actual transactions, savepoints will also be rolled back if the nested callback throws."),(0,i.kt)("h3",{id:"deadlock-handling"},"Deadlock handling"),(0,i.kt)("p",null,"Sometimes, conflicting transactions will deadlock. The database drivers will automatically handle this situation for\nyou (assuming the deadlock exception propagates back to ",(0,i.kt)("inlineCode",{parentName:"p"},"query"),", of course) by restarting the transaction and\ninvoking the callback again. The callback actually receives a retry counter as its first argument, in case you need\nto detect this. The first time you callback is called, this counter will be 0. Nested callbacks will receive ",(0,i.kt)("inlineCode",{parentName:"p"},"null"),"\ninstead of a number."),(0,i.kt)("p",null,"This behaviour, as well as other transaction parameters like isolation level, may be customized by passing a\n",(0,i.kt)("a",{parentName:"p",href:"/WSF/docs/api/interfaces/divine_uri.DBTransactionParams"},"DBTransactionParams")," object as the first argument to ",(0,i.kt)("inlineCode",{parentName:"p"},"query"),", before the callback."),(0,i.kt)("p",null,"Deadlock handling is supported by all database drivers, and there is even custom handling for CockroachDB, which\nautomatically increases the transaction priority on retries."),(0,i.kt)("h2",{id:"change-data-capture"},"Change Data Capture"),(0,i.kt)("p",null,"Some drivers, like ",(0,i.kt)("a",{parentName:"p",href:"/WSF/docs/api/classes/divine_uri_postgres_protocol.PostgresURI"},"PostgresURI"),", also implement the ",(0,i.kt)("a",{parentName:"p",href:"/WSF/docs/api/classes/divine_uri.DatabaseURI#watch"},"watch")," method. Use this to listen for events from the\ndatabase and stream the results in realtime to your application. The PostgresURI class supports ",(0,i.kt)("inlineCode",{parentName:"p"},"LISTEN"),"/",(0,i.kt)("inlineCode",{parentName:"p"},"NOTIFY"),"\nevents when when using PostgreSQL and ",(0,i.kt)("a",{parentName:"p",href:"https://www.cockroachlabs.com/docs/v21.2/changefeed-for.html"},"core\nchangefeeds")," when using CockroachDB."),(0,i.kt)("h2",{id:"shutting-down"},"Shutting down"),(0,i.kt)("p",null,"Call ",(0,i.kt)("a",{parentName:"p",href:"/WSF/docs/api/classes/divine_uri.DatabaseURI#close"},"close")," to terminate the connection pool. Otherwise, it may take a minute or so before all idle connections\ntime out and Node.js exits."),(0,i.kt)("h2",{id:"hierarchy"},"Hierarchy"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("a",{parentName:"p",href:"/WSF/docs/api/classes/divine_uri.URI"},(0,i.kt)("inlineCode",{parentName:"a"},"URI"))),(0,i.kt)("p",{parentName:"li"},"\u21b3 ",(0,i.kt)("strong",{parentName:"p"},(0,i.kt)("inlineCode",{parentName:"strong"},"DatabaseURI"))))),(0,i.kt)("h2",{id:"constructors"},"Constructors"),(0,i.kt)("h3",{id:"constructor"},"constructor"),(0,i.kt)("p",null,"\u2022 ",(0,i.kt)("strong",{parentName:"p"},"new DatabaseURI"),"(",(0,i.kt)("inlineCode",{parentName:"p"},"url?"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"params?"),")"),(0,i.kt)("p",null,"Constructs a new URI subclass. The URI constructor is a bit unusual, as it will always return an URI subclass and\nnever a plain URI object."),(0,i.kt)("p",null,"If the URI contains user information (credentials), it will be added as an ",(0,i.kt)("a",{parentName:"p",href:"/WSF/docs/api/interfaces/divine_uri.AuthSelector"},"AuthSelector")," and removed from\nthe URI."),(0,i.kt)("h4",{id:"parameters"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"url?")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"string")," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},"URL")," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},"Url")),(0,i.kt)("td",{parentName:"tr",align:"left"},"The URL to construct. If relative, it will be resolved as a ",(0,i.kt)("inlineCode",{parentName:"td"},"file:")," URL relative to the current                working directory. If ",(0,i.kt)("inlineCode",{parentName:"td"},"url")," is a string ",(0,i.kt)("em",{parentName:"td"},"and")," ",(0,i.kt)("inlineCode",{parentName:"td"},"params")," is provided, the string may contain                ",(0,i.kt)("inlineCode",{parentName:"td"},"{prop}")," placeholders, which will then be resolved and percent-encoded against properties in                ",(0,i.kt)("inlineCode",{parentName:"td"},"params"),".")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"params?")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"Params")),(0,i.kt)("td",{parentName:"tr",align:"left"},"An optional record with parameters, used in case ",(0,i.kt)("inlineCode",{parentName:"td"},"url")," is a string.")))),(0,i.kt)("h4",{id:"inherited-from"},"Inherited from"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"/WSF/docs/api/classes/divine_uri.URI"},"URI"),".",(0,i.kt)("a",{parentName:"p",href:"/WSF/docs/api/classes/divine_uri.URI#constructor"},"constructor")),(0,i.kt)("h4",{id:"defined-in"},"Defined in"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/Divine-Software/WSF/blob/0c590c3/uri/src/uri.ts#L232"},"uri/src/uri.ts:232")),(0,i.kt)("p",null,"\u2022 ",(0,i.kt)("strong",{parentName:"p"},"new DatabaseURI"),"(",(0,i.kt)("inlineCode",{parentName:"p"},"url?"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"base?"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"params?"),")"),(0,i.kt)("p",null,"Constructs a new URI subclass. The URI constructor is a bit unusual, as it will always return an URI subclass and\nnever a plain URI object."),(0,i.kt)("p",null,"If the URI contains user information (credentials), it will be added as an ",(0,i.kt)("a",{parentName:"p",href:"/WSF/docs/api/interfaces/divine_uri.AuthSelector"},"AuthSelector")," and removed from\nthe URI."),(0,i.kt)("p",null,"NOTE: If ",(0,i.kt)("inlineCode",{parentName:"p"},"base")," is an URI, all its selectors will be inherited by the newly constructed URI."),(0,i.kt)("h4",{id:"parameters-1"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"url?")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"string")," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},"URL")," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},"Url")),(0,i.kt)("td",{parentName:"tr",align:"left"},"The URL to construct. If relative, it will be resolved against ",(0,i.kt)("inlineCode",{parentName:"td"},"base"),". If ",(0,i.kt)("inlineCode",{parentName:"td"},"url")," is a string ",(0,i.kt)("em",{parentName:"td"},"and"),"                ",(0,i.kt)("inlineCode",{parentName:"td"},"params")," are provided, the string may contain ",(0,i.kt)("inlineCode",{parentName:"td"},"{prop}")," placeholders, which will then be resolved                and percent-encoded against properties in ",(0,i.kt)("inlineCode",{parentName:"td"},"params"),".")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"base?")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"string")," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},"URL")," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},"Url")),(0,i.kt)("td",{parentName:"tr",align:"left"},"A base URL that ",(0,i.kt)("inlineCode",{parentName:"td"},"url")," will be resolved relative to, in case ",(0,i.kt)("inlineCode",{parentName:"td"},"url")," is relative. If ",(0,i.kt)("inlineCode",{parentName:"td"},"base")," itself is                relative, ",(0,i.kt)("inlineCode",{parentName:"td"},"base")," will first be resolved as a ",(0,i.kt)("inlineCode",{parentName:"td"},"file:")," URL relative to the current working directory.                Just like ",(0,i.kt)("inlineCode",{parentName:"td"},"url"),", if ",(0,i.kt)("inlineCode",{parentName:"td"},"base")," is a string and ",(0,i.kt)("inlineCode",{parentName:"td"},"params")," is provided, ",(0,i.kt)("inlineCode",{parentName:"td"},"{prop}")," placeholders may be                present in the string.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"params?")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"Params")),(0,i.kt)("td",{parentName:"tr",align:"left"},"An optional record with parameters, used in case ",(0,i.kt)("inlineCode",{parentName:"td"},"url")," and/or ",(0,i.kt)("inlineCode",{parentName:"td"},"base")," is a string.")))),(0,i.kt)("h4",{id:"inherited-from-1"},"Inherited from"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"/WSF/docs/api/classes/divine_uri.URI"},"URI"),".",(0,i.kt)("a",{parentName:"p",href:"/WSF/docs/api/classes/divine_uri.URI#constructor"},"constructor")),(0,i.kt)("h4",{id:"defined-in-1"},"Defined in"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/Divine-Software/WSF/blob/0c590c3/uri/src/uri.ts#L251"},"uri/src/uri.ts:251")),(0,i.kt)("h2",{id:"properties"},"Properties"),(0,i.kt)("h3",{id:"hash"},"hash"),(0,i.kt)("p",null,"\u2022 ",(0,i.kt)("strong",{parentName:"p"},"hash"),": ",(0,i.kt)("inlineCode",{parentName:"p"},"string")),(0,i.kt)("h4",{id:"inherited-from-2"},"Inherited from"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"/WSF/docs/api/classes/divine_uri.URI"},"URI"),".",(0,i.kt)("a",{parentName:"p",href:"/WSF/docs/api/classes/divine_uri.URI#hash"},"hash")),(0,i.kt)("h4",{id:"defined-in-2"},"Defined in"),(0,i.kt)("p",null,"node_modules/.pnpm/@",(0,i.kt)("a",{parentName:"p",href:"mailto:types+node@12.20.46"},"types+node@12.20.46"),"/node_modules/@types/node/url.d.ts:85"),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"host"},"host"),(0,i.kt)("p",null,"\u2022 ",(0,i.kt)("strong",{parentName:"p"},"host"),": ",(0,i.kt)("inlineCode",{parentName:"p"},"string")),(0,i.kt)("h4",{id:"inherited-from-3"},"Inherited from"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"/WSF/docs/api/classes/divine_uri.URI"},"URI"),".",(0,i.kt)("a",{parentName:"p",href:"/WSF/docs/api/classes/divine_uri.URI#host"},"host")),(0,i.kt)("h4",{id:"defined-in-3"},"Defined in"),(0,i.kt)("p",null,"node_modules/.pnpm/@",(0,i.kt)("a",{parentName:"p",href:"mailto:types+node@12.20.46"},"types+node@12.20.46"),"/node_modules/@types/node/url.d.ts:86"),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"hostname"},"hostname"),(0,i.kt)("p",null,"\u2022 ",(0,i.kt)("strong",{parentName:"p"},"hostname"),": ",(0,i.kt)("inlineCode",{parentName:"p"},"string")),(0,i.kt)("h4",{id:"inherited-from-4"},"Inherited from"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"/WSF/docs/api/classes/divine_uri.URI"},"URI"),".",(0,i.kt)("a",{parentName:"p",href:"/WSF/docs/api/classes/divine_uri.URI#hostname"},"hostname")),(0,i.kt)("h4",{id:"defined-in-4"},"Defined in"),(0,i.kt)("p",null,"node_modules/.pnpm/@",(0,i.kt)("a",{parentName:"p",href:"mailto:types+node@12.20.46"},"types+node@12.20.46"),"/node_modules/@types/node/url.d.ts:87"),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"href"},"href"),(0,i.kt)("p",null,"\u2022 ",(0,i.kt)("inlineCode",{parentName:"p"},"Readonly")," ",(0,i.kt)("strong",{parentName:"p"},"href"),": ",(0,i.kt)("inlineCode",{parentName:"p"},"string")),(0,i.kt)("p",null,"This URI's string representation. Unlike in URL, this property may not be changed/updated."),(0,i.kt)("h4",{id:"inherited-from-5"},"Inherited from"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"/WSF/docs/api/classes/divine_uri.URI"},"URI"),".",(0,i.kt)("a",{parentName:"p",href:"/WSF/docs/api/classes/divine_uri.URI#href"},"href")),(0,i.kt)("h4",{id:"defined-in-5"},"Defined in"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/Divine-Software/WSF/blob/0c590c3/uri/src/uri.ts#L211"},"uri/src/uri.ts:211")),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"origin"},"origin"),(0,i.kt)("p",null,"\u2022 ",(0,i.kt)("inlineCode",{parentName:"p"},"Readonly")," ",(0,i.kt)("strong",{parentName:"p"},"origin"),": ",(0,i.kt)("inlineCode",{parentName:"p"},"string")),(0,i.kt)("p",null,"This URI's origin. Unlike in URL, this property may not be changed/updated."),(0,i.kt)("h4",{id:"inherited-from-6"},"Inherited from"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"/WSF/docs/api/classes/divine_uri.URI"},"URI"),".",(0,i.kt)("a",{parentName:"p",href:"/WSF/docs/api/classes/divine_uri.URI#origin"},"origin")),(0,i.kt)("h4",{id:"defined-in-6"},"Defined in"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/Divine-Software/WSF/blob/0c590c3/uri/src/uri.ts#L214"},"uri/src/uri.ts:214")),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"password"},"password"),(0,i.kt)("p",null,"\u2022 ",(0,i.kt)("strong",{parentName:"p"},"password"),": ",(0,i.kt)("inlineCode",{parentName:"p"},"string")),(0,i.kt)("h4",{id:"inherited-from-7"},"Inherited from"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"/WSF/docs/api/classes/divine_uri.URI"},"URI"),".",(0,i.kt)("a",{parentName:"p",href:"/WSF/docs/api/classes/divine_uri.URI#password"},"password")),(0,i.kt)("h4",{id:"defined-in-7"},"Defined in"),(0,i.kt)("p",null,"node_modules/.pnpm/@",(0,i.kt)("a",{parentName:"p",href:"mailto:types+node@12.20.46"},"types+node@12.20.46"),"/node_modules/@types/node/url.d.ts:90"),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"pathname"},"pathname"),(0,i.kt)("p",null,"\u2022 ",(0,i.kt)("strong",{parentName:"p"},"pathname"),": ",(0,i.kt)("inlineCode",{parentName:"p"},"string")),(0,i.kt)("h4",{id:"inherited-from-8"},"Inherited from"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"/WSF/docs/api/classes/divine_uri.URI"},"URI"),".",(0,i.kt)("a",{parentName:"p",href:"/WSF/docs/api/classes/divine_uri.URI#pathname"},"pathname")),(0,i.kt)("h4",{id:"defined-in-8"},"Defined in"),(0,i.kt)("p",null,"node_modules/.pnpm/@",(0,i.kt)("a",{parentName:"p",href:"mailto:types+node@12.20.46"},"types+node@12.20.46"),"/node_modules/@types/node/url.d.ts:91"),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"port"},"port"),(0,i.kt)("p",null,"\u2022 ",(0,i.kt)("strong",{parentName:"p"},"port"),": ",(0,i.kt)("inlineCode",{parentName:"p"},"string")),(0,i.kt)("h4",{id:"inherited-from-9"},"Inherited from"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"/WSF/docs/api/classes/divine_uri.URI"},"URI"),".",(0,i.kt)("a",{parentName:"p",href:"/WSF/docs/api/classes/divine_uri.URI#port"},"port")),(0,i.kt)("h4",{id:"defined-in-9"},"Defined in"),(0,i.kt)("p",null,"node_modules/.pnpm/@",(0,i.kt)("a",{parentName:"p",href:"mailto:types+node@12.20.46"},"types+node@12.20.46"),"/node_modules/@types/node/url.d.ts:92"),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"protocol"},"protocol"),(0,i.kt)("p",null,"\u2022 ",(0,i.kt)("inlineCode",{parentName:"p"},"Readonly")," ",(0,i.kt)("strong",{parentName:"p"},"protocol"),": ",(0,i.kt)("inlineCode",{parentName:"p"},"string")),(0,i.kt)("p",null,"This URI's protocol. Unlike in URL, this property may not be changed/updated."),(0,i.kt)("h4",{id:"inherited-from-10"},"Inherited from"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"/WSF/docs/api/classes/divine_uri.URI"},"URI"),".",(0,i.kt)("a",{parentName:"p",href:"/WSF/docs/api/classes/divine_uri.URI#protocol"},"protocol")),(0,i.kt)("h4",{id:"defined-in-10"},"Defined in"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/Divine-Software/WSF/blob/0c590c3/uri/src/uri.ts#L217"},"uri/src/uri.ts:217")),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"search"},"search"),(0,i.kt)("p",null,"\u2022 ",(0,i.kt)("strong",{parentName:"p"},"search"),": ",(0,i.kt)("inlineCode",{parentName:"p"},"string")),(0,i.kt)("h4",{id:"inherited-from-11"},"Inherited from"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"/WSF/docs/api/classes/divine_uri.URI"},"URI"),".",(0,i.kt)("a",{parentName:"p",href:"/WSF/docs/api/classes/divine_uri.URI#search"},"search")),(0,i.kt)("h4",{id:"defined-in-11"},"Defined in"),(0,i.kt)("p",null,"node_modules/.pnpm/@",(0,i.kt)("a",{parentName:"p",href:"mailto:types+node@12.20.46"},"types+node@12.20.46"),"/node_modules/@types/node/url.d.ts:94"),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"searchparams"},"searchParams"),(0,i.kt)("p",null,"\u2022 ",(0,i.kt)("inlineCode",{parentName:"p"},"Readonly")," ",(0,i.kt)("strong",{parentName:"p"},"searchParams"),": ",(0,i.kt)("inlineCode",{parentName:"p"},"URLSearchParams")),(0,i.kt)("h4",{id:"inherited-from-12"},"Inherited from"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"/WSF/docs/api/classes/divine_uri.URI"},"URI"),".",(0,i.kt)("a",{parentName:"p",href:"/WSF/docs/api/classes/divine_uri.URI#searchparams"},"searchParams")),(0,i.kt)("h4",{id:"defined-in-12"},"Defined in"),(0,i.kt)("p",null,"node_modules/.pnpm/@",(0,i.kt)("a",{parentName:"p",href:"mailto:types+node@12.20.46"},"types+node@12.20.46"),"/node_modules/@types/node/url.d.ts:95"),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"selectors"},"selectors"),(0,i.kt)("p",null,"\u2022 ",(0,i.kt)("strong",{parentName:"p"},"selectors"),": ",(0,i.kt)("inlineCode",{parentName:"p"},"Object")),(0,i.kt)("p",null,"All selectors that may apply to this URI. Use ",(0,i.kt)("a",{parentName:"p",href:"/WSF/docs/api/classes/divine_uri.DatabaseURI#addselector"},"addSelector")," to modify this property."),(0,i.kt)("h4",{id:"type-declaration"},"Type declaration"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"auth?")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("a",{parentName:"td",href:"/WSF/docs/api/interfaces/divine_uri.AuthSelector"},(0,i.kt)("inlineCode",{parentName:"a"},"AuthSelector")),"[]"),(0,i.kt)("td",{parentName:"tr",align:"left"},"Authentication/Credentials selectors. See ",(0,i.kt)("a",{parentName:"td",href:"/WSF/docs/api/interfaces/divine_uri.AuthSelector"},"AuthSelector"),".")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"headers?")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("a",{parentName:"td",href:"/WSF/docs/api/interfaces/divine_uri.HeadersSelector"},(0,i.kt)("inlineCode",{parentName:"a"},"HeadersSelector")),"[]"),(0,i.kt)("td",{parentName:"tr",align:"left"},"Headers selectors. See ",(0,i.kt)("a",{parentName:"td",href:"/WSF/docs/api/interfaces/divine_uri.HeadersSelector"},"HeadersSelector"),".")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"params?")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("a",{parentName:"td",href:"/WSF/docs/api/interfaces/divine_uri.ParamsSelector"},(0,i.kt)("inlineCode",{parentName:"a"},"ParamsSelector")),"[]"),(0,i.kt)("td",{parentName:"tr",align:"left"},"Parameter selectos. See ",(0,i.kt)("a",{parentName:"td",href:"/WSF/docs/api/interfaces/divine_uri.ParamsSelector"},"ParamsSelector"),".")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"session?")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"SessionSelector"),"[]"),(0,i.kt)("td",{parentName:"tr",align:"left"},"Session selectors. Only used internally.")))),(0,i.kt)("h4",{id:"inherited-from-13"},"Inherited from"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"/WSF/docs/api/classes/divine_uri.URI"},"URI"),".",(0,i.kt)("a",{parentName:"p",href:"/WSF/docs/api/classes/divine_uri.URI#selectors"},"selectors")),(0,i.kt)("h4",{id:"defined-in-13"},"Defined in"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/Divine-Software/WSF/blob/0c590c3/uri/src/uri.ts#L196"},"uri/src/uri.ts:196")),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"username"},"username"),(0,i.kt)("p",null,"\u2022 ",(0,i.kt)("strong",{parentName:"p"},"username"),": ",(0,i.kt)("inlineCode",{parentName:"p"},"string")),(0,i.kt)("h4",{id:"inherited-from-14"},"Inherited from"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"/WSF/docs/api/classes/divine_uri.URI"},"URI"),".",(0,i.kt)("a",{parentName:"p",href:"/WSF/docs/api/classes/divine_uri.URI#username"},"username")),(0,i.kt)("h4",{id:"defined-in-14"},"Defined in"),(0,i.kt)("p",null,"node_modules/.pnpm/@",(0,i.kt)("a",{parentName:"p",href:"mailto:types+node@12.20.46"},"types+node@12.20.46"),"/node_modules/@types/node/url.d.ts:96"),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"fields"},"FIELDS"),(0,i.kt)("p",null,"\u25aa ",(0,i.kt)("inlineCode",{parentName:"p"},"Static")," ",(0,i.kt)("inlineCode",{parentName:"p"},"Readonly")," ",(0,i.kt)("strong",{parentName:"p"},"FIELDS"),": ",(0,i.kt)("inlineCode",{parentName:"p"},"symbol")," = ",(0,i.kt)("inlineCode",{parentName:"p"},"FIELDS")),(0,i.kt)("p",null,"An alias for ",(0,i.kt)("a",{parentName:"p",href:"/WSF/docs/api/classes/divine_uri.DatabaseURI#fields"},"FIELDS"),"."),(0,i.kt)("h4",{id:"inherited-from-15"},"Inherited from"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"/WSF/docs/api/classes/divine_uri.URI"},"URI"),".",(0,i.kt)("a",{parentName:"p",href:"/WSF/docs/api/classes/divine_uri.URI#fields"},"FIELDS")),(0,i.kt)("h4",{id:"defined-in-15"},"Defined in"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/Divine-Software/WSF/blob/0c590c3/uri/src/uri.ts#L148"},"uri/src/uri.ts:148")),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"finalize"},"FINALIZE"),(0,i.kt)("p",null,"\u25aa ",(0,i.kt)("inlineCode",{parentName:"p"},"Static")," ",(0,i.kt)("inlineCode",{parentName:"p"},"Readonly")," ",(0,i.kt)("strong",{parentName:"p"},"FINALIZE"),": ",(0,i.kt)("inlineCode",{parentName:"p"},"symbol")," = ",(0,i.kt)("inlineCode",{parentName:"p"},"FINALIZE")),(0,i.kt)("p",null,"An alias for ",(0,i.kt)("a",{parentName:"p",href:"/WSF/docs/api/classes/divine_uri.DatabaseURI#fields"},"FIELDS"),"."),(0,i.kt)("h4",{id:"inherited-from-16"},"Inherited from"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"/WSF/docs/api/classes/divine_uri.URI"},"URI"),".",(0,i.kt)("a",{parentName:"p",href:"/WSF/docs/api/classes/divine_uri.URI#finalize"},"FINALIZE")),(0,i.kt)("h4",{id:"defined-in-16"},"Defined in"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/Divine-Software/WSF/blob/0c590c3/uri/src/uri.ts#L151"},"uri/src/uri.ts:151")),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"headers"},"HEADERS"),(0,i.kt)("p",null,"\u25aa ",(0,i.kt)("inlineCode",{parentName:"p"},"Static")," ",(0,i.kt)("inlineCode",{parentName:"p"},"Readonly")," ",(0,i.kt)("strong",{parentName:"p"},"HEADERS"),": ",(0,i.kt)("inlineCode",{parentName:"p"},"symbol")," = ",(0,i.kt)("inlineCode",{parentName:"p"},"HEADERS")),(0,i.kt)("p",null,"An alias for ",(0,i.kt)("a",{parentName:"p",href:"/WSF/docs/api/classes/divine_uri.DatabaseURI#headers"},"HEADERS"),"."),(0,i.kt)("h4",{id:"inherited-from-17"},"Inherited from"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"/WSF/docs/api/classes/divine_uri.URI"},"URI"),".",(0,i.kt)("a",{parentName:"p",href:"/WSF/docs/api/classes/divine_uri.URI#headers"},"HEADERS")),(0,i.kt)("h4",{id:"defined-in-17"},"Defined in"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/Divine-Software/WSF/blob/0c590c3/uri/src/uri.ts#L154"},"uri/src/uri.ts:154")),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"null"},"NULL"),(0,i.kt)("p",null,"\u25aa ",(0,i.kt)("inlineCode",{parentName:"p"},"Static")," ",(0,i.kt)("inlineCode",{parentName:"p"},"Readonly")," ",(0,i.kt)("strong",{parentName:"p"},"NULL"),": ",(0,i.kt)("inlineCode",{parentName:"p"},"symbol")," = ",(0,i.kt)("inlineCode",{parentName:"p"},"NULL")),(0,i.kt)("p",null,"An alias for ",(0,i.kt)("a",{parentName:"p",href:"/WSF/docs/api/classes/divine_uri.DatabaseURI#null"},"NULL"),"."),(0,i.kt)("h4",{id:"inherited-from-18"},"Inherited from"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"/WSF/docs/api/classes/divine_uri.URI"},"URI"),".",(0,i.kt)("a",{parentName:"p",href:"/WSF/docs/api/classes/divine_uri.URI#null"},"NULL")),(0,i.kt)("h4",{id:"defined-in-18"},"Defined in"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/Divine-Software/WSF/blob/0c590c3/uri/src/uri.ts#L145"},"uri/src/uri.ts:145")),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"status"},"STATUS"),(0,i.kt)("p",null,"\u25aa ",(0,i.kt)("inlineCode",{parentName:"p"},"Static")," ",(0,i.kt)("inlineCode",{parentName:"p"},"Readonly")," ",(0,i.kt)("strong",{parentName:"p"},"STATUS"),": ",(0,i.kt)("inlineCode",{parentName:"p"},"symbol")," = ",(0,i.kt)("inlineCode",{parentName:"p"},"STATUS")),(0,i.kt)("p",null,"An alias for ",(0,i.kt)("a",{parentName:"p",href:"/WSF/docs/api/classes/divine_uri.DatabaseURI#status"},"STATUS"),"."),(0,i.kt)("h4",{id:"inherited-from-19"},"Inherited from"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"/WSF/docs/api/classes/divine_uri.URI"},"URI"),".",(0,i.kt)("a",{parentName:"p",href:"/WSF/docs/api/classes/divine_uri.URI#status"},"STATUS")),(0,i.kt)("h4",{id:"defined-in-19"},"Defined in"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/Divine-Software/WSF/blob/0c590c3/uri/src/uri.ts#L157"},"uri/src/uri.ts:157")),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"status_text"},"STATUS","_","TEXT"),(0,i.kt)("p",null,"\u25aa ",(0,i.kt)("inlineCode",{parentName:"p"},"Static")," ",(0,i.kt)("inlineCode",{parentName:"p"},"Readonly")," ",(0,i.kt)("strong",{parentName:"p"},"STATUS","_","TEXT"),": ",(0,i.kt)("inlineCode",{parentName:"p"},"symbol")," = ",(0,i.kt)("inlineCode",{parentName:"p"},"STATUS_TEXT")),(0,i.kt)("p",null,"An alias for ",(0,i.kt)("a",{parentName:"p",href:"/WSF/docs/api/classes/divine_uri.DatabaseURI#status_text"},"STATUS_TEXT"),"."),(0,i.kt)("h4",{id:"inherited-from-20"},"Inherited from"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"/WSF/docs/api/classes/divine_uri.URI"},"URI"),".",(0,i.kt)("a",{parentName:"p",href:"/WSF/docs/api/classes/divine_uri.URI#status_text"},"STATUS_TEXT")),(0,i.kt)("h4",{id:"defined-in-20"},"Defined in"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/Divine-Software/WSF/blob/0c590c3/uri/src/uri.ts#L160"},"uri/src/uri.ts:160")),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"void"},"VOID"),(0,i.kt)("p",null,"\u25aa ",(0,i.kt)("inlineCode",{parentName:"p"},"Static")," ",(0,i.kt)("inlineCode",{parentName:"p"},"Readonly")," ",(0,i.kt)("strong",{parentName:"p"},"VOID"),": ",(0,i.kt)("inlineCode",{parentName:"p"},"symbol")," = ",(0,i.kt)("inlineCode",{parentName:"p"},"VOID")),(0,i.kt)("p",null,"An alias for ",(0,i.kt)("a",{parentName:"p",href:"/WSF/docs/api/classes/divine_uri.DatabaseURI#void"},"VOID"),"."),(0,i.kt)("h4",{id:"inherited-from-21"},"Inherited from"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"/WSF/docs/api/classes/divine_uri.URI"},"URI"),".",(0,i.kt)("a",{parentName:"p",href:"/WSF/docs/api/classes/divine_uri.URI#void"},"VOID")),(0,i.kt)("h4",{id:"defined-in-21"},"Defined in"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/Divine-Software/WSF/blob/0c590c3/uri/src/uri.ts#L142"},"uri/src/uri.ts:142")),(0,i.kt)("h2",{id:"methods"},"Methods"),(0,i.kt)("h3",{id:""},"$"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("strong",{parentName:"p"},"$"),"(",(0,i.kt)("inlineCode",{parentName:"p"},"strings"),", ...",(0,i.kt)("inlineCode",{parentName:"p"},"values"),"): ",(0,i.kt)("a",{parentName:"p",href:"/WSF/docs/api/classes/divine_uri.DatabaseURI"},(0,i.kt)("inlineCode",{parentName:"a"},"DatabaseURI"))),(0,i.kt)("p",null,"Constructs a new DatabaseURI, relative to this URI, from a template string, percent-encoding all arguments."),(0,i.kt)("p",null,"Example:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-ts"},"const base = new URI('sqlite:/tmp/demo.db');\nconst info = await base.$`#item_info?(eq,id,${item})`.load();\n")),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},(0,i.kt)("inlineCode",{parentName:"strong"},"throws"))," TypeError  If the resulting URI is not actually a DatabaseURI."),(0,i.kt)("h4",{id:"parameters-2"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"strings")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"TemplateStringsArray")),(0,i.kt)("td",{parentName:"tr",align:"left"},"The template string array.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"...values")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"unknown"),"[]"),(0,i.kt)("td",{parentName:"tr",align:"left"},"The values to be encoded.")))),(0,i.kt)("h4",{id:"returns"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"/WSF/docs/api/classes/divine_uri.DatabaseURI"},(0,i.kt)("inlineCode",{parentName:"a"},"DatabaseURI"))),(0,i.kt)("p",null,"A new DatabaseURI subclass instance."),(0,i.kt)("h4",{id:"overrides"},"Overrides"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"/WSF/docs/api/classes/divine_uri.URI"},"URI"),".",(0,i.kt)("a",{parentName:"p",href:"/WSF/docs/api/classes/divine_uri.URI#$"},"$")),(0,i.kt)("h4",{id:"defined-in-22"},"Defined in"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/Divine-Software/WSF/blob/0c590c3/uri/src/protocols/database.ts#L952"},"uri/src/protocols/database.ts:952")),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"asynciterator"},"[asyncIterator]"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("strong",{parentName:"p"},"[asyncIterator]"),"(): ",(0,i.kt)("inlineCode",{parentName:"p"},"AsyncIterator"),"<",(0,i.kt)("inlineCode",{parentName:"p"},"Buffer"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"any"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"undefined"),">"," & ",(0,i.kt)("a",{parentName:"p",href:"/WSF/docs/api/interfaces/divine_uri.Metadata"},(0,i.kt)("inlineCode",{parentName:"a"},"Metadata"))),(0,i.kt)("p",null,"All URIs are ",(0,i.kt)("inlineCode",{parentName:"p"},"AsyncIterable<Buffer>"),". This method implements that interface by calling\n",(0,i.kt)("a",{parentName:"p",href:"/WSF/docs/api/classes/divine_uri.DatabaseURI#load"},"load"),"(",(0,i.kt)("a",{parentName:"p",href:"/WSF/docs/api/classes/divine_headers.ContentType#stream"},"ContentType.stream"),")."),(0,i.kt)("h4",{id:"returns-1"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"AsyncIterator"),"<",(0,i.kt)("inlineCode",{parentName:"p"},"Buffer"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"any"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"undefined"),">"," & ",(0,i.kt)("a",{parentName:"p",href:"/WSF/docs/api/interfaces/divine_uri.Metadata"},(0,i.kt)("inlineCode",{parentName:"a"},"Metadata"))),(0,i.kt)("p",null,"An ",(0,i.kt)("inlineCode",{parentName:"p"},"AsyncIterator<Buffer>")," stream."),(0,i.kt)("h4",{id:"inherited-from-22"},"Inherited from"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"/WSF/docs/api/classes/divine_uri.URI"},"URI"),".",(0,i.kt)("a",{parentName:"p",href:"/WSF/docs/api/classes/divine_uri.URI#%5Basynciterator%5D"},"[asyncIterator]")),(0,i.kt)("h4",{id:"defined-in-23"},"Defined in"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/Divine-Software/WSF/blob/0c590c3/uri/src/uri.ts#L535"},"uri/src/uri.ts:535")),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"_createdbconnectionpool"},"_","createDBConnectionPool"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("inlineCode",{parentName:"p"},"Protected")," ",(0,i.kt)("inlineCode",{parentName:"p"},"Abstract")," ",(0,i.kt)("strong",{parentName:"p"},"_createDBConnectionPool"),"(",(0,i.kt)("inlineCode",{parentName:"p"},"params"),"): ",(0,i.kt)("a",{parentName:"p",href:"/WSF/docs/api/classes/divine_uri.DBDriver.DBConnectionPool"},(0,i.kt)("inlineCode",{parentName:"a"},"DBConnectionPool"))," ","|"," ",(0,i.kt)("inlineCode",{parentName:"p"},"Promise"),"<",(0,i.kt)("a",{parentName:"p",href:"/WSF/docs/api/classes/divine_uri.DBDriver.DBConnectionPool"},(0,i.kt)("inlineCode",{parentName:"a"},"DBConnectionPool")),">"),(0,i.kt)("h4",{id:"parameters-3"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"params")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("a",{parentName:"td",href:"/WSF/docs/api/interfaces/divine_uri.DBParamsSelector"},(0,i.kt)("inlineCode",{parentName:"a"},"DBParamsSelector")))))),(0,i.kt)("h4",{id:"returns-2"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"/WSF/docs/api/classes/divine_uri.DBDriver.DBConnectionPool"},(0,i.kt)("inlineCode",{parentName:"a"},"DBConnectionPool"))," ","|"," ",(0,i.kt)("inlineCode",{parentName:"p"},"Promise"),"<",(0,i.kt)("a",{parentName:"p",href:"/WSF/docs/api/classes/divine_uri.DBDriver.DBConnectionPool"},(0,i.kt)("inlineCode",{parentName:"a"},"DBConnectionPool")),">"),(0,i.kt)("h4",{id:"defined-in-24"},"Defined in"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/Divine-Software/WSF/blob/0c590c3/uri/src/protocols/database.ts#L935"},"uri/src/protocols/database.ts:935")),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"_getauthorization"},"_","getAuthorization"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("inlineCode",{parentName:"p"},"Protected")," ",(0,i.kt)("strong",{parentName:"p"},"_getAuthorization"),"(",(0,i.kt)("inlineCode",{parentName:"p"},"req"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"payload?"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"challenges?"),"): ",(0,i.kt)("inlineCode",{parentName:"p"},"Promise"),"<",(0,i.kt)("inlineCode",{parentName:"p"},"undefined")," ","|"," ",(0,i.kt)("inlineCode",{parentName:"p"},"Authorization"),">"),(0,i.kt)("h4",{id:"parameters-4"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"req")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("a",{parentName:"td",href:"/WSF/docs/api/interfaces/divine_uri.AuthSchemeRequest"},(0,i.kt)("inlineCode",{parentName:"a"},"AuthSchemeRequest")))),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"payload?")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"Buffer")," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},"AsyncIterable"),"<",(0,i.kt)("inlineCode",{parentName:"td"},"Buffer"),">")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"challenges?")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"WWWAuthenticate"),"[]")))),(0,i.kt)("h4",{id:"returns-3"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"Promise"),"<",(0,i.kt)("inlineCode",{parentName:"p"},"undefined")," ","|"," ",(0,i.kt)("inlineCode",{parentName:"p"},"Authorization"),">"),(0,i.kt)("h4",{id:"inherited-from-23"},"Inherited from"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"/WSF/docs/api/classes/divine_uri.URI"},"URI"),".",(0,i.kt)("a",{parentName:"p",href:"/WSF/docs/api/classes/divine_uri.URI#_getauthorization"},"_getAuthorization")),(0,i.kt)("h4",{id:"defined-in-25"},"Defined in"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/Divine-Software/WSF/blob/0c590c3/uri/src/uri.ts#L539"},"uri/src/uri.ts:539")),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"_getbestselector"},"_","getBestSelector"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("inlineCode",{parentName:"p"},"Protected")," ",(0,i.kt)("strong",{parentName:"p"},"_getBestSelector"),"<",(0,i.kt)("inlineCode",{parentName:"p"},"T"),">","(",(0,i.kt)("inlineCode",{parentName:"p"},"sels"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"challenge?"),"): ",(0,i.kt)("inlineCode",{parentName:"p"},"null")," ","|"," ",(0,i.kt)("inlineCode",{parentName:"p"},"T")),(0,i.kt)("h4",{id:"type-parameters"},"Type parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"T")),(0,i.kt)("td",{parentName:"tr",align:"left"},"extends ",(0,i.kt)("inlineCode",{parentName:"td"},"SelectorBase"))))),(0,i.kt)("h4",{id:"parameters-5"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"sels")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"undefined")," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},"T"),"[]")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"challenge?")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"WWWAuthenticate"))))),(0,i.kt)("h4",{id:"returns-4"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"null")," ","|"," ",(0,i.kt)("inlineCode",{parentName:"p"},"T")),(0,i.kt)("h4",{id:"inherited-from-24"},"Inherited from"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"/WSF/docs/api/classes/divine_uri.URI"},"URI"),".",(0,i.kt)("a",{parentName:"p",href:"/WSF/docs/api/classes/divine_uri.URI#_getbestselector"},"_getBestSelector")),(0,i.kt)("h4",{id:"defined-in-26"},"Defined in"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/Divine-Software/WSF/blob/0c590c3/uri/src/uri.ts#L581"},"uri/src/uri.ts:581")),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"_guesscontenttype"},"_","guessContentType"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("inlineCode",{parentName:"p"},"Protected")," ",(0,i.kt)("strong",{parentName:"p"},"_guessContentType"),"(",(0,i.kt)("inlineCode",{parentName:"p"},"knownContentType?"),"): ",(0,i.kt)("inlineCode",{parentName:"p"},"undefined")," ","|"," ",(0,i.kt)("inlineCode",{parentName:"p"},"ContentType")),(0,i.kt)("h4",{id:"parameters-6"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"knownContentType?")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"string")," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},"ContentType"))))),(0,i.kt)("h4",{id:"returns-5"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"undefined")," ","|"," ",(0,i.kt)("inlineCode",{parentName:"p"},"ContentType")),(0,i.kt)("h4",{id:"inherited-from-25"},"Inherited from"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"/WSF/docs/api/classes/divine_uri.URI"},"URI"),".",(0,i.kt)("a",{parentName:"p",href:"/WSF/docs/api/classes/divine_uri.URI#_guesscontenttype"},"_guessContentType")),(0,i.kt)("h4",{id:"defined-in-27"},"Defined in"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/Divine-Software/WSF/blob/0c590c3/uri/src/uri.ts#L573"},"uri/src/uri.ts:573")),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"_makeioerror"},"_","makeIOError"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("inlineCode",{parentName:"p"},"Protected")," ",(0,i.kt)("strong",{parentName:"p"},"_makeIOError"),"(",(0,i.kt)("inlineCode",{parentName:"p"},"err"),"): ",(0,i.kt)("a",{parentName:"p",href:"/WSF/docs/api/classes/divine_uri.IOError"},(0,i.kt)("inlineCode",{parentName:"a"},"IOError"))),(0,i.kt)("h4",{id:"parameters-7"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"err")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"unknown"))))),(0,i.kt)("h4",{id:"returns-6"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"/WSF/docs/api/classes/divine_uri.IOError"},(0,i.kt)("inlineCode",{parentName:"a"},"IOError"))),(0,i.kt)("h4",{id:"inherited-from-26"},"Inherited from"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"/WSF/docs/api/classes/divine_uri.URI"},"URI"),".",(0,i.kt)("a",{parentName:"p",href:"/WSF/docs/api/classes/divine_uri.URI#_makeioerror"},"_makeIOError")),(0,i.kt)("h4",{id:"defined-in-28"},"Defined in"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/Divine-Software/WSF/blob/0c590c3/uri/src/uri.ts#L577"},"uri/src/uri.ts:577")),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"addselector"},"addSelector"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("strong",{parentName:"p"},"addSelector"),"<",(0,i.kt)("inlineCode",{parentName:"p"},"T"),">","(",(0,i.kt)("inlineCode",{parentName:"p"},"selector"),"): ",(0,i.kt)("a",{parentName:"p",href:"/WSF/docs/api/classes/divine_uri.DatabaseURI"},(0,i.kt)("inlineCode",{parentName:"a"},"DatabaseURI"))),(0,i.kt)("p",null,"Adds a new selector to this URI."),(0,i.kt)("p",null,"Selectors is a way to specify in what situations some kind of parameters or configuration is valid. When some\nkind of configuration is required (such as authentication of connection parameters), all registered selectors are\nevaluated and based on the matching score, the best selector is chosen. The more specific a selector is, the\nhigher the score it will receive if it matches."),(0,i.kt)("p",null,"Based on this, it's possible to limit the scope of credentials or to configure certain HTTP headers to be sent to\na specific set of servers."),(0,i.kt)("p",null,"It's also perfectly valid ",(0,i.kt)("em",{parentName:"p"},"not")," to specify a selector for some kind of parameters. As long as there is only one\nkind of this configuration, it will apply unconditionally."),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},(0,i.kt)("inlineCode",{parentName:"strong"},"throws"))," TypeError  If the selector to add is invalid."),(0,i.kt)("h4",{id:"type-parameters-1"},"Type parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"T")),(0,i.kt)("td",{parentName:"tr",align:"left"},"extends ",(0,i.kt)("a",{parentName:"td",href:"/WSF/docs/api/interfaces/divine_uri.ParamsSelector"},(0,i.kt)("inlineCode",{parentName:"a"},"ParamsSelector"))," ","|"," ",(0,i.kt)("a",{parentName:"td",href:"/WSF/docs/api/interfaces/divine_uri.AuthSelector"},(0,i.kt)("inlineCode",{parentName:"a"},"AuthSelector"))," ","|"," ",(0,i.kt)("a",{parentName:"td",href:"/WSF/docs/api/interfaces/divine_uri.HeadersSelector"},(0,i.kt)("inlineCode",{parentName:"a"},"HeadersSelector"))," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},"SessionSelector"))))),(0,i.kt)("h4",{id:"parameters-8"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"selector")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"T")),(0,i.kt)("td",{parentName:"tr",align:"left"},"The selector to add.")))),(0,i.kt)("h4",{id:"returns-7"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"/WSF/docs/api/classes/divine_uri.DatabaseURI"},(0,i.kt)("inlineCode",{parentName:"a"},"DatabaseURI"))),(0,i.kt)("p",null,"This URI."),(0,i.kt)("h4",{id:"inherited-from-27"},"Inherited from"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"/WSF/docs/api/classes/divine_uri.URI"},"URI"),".",(0,i.kt)("a",{parentName:"p",href:"/WSF/docs/api/classes/divine_uri.URI#addselector"},"addSelector")),(0,i.kt)("h4",{id:"defined-in-29"},"Defined in"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/Divine-Software/WSF/blob/0c590c3/uri/src/uri.ts#L311"},"uri/src/uri.ts:311")),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"append"},"append"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("strong",{parentName:"p"},"append"),"<",(0,i.kt)("inlineCode",{parentName:"p"},"T"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"D"),">","(",(0,i.kt)("inlineCode",{parentName:"p"},"data"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"_sendCT?"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"_recvCT?"),"): ",(0,i.kt)("inlineCode",{parentName:"p"},"Promise"),"<",(0,i.kt)("inlineCode",{parentName:"p"},"T")," & ",(0,i.kt)("a",{parentName:"p",href:"/WSF/docs/api/interfaces/divine_uri.DBMetadata"},(0,i.kt)("inlineCode",{parentName:"a"},"DBMetadata")),">"),(0,i.kt)("p",null,"Uses the ",(0,i.kt)("em",{parentName:"p"},"DB reference")," in this URI's fragment to add one or multiple rows in a table using ",(0,i.kt)("inlineCode",{parentName:"p"},"INSERT"),"."),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},(0,i.kt)("inlineCode",{parentName:"strong"},"throws"))," IOError  On I/O errors or if this URI does not have a valid ",(0,i.kt)("em",{parentName:"p"},"DB reference")," fragment."),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},(0,i.kt)("inlineCode",{parentName:"strong"},"throws"))," DBError  On database/query errors."),(0,i.kt)("h4",{id:"type-parameters-2"},"Type parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"T")),(0,i.kt)("td",{parentName:"tr",align:"left"},"extends ",(0,i.kt)("inlineCode",{parentName:"td"},"object")),(0,i.kt)("td",{parentName:"tr",align:"left"},"The actual type returned.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"D")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"unknown")),(0,i.kt)("td",{parentName:"tr",align:"left"},"The type of data to store.")))),(0,i.kt)("h4",{id:"parameters-9"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"data")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"D")),(0,i.kt)("td",{parentName:"tr",align:"left"},"The data to add to the table.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"_sendCT?")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"string")," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},"ContentType")),(0,i.kt)("td",{parentName:"tr",align:"left"},"Must not be used.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"_recvCT?")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"string")," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},"ContentType")),(0,i.kt)("td",{parentName:"tr",align:"left"},"Must not be used.")))),(0,i.kt)("h4",{id:"returns-8"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"Promise"),"<",(0,i.kt)("inlineCode",{parentName:"p"},"T")," & ",(0,i.kt)("a",{parentName:"p",href:"/WSF/docs/api/interfaces/divine_uri.DBMetadata"},(0,i.kt)("inlineCode",{parentName:"a"},"DBMetadata")),">"),(0,i.kt)("p",null,"A row or array of rows  (if the database supports it), with DBMetadata."),(0,i.kt)("h4",{id:"overrides-1"},"Overrides"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"/WSF/docs/api/classes/divine_uri.URI"},"URI"),".",(0,i.kt)("a",{parentName:"p",href:"/WSF/docs/api/classes/divine_uri.URI#append"},"append")),(0,i.kt)("h4",{id:"defined-in-30"},"Defined in"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/Divine-Software/WSF/blob/0c590c3/uri/src/protocols/database.ts#L1028"},"uri/src/protocols/database.ts:1028")),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"close"},"close"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("strong",{parentName:"p"},"close"),"(): ",(0,i.kt)("inlineCode",{parentName:"p"},"Promise"),"<",(0,i.kt)("inlineCode",{parentName:"p"},"void"),">"),(0,i.kt)("p",null,"Shuts down the database connection pool."),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},(0,i.kt)("inlineCode",{parentName:"strong"},"throws"))," IOError  On I/O errors."),(0,i.kt)("h4",{id:"returns-9"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"Promise"),"<",(0,i.kt)("inlineCode",{parentName:"p"},"void"),">"),(0,i.kt)("h4",{id:"overrides-2"},"Overrides"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"/WSF/docs/api/classes/divine_uri.URI"},"URI"),".",(0,i.kt)("a",{parentName:"p",href:"/WSF/docs/api/classes/divine_uri.URI#close"},"close")),(0,i.kt)("h4",{id:"defined-in-31"},"Defined in"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/Divine-Software/WSF/blob/0c590c3/uri/src/protocols/database.ts#L1288"},"uri/src/protocols/database.ts:1288")),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"info"},"info"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("strong",{parentName:"p"},"info"),"<",(0,i.kt)("inlineCode",{parentName:"p"},"T"),">","(): ",(0,i.kt)("inlineCode",{parentName:"p"},"Promise"),"<",(0,i.kt)("inlineCode",{parentName:"p"},"T")," & ",(0,i.kt)("a",{parentName:"p",href:"/WSF/docs/api/interfaces/divine_uri.Metadata"},(0,i.kt)("inlineCode",{parentName:"a"},"Metadata")),">"),(0,i.kt)("p",null,"This method will return information about the resource this URI references, if the subclass supports it."),(0,i.kt)("p",null,"The actual operation depends on what kind of URI this is. See ",(0,i.kt)("a",{parentName:"p",href:"/WSF/docs/api/classes/divine_uri.FileURI#info"},"FileURI.info")," or ",(0,i.kt)("a",{parentName:"p",href:"/WSF/docs/api/classes/divine_uri.HTTPURI#info"},"HTTPURI.info")," for two common\nexamples."),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},(0,i.kt)("inlineCode",{parentName:"strong"},"throws"))," IOError  On I/O errors or if the subclass does not support this method."),(0,i.kt)("h4",{id:"type-parameters-3"},"Type parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"T")),(0,i.kt)("td",{parentName:"tr",align:"left"},"extends ",(0,i.kt)("a",{parentName:"td",href:"/WSF/docs/api/interfaces/divine_uri.DirectoryEntry"},(0,i.kt)("inlineCode",{parentName:"a"},"DirectoryEntry"))),(0,i.kt)("td",{parentName:"tr",align:"left"},"The actual type of information record returned. Must extend ",(0,i.kt)("a",{parentName:"td",href:"/WSF/docs/api/interfaces/divine_uri.DirectoryEntry"},"DirectoryEntry"),".")))),(0,i.kt)("h4",{id:"returns-10"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"Promise"),"<",(0,i.kt)("inlineCode",{parentName:"p"},"T")," & ",(0,i.kt)("a",{parentName:"p",href:"/WSF/docs/api/interfaces/divine_uri.Metadata"},(0,i.kt)("inlineCode",{parentName:"a"},"Metadata")),">"),(0,i.kt)("p",null,"An information record describing the resources."),(0,i.kt)("h4",{id:"inherited-from-28"},"Inherited from"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"/WSF/docs/api/classes/divine_uri.URI"},"URI"),".",(0,i.kt)("a",{parentName:"p",href:"/WSF/docs/api/classes/divine_uri.URI#info"},"info")),(0,i.kt)("h4",{id:"defined-in-32"},"Defined in"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/Divine-Software/WSF/blob/0c590c3/uri/src/uri.ts#L351"},"uri/src/uri.ts:351")),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"list"},"list"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("strong",{parentName:"p"},"list"),"<",(0,i.kt)("inlineCode",{parentName:"p"},"T"),">","(): ",(0,i.kt)("inlineCode",{parentName:"p"},"Promise"),"<",(0,i.kt)("inlineCode",{parentName:"p"},"T"),"[] & ",(0,i.kt)("a",{parentName:"p",href:"/WSF/docs/api/interfaces/divine_uri.Metadata"},(0,i.kt)("inlineCode",{parentName:"a"},"Metadata")),">"),(0,i.kt)("p",null,"This method will return information about this URI's children/subresources, if the subclass supports it."),(0,i.kt)("p",null,"The actual operation depends on what kind of URI this is. See ",(0,i.kt)("a",{parentName:"p",href:"/WSF/docs/api/classes/divine_uri.FileURI#info"},"FileURI.info")," for a common example."),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},(0,i.kt)("inlineCode",{parentName:"strong"},"throws"))," IOError  On I/O errors or if the subclass does not support this method."),(0,i.kt)("h4",{id:"type-parameters-4"},"Type parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"T")),(0,i.kt)("td",{parentName:"tr",align:"left"},"extends ",(0,i.kt)("a",{parentName:"td",href:"/WSF/docs/api/interfaces/divine_uri.DirectoryEntry"},(0,i.kt)("inlineCode",{parentName:"a"},"DirectoryEntry"))),(0,i.kt)("td",{parentName:"tr",align:"left"},"The actual type of information record returned. Must extend ",(0,i.kt)("a",{parentName:"td",href:"/WSF/docs/api/interfaces/divine_uri.DirectoryEntry"},"DirectoryEntry"),".")))),(0,i.kt)("h4",{id:"returns-11"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"Promise"),"<",(0,i.kt)("inlineCode",{parentName:"p"},"T"),"[] & ",(0,i.kt)("a",{parentName:"p",href:"/WSF/docs/api/interfaces/divine_uri.Metadata"},(0,i.kt)("inlineCode",{parentName:"a"},"Metadata")),">"),(0,i.kt)("p",null,"An array of information record describing the subresources."),(0,i.kt)("h4",{id:"inherited-from-29"},"Inherited from"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"/WSF/docs/api/classes/divine_uri.URI"},"URI"),".",(0,i.kt)("a",{parentName:"p",href:"/WSF/docs/api/classes/divine_uri.URI#list"},"list")),(0,i.kt)("h4",{id:"defined-in-33"},"Defined in"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/Divine-Software/WSF/blob/0c590c3/uri/src/uri.ts#L364"},"uri/src/uri.ts:364")),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"load"},"load"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("strong",{parentName:"p"},"load"),"<",(0,i.kt)("inlineCode",{parentName:"p"},"T"),">","(",(0,i.kt)("inlineCode",{parentName:"p"},"_recvCT?"),"): ",(0,i.kt)("inlineCode",{parentName:"p"},"Promise"),"<",(0,i.kt)("inlineCode",{parentName:"p"},"T")," & ",(0,i.kt)("a",{parentName:"p",href:"/WSF/docs/api/interfaces/divine_uri.DBMetadata"},(0,i.kt)("inlineCode",{parentName:"a"},"DBMetadata")),">"),(0,i.kt)("p",null,"Uses the ",(0,i.kt)("em",{parentName:"p"},"DB reference")," in this URI's fragment to retrieve one or multiple rows or a single cell from a table\nwith ",(0,i.kt)("inlineCode",{parentName:"p"},"SELECT"),"."),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},(0,i.kt)("inlineCode",{parentName:"strong"},"throws"))," IOError  On I/O errors or if this URI does not have a valid ",(0,i.kt)("em",{parentName:"p"},"DB reference")," fragment."),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},(0,i.kt)("inlineCode",{parentName:"strong"},"throws"))," DBError  On database/query errors."),(0,i.kt)("h4",{id:"type-parameters-5"},"Type parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"T")),(0,i.kt)("td",{parentName:"tr",align:"left"},"extends ",(0,i.kt)("inlineCode",{parentName:"td"},"object")),(0,i.kt)("td",{parentName:"tr",align:"left"},"The actual type returned.")))),(0,i.kt)("h4",{id:"parameters-10"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"_recvCT?")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"string")," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},"ContentType")),(0,i.kt)("td",{parentName:"tr",align:"left"},"Must not be used.")))),(0,i.kt)("h4",{id:"returns-12"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"Promise"),"<",(0,i.kt)("inlineCode",{parentName:"p"},"T")," & ",(0,i.kt)("a",{parentName:"p",href:"/WSF/docs/api/interfaces/divine_uri.DBMetadata"},(0,i.kt)("inlineCode",{parentName:"a"},"DBMetadata")),">"),(0,i.kt)("p",null,"A cell, row or array of rows, with DBMetadata."),(0,i.kt)("h4",{id:"overrides-3"},"Overrides"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"/WSF/docs/api/classes/divine_uri.URI"},"URI"),".",(0,i.kt)("a",{parentName:"p",href:"/WSF/docs/api/classes/divine_uri.URI#load"},"load")),(0,i.kt)("h4",{id:"defined-in-34"},"Defined in"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/Divine-Software/WSF/blob/0c590c3/uri/src/protocols/database.ts#L973"},"uri/src/protocols/database.ts:973")),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"modify"},"modify"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("strong",{parentName:"p"},"modify"),"<",(0,i.kt)("inlineCode",{parentName:"p"},"T"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"D"),">","(",(0,i.kt)("inlineCode",{parentName:"p"},"data"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"_sendCT?"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"_recvCT?"),"): ",(0,i.kt)("inlineCode",{parentName:"p"},"Promise"),"<",(0,i.kt)("inlineCode",{parentName:"p"},"T")," & ",(0,i.kt)("a",{parentName:"p",href:"/WSF/docs/api/interfaces/divine_uri.DBMetadata"},(0,i.kt)("inlineCode",{parentName:"a"},"DBMetadata")),">"),(0,i.kt)("p",null,"Uses the ",(0,i.kt)("em",{parentName:"p"},"DB reference")," in this URI's fragment to modify one or multiple rows in a table using ",(0,i.kt)("inlineCode",{parentName:"p"},"UPDATE"),"."),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},(0,i.kt)("inlineCode",{parentName:"strong"},"throws"))," IOError  On I/O errors or if this URI does not have a valid ",(0,i.kt)("em",{parentName:"p"},"DB reference")," fragment."),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},(0,i.kt)("inlineCode",{parentName:"strong"},"throws"))," DBError  On database/query errors."),(0,i.kt)("h4",{id:"type-parameters-6"},"Type parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"T")),(0,i.kt)("td",{parentName:"tr",align:"left"},"extends ",(0,i.kt)("inlineCode",{parentName:"td"},"object")),(0,i.kt)("td",{parentName:"tr",align:"left"},"Object.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"D")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"unknown")),(0,i.kt)("td",{parentName:"tr",align:"left"},"The type of the update data.")))),(0,i.kt)("h4",{id:"parameters-11"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"data")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"D")),(0,i.kt)("td",{parentName:"tr",align:"left"},"The data to update in the table.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"_sendCT?")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"string")," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},"ContentType")),(0,i.kt)("td",{parentName:"tr",align:"left"},"Must not be used.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"_recvCT?")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"string")," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},"ContentType")),(0,i.kt)("td",{parentName:"tr",align:"left"},"Must not be used.")))),(0,i.kt)("h4",{id:"returns-13"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"Promise"),"<",(0,i.kt)("inlineCode",{parentName:"p"},"T")," & ",(0,i.kt)("a",{parentName:"p",href:"/WSF/docs/api/interfaces/divine_uri.DBMetadata"},(0,i.kt)("inlineCode",{parentName:"a"},"DBMetadata")),">"),(0,i.kt)("p",null,"Object(",(0,i.kt)("a",{parentName:"p",href:"/WSF/docs/api/classes/divine_uri.DatabaseURI#void"},"VOID"),"), with DBMetadata."),(0,i.kt)("h4",{id:"overrides-4"},"Overrides"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"/WSF/docs/api/classes/divine_uri.URI"},"URI"),".",(0,i.kt)("a",{parentName:"p",href:"/WSF/docs/api/classes/divine_uri.URI#modify"},"modify")),(0,i.kt)("h4",{id:"defined-in-35"},"Defined in"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/Divine-Software/WSF/blob/0c590c3/uri/src/protocols/database.ts#L1046"},"uri/src/protocols/database.ts:1046")),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"query"},"query"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("strong",{parentName:"p"},"query"),"<",(0,i.kt)("inlineCode",{parentName:"p"},"T"),">","(...",(0,i.kt)("inlineCode",{parentName:"p"},"queries"),"): ",(0,i.kt)("inlineCode",{parentName:"p"},"Promise"),"<",(0,i.kt)("inlineCode",{parentName:"p"},"T")," & ",(0,i.kt)("a",{parentName:"p",href:"/WSF/docs/api/interfaces/divine_uri.DBMetadata"},(0,i.kt)("inlineCode",{parentName:"a"},"DBMetadata")),">"),(0,i.kt)("p",null,"Executes one or more queries in the same session."),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},(0,i.kt)("inlineCode",{parentName:"strong"},"throws"))," TypeError  If the arguments are invalid."),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},(0,i.kt)("inlineCode",{parentName:"strong"},"throws"))," IOError    On I/O errors."),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},(0,i.kt)("inlineCode",{parentName:"strong"},"throws"))," DBError    On database/query errors."),(0,i.kt)("h4",{id:"type-parameters-7"},"Type parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"T")),(0,i.kt)("td",{parentName:"tr",align:"left"},"extends ",(0,i.kt)("inlineCode",{parentName:"td"},"object")," = ",(0,i.kt)("inlineCode",{parentName:"td"},"object"),"[]"),(0,i.kt)("td",{parentName:"tr",align:"left"},"The actual type returned. Always an array.")))),(0,i.kt)("h4",{id:"parameters-12"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"...queries")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("a",{parentName:"td",href:"/WSF/docs/api/classes/divine_uri.DBQuery"},(0,i.kt)("inlineCode",{parentName:"a"},"DBQuery")),"[]"),(0,i.kt)("td",{parentName:"tr",align:"left"},"The queries to execute.")))),(0,i.kt)("h4",{id:"returns-14"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"Promise"),"<",(0,i.kt)("inlineCode",{parentName:"p"},"T")," & ",(0,i.kt)("a",{parentName:"p",href:"/WSF/docs/api/interfaces/divine_uri.DBMetadata"},(0,i.kt)("inlineCode",{parentName:"a"},"DBMetadata")),">"),(0,i.kt)("p",null,"An array of rows from the ",(0,i.kt)("em",{parentName:"p"},"last")," query. All result sets are available as a ",(0,i.kt)("a",{parentName:"p",href:"/WSF/docs/api/classes/divine_uri.DBResult"},"DBResult"),"\narray via ",(0,i.kt)("a",{parentName:"p",href:"/WSF/docs/api/classes/divine_uri.DatabaseURI#fields"},"FIELDS")," (from the DBMetadata)."),(0,i.kt)("h4",{id:"overrides-5"},"Overrides"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"/WSF/docs/api/classes/divine_uri.URI"},"URI"),".",(0,i.kt)("a",{parentName:"p",href:"/WSF/docs/api/classes/divine_uri.URI#query"},"query")),(0,i.kt)("h4",{id:"defined-in-36"},"Defined in"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/Divine-Software/WSF/blob/0c590c3/uri/src/protocols/database.ts#L1078"},"uri/src/protocols/database.ts:1078")),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("strong",{parentName:"p"},"query"),"<",(0,i.kt)("inlineCode",{parentName:"p"},"T"),">","(",(0,i.kt)("inlineCode",{parentName:"p"},"query"),", ...",(0,i.kt)("inlineCode",{parentName:"p"},"params"),"): ",(0,i.kt)("inlineCode",{parentName:"p"},"Promise"),"<",(0,i.kt)("inlineCode",{parentName:"p"},"T")," & ",(0,i.kt)("a",{parentName:"p",href:"/WSF/docs/api/interfaces/divine_uri.DBMetadata"},(0,i.kt)("inlineCode",{parentName:"a"},"DBMetadata")),">"),(0,i.kt)("p",null,"Executes a query in the form of a template literal."),(0,i.kt)("p",null,"All values/parameters will either be quoted and encoded or sent separately to the database server for processing,\ndepending on the actual database driver. Example:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-ts"},"const users = dbURI.query<User>[]>`select * from users where first_name = ${firstName}`;\n")),(0,i.kt)("p",null,"See also ",(0,i.kt)("a",{parentName:"p",href:"/WSF/docs/api/namespaces/divine_uri.q"},"q"),", ",(0,i.kt)("a",{parentName:"p",href:"/WSF/docs/api/namespaces/divine_uri.q#quote"},"q.quote"),", ",(0,i.kt)("a",{parentName:"p",href:"/WSF/docs/api/namespaces/divine_uri.q#raw"},"q.raw"),", ",(0,i.kt)("a",{parentName:"p",href:"/WSF/docs/api/namespaces/divine_uri.q#join"},"q.join"),", ",(0,i.kt)("a",{parentName:"p",href:"/WSF/docs/api/namespaces/divine_uri.q#list"},"q.list"),", ",(0,i.kt)("a",{parentName:"p",href:"/WSF/docs/api/namespaces/divine_uri.q#values"},"q.values")," and ",(0,i.kt)("a",{parentName:"p",href:"/WSF/docs/api/namespaces/divine_uri.q#assign"},"q.assign")," for handy utility\nfunctions."),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},(0,i.kt)("inlineCode",{parentName:"strong"},"throws"))," TypeError  If one of the parameters is ",(0,i.kt)("inlineCode",{parentName:"p"},"undefined")," or if the arguments are invalid."),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},(0,i.kt)("inlineCode",{parentName:"strong"},"throws"))," IOError    On I/O errors."),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},(0,i.kt)("inlineCode",{parentName:"strong"},"throws"))," DBError    On database/query errors."),(0,i.kt)("h4",{id:"type-parameters-8"},"Type parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"T")),(0,i.kt)("td",{parentName:"tr",align:"left"},"extends ",(0,i.kt)("inlineCode",{parentName:"td"},"object")," = ",(0,i.kt)("inlineCode",{parentName:"td"},"object"),"[]"),(0,i.kt)("td",{parentName:"tr",align:"left"},"The actual type returned. Always an array.")))),(0,i.kt)("h4",{id:"parameters-13"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"query")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"TemplateStringsArray")),(0,i.kt)("td",{parentName:"tr",align:"left"},"The query as a template string array.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"...params")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"BasicTypes"),"[]"),(0,i.kt)("td",{parentName:"tr",align:"left"},"The query parameters. Values may be ",(0,i.kt)("a",{parentName:"td",href:"/WSF/docs/api/classes/divine_uri.DBQuery"},"DBQuery")," instances or of any type supported by the                      database.")))),(0,i.kt)("h4",{id:"returns-15"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"Promise"),"<",(0,i.kt)("inlineCode",{parentName:"p"},"T")," & ",(0,i.kt)("a",{parentName:"p",href:"/WSF/docs/api/interfaces/divine_uri.DBMetadata"},(0,i.kt)("inlineCode",{parentName:"a"},"DBMetadata")),">"),(0,i.kt)("p",null,"An array of rows. The raw set is available as a ",(0,i.kt)("a",{parentName:"p",href:"/WSF/docs/api/classes/divine_uri.DBResult"},"DBResult")," array \u2014 of length 1 \u2014 via\n",(0,i.kt)("a",{parentName:"p",href:"/WSF/docs/api/classes/divine_uri.DatabaseURI#fields"},"FIELDS")," (from the DBMetadata)."),(0,i.kt)("h4",{id:"overrides-6"},"Overrides"),(0,i.kt)("p",null,"URI.query"),(0,i.kt)("h4",{id:"defined-in-37"},"Defined in"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/Divine-Software/WSF/blob/0c590c3/uri/src/protocols/database.ts#L1102"},"uri/src/protocols/database.ts:1102")),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("strong",{parentName:"p"},"query"),"<",(0,i.kt)("inlineCode",{parentName:"p"},"T"),">","(",(0,i.kt)("inlineCode",{parentName:"p"},"query"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"params"),"): ",(0,i.kt)("inlineCode",{parentName:"p"},"Promise"),"<",(0,i.kt)("inlineCode",{parentName:"p"},"T")," & ",(0,i.kt)("a",{parentName:"p",href:"/WSF/docs/api/interfaces/divine_uri.DBMetadata"},(0,i.kt)("inlineCode",{parentName:"a"},"DBMetadata")),">"),(0,i.kt)("p",null,"Executes a query in the form of a query string. The string may contain ",(0,i.kt)("inlineCode",{parentName:"p"},"{prop}")," placeholders, which will then be\nresolved against properties in ",(0,i.kt)("inlineCode",{parentName:"p"},"params"),"."),(0,i.kt)("p",null,"All values/parameters will either be quoted and encoded or sent separately to the database server for processing,\ndepending on the actual database driver. Example:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-ts"},"const users = dbURI.query<User>[]>('select * from users where first_name = {name}', { name: firstName });\n")),(0,i.kt)("p",null,"See also ",(0,i.kt)("a",{parentName:"p",href:"/WSF/docs/api/namespaces/divine_uri.q"},"q"),", ",(0,i.kt)("a",{parentName:"p",href:"/WSF/docs/api/namespaces/divine_uri.q#quote"},"q.quote"),", ",(0,i.kt)("a",{parentName:"p",href:"/WSF/docs/api/namespaces/divine_uri.q#raw"},"q.raw"),", ",(0,i.kt)("a",{parentName:"p",href:"/WSF/docs/api/namespaces/divine_uri.q#join"},"q.join"),", ",(0,i.kt)("a",{parentName:"p",href:"/WSF/docs/api/namespaces/divine_uri.q#list"},"q.list"),", ",(0,i.kt)("a",{parentName:"p",href:"/WSF/docs/api/namespaces/divine_uri.q#values"},"q.values")," and ",(0,i.kt)("a",{parentName:"p",href:"/WSF/docs/api/namespaces/divine_uri.q#assign"},"q.assign")," for handy utility\nfunctions."),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},(0,i.kt)("inlineCode",{parentName:"strong"},"throws"))," TypeError  If one of the parameters is ",(0,i.kt)("inlineCode",{parentName:"p"},"undefined")," or if the arguments are invalid."),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},(0,i.kt)("inlineCode",{parentName:"strong"},"throws"))," IOError    On I/O errors."),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},(0,i.kt)("inlineCode",{parentName:"strong"},"throws"))," DBError    On database/query errors."),(0,i.kt)("h4",{id:"type-parameters-9"},"Type parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"T")),(0,i.kt)("td",{parentName:"tr",align:"left"},"extends ",(0,i.kt)("inlineCode",{parentName:"td"},"object")," = ",(0,i.kt)("inlineCode",{parentName:"td"},"object"),"[]"),(0,i.kt)("td",{parentName:"tr",align:"left"},"The actual type returned. Always an array.")))),(0,i.kt)("h4",{id:"parameters-14"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"query")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"string")),(0,i.kt)("td",{parentName:"tr",align:"left"},"The query, with ",(0,i.kt)("inlineCode",{parentName:"td"},"{prop}")," placeholders for parameters.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"params")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"Params")),(0,i.kt)("td",{parentName:"tr",align:"left"},"An record with parameters, used to look up placeholders from the query. Parameters may be                      ",(0,i.kt)("a",{parentName:"td",href:"/WSF/docs/api/classes/divine_uri.DBQuery"},"DBQuery")," instances themselves, or of any type supported by the database.")))),(0,i.kt)("h4",{id:"returns-16"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"Promise"),"<",(0,i.kt)("inlineCode",{parentName:"p"},"T")," & ",(0,i.kt)("a",{parentName:"p",href:"/WSF/docs/api/interfaces/divine_uri.DBMetadata"},(0,i.kt)("inlineCode",{parentName:"a"},"DBMetadata")),">"),(0,i.kt)("p",null,"An array of rows. The raw set is available as a ",(0,i.kt)("a",{parentName:"p",href:"/WSF/docs/api/classes/divine_uri.DBResult"},"DBResult")," array \u2014 of length 1 \u2014 via\n",(0,i.kt)("a",{parentName:"p",href:"/WSF/docs/api/classes/divine_uri.DatabaseURI#fields"},"FIELDS")," (from the DBMetadata)."),(0,i.kt)("h4",{id:"overrides-7"},"Overrides"),(0,i.kt)("p",null,"URI.query"),(0,i.kt)("h4",{id:"defined-in-38"},"Defined in"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/Divine-Software/WSF/blob/0c590c3/uri/src/protocols/database.ts#L1127"},"uri/src/protocols/database.ts:1127")),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("strong",{parentName:"p"},"query"),"<",(0,i.kt)("inlineCode",{parentName:"p"},"T"),">","(",(0,i.kt)("inlineCode",{parentName:"p"},"params"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"cb"),"): ",(0,i.kt)("inlineCode",{parentName:"p"},"Promise"),"<",(0,i.kt)("inlineCode",{parentName:"p"},"T"),">"),(0,i.kt)("p",null,"Begins a transaction and evaluates the provided callback."),(0,i.kt)("p",null,"If the callback returns successfully, the transaction is committed and this method returns the callback's return\nvalue; if the callback throws, the transaction is rolled back and the exception is propagated."),(0,i.kt)("p",null,"Transaction deadlocks are handled automatically by default. When the driver detects that a transaction was\naborted because of a deadlock, it waits a little based on the ",(0,i.kt)("a",{parentName:"p",href:"/WSF/docs/api/interfaces/divine_uri.DBTransactionParams#backoff"},"DBTransactionParams.backoff")," function, and then\ninvokes the callback again (the ",(0,i.kt)("inlineCode",{parentName:"p"},"retryCount")," argument will be 1 on the first retry and so on), up to a maximum of\n",(0,i.kt)("a",{parentName:"p",href:"/WSF/docs/api/interfaces/divine_uri.DBTransactionParams#retries"},"DBTransactionParams.retries")," times. Only then will the deadlock exception be propagated. To this behaviour,\nset ",(0,i.kt)("inlineCode",{parentName:"p"},"retry")," to 0."),(0,i.kt)("p",null,"If this method is called recursively, ",(0,i.kt)("em",{parentName:"p"},"savepoints")," will be created (and rolled back) instead of transactions, and\n",(0,i.kt)("inlineCode",{parentName:"p"},"params")," will be ",(0,i.kt)("em",{parentName:"p"},"silently ignored"),". The ",(0,i.kt)("inlineCode",{parentName:"p"},"retryCount")," argument is set to ",(0,i.kt)("inlineCode",{parentName:"p"},"null")," in this case."),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},(0,i.kt)("inlineCode",{parentName:"strong"},"throws"))," TypeError  if the arguments are invalid."),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},(0,i.kt)("inlineCode",{parentName:"strong"},"throws"))," IOError    On I/O errors."),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},(0,i.kt)("inlineCode",{parentName:"strong"},"throws"))," DBError    On database/query errors."),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},(0,i.kt)("inlineCode",{parentName:"strong"},"throws"))," unknown    Any exception thrown by ",(0,i.kt)("inlineCode",{parentName:"p"},"cb")," is propagated."),(0,i.kt)("h4",{id:"type-parameters-10"},"Type parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"T")),(0,i.kt)("td",{parentName:"tr",align:"left"},"The return type of the callback.")))),(0,i.kt)("h4",{id:"parameters-15"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"params")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("a",{parentName:"td",href:"/WSF/docs/api/interfaces/divine_uri.DBTransactionParams"},(0,i.kt)("inlineCode",{parentName:"a"},"DBTransactionParams"))),(0,i.kt)("td",{parentName:"tr",align:"left"},"Transaction options, specifying the number of retries on deadlocks, the backoff strategey or                      transaction isolation level.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"cb")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("a",{parentName:"td",href:"/WSF/docs/api/namespaces/divine_uri.DBDriver#dbcallback"},(0,i.kt)("inlineCode",{parentName:"a"},"DBCallback")),"<",(0,i.kt)("inlineCode",{parentName:"td"},"T"),">"),(0,i.kt)("td",{parentName:"tr",align:"left"},"The function to evaluate inside the transaction/savepoint.")))),(0,i.kt)("h4",{id:"returns-17"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"Promise"),"<",(0,i.kt)("inlineCode",{parentName:"p"},"T"),">"),(0,i.kt)("p",null,"Whatever ",(0,i.kt)("inlineCode",{parentName:"p"},"cb")," returns."),(0,i.kt)("h4",{id:"overrides-8"},"Overrides"),(0,i.kt)("p",null,"URI.query"),(0,i.kt)("h4",{id:"defined-in-39"},"Defined in"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/Divine-Software/WSF/blob/0c590c3/uri/src/protocols/database.ts#L1153"},"uri/src/protocols/database.ts:1153")),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("strong",{parentName:"p"},"query"),"<",(0,i.kt)("inlineCode",{parentName:"p"},"T"),">","(",(0,i.kt)("inlineCode",{parentName:"p"},"cb"),"): ",(0,i.kt)("inlineCode",{parentName:"p"},"Promise"),"<",(0,i.kt)("inlineCode",{parentName:"p"},"T"),">"),(0,i.kt)("p",null,"Begins a transaction and evaluates the provided callback."),(0,i.kt)("p",null,"If the callback returns successfully, the transaction is committed and this method returns the callback's return\nvalue; if the callback throws, the transaction is rolled back and the exception is propagated."),(0,i.kt)("p",null,"Transaction deadlocks are handled automatically. When the driver detects that a transaction was aborted because\nof a deadlock, it waits a few hundred milliseconds, and then invokes the callback again (the ",(0,i.kt)("inlineCode",{parentName:"p"},"retryCount"),"\nargument will be 1 on the first retry and so on), up to a maximum of 8 times. Only then will the deadlock\nexception be propagated. The wait time is approximately doubled on each retry, up to around 12 seconds."),(0,i.kt)("p",null,"If this method is called recursively, ",(0,i.kt)("em",{parentName:"p"},"savepoints")," will be created (and rolled back) instead of transactions. The\n",(0,i.kt)("inlineCode",{parentName:"p"},"retryCount")," argument is set to ",(0,i.kt)("inlineCode",{parentName:"p"},"null")," in this case."),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},(0,i.kt)("inlineCode",{parentName:"strong"},"throws"))," TypeError  if the arguments are invalid."),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},(0,i.kt)("inlineCode",{parentName:"strong"},"throws"))," IOError    On I/O errors."),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},(0,i.kt)("inlineCode",{parentName:"strong"},"throws"))," DBError    On database/query errors."),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},(0,i.kt)("inlineCode",{parentName:"strong"},"throws"))," unknown    Any exception thrown by ",(0,i.kt)("inlineCode",{parentName:"p"},"cb")," is propagated."),(0,i.kt)("h4",{id:"type-parameters-11"},"Type parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"T")),(0,i.kt)("td",{parentName:"tr",align:"left"},"The return type of the callback.")))),(0,i.kt)("h4",{id:"parameters-16"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"cb")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("a",{parentName:"td",href:"/WSF/docs/api/namespaces/divine_uri.DBDriver#dbcallback"},(0,i.kt)("inlineCode",{parentName:"a"},"DBCallback")),"<",(0,i.kt)("inlineCode",{parentName:"td"},"T"),">"),(0,i.kt)("td",{parentName:"tr",align:"left"},"The function to evaluate inside the transaction/savepoint.")))),(0,i.kt)("h4",{id:"returns-18"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"Promise"),"<",(0,i.kt)("inlineCode",{parentName:"p"},"T"),">"),(0,i.kt)("p",null,"Whatever ",(0,i.kt)("inlineCode",{parentName:"p"},"cb")," returns."),(0,i.kt)("h4",{id:"overrides-9"},"Overrides"),(0,i.kt)("p",null,"URI.query"),(0,i.kt)("h4",{id:"defined-in-40"},"Defined in"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/Divine-Software/WSF/blob/0c590c3/uri/src/protocols/database.ts#L1176"},"uri/src/protocols/database.ts:1176")),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"remove"},"remove"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("strong",{parentName:"p"},"remove"),"<",(0,i.kt)("inlineCode",{parentName:"p"},"T"),">","(",(0,i.kt)("inlineCode",{parentName:"p"},"_recvCT?"),"): ",(0,i.kt)("inlineCode",{parentName:"p"},"Promise"),"<",(0,i.kt)("inlineCode",{parentName:"p"},"T")," & ",(0,i.kt)("a",{parentName:"p",href:"/WSF/docs/api/interfaces/divine_uri.DBMetadata"},(0,i.kt)("inlineCode",{parentName:"a"},"DBMetadata")),">"),(0,i.kt)("p",null,"Uses the ",(0,i.kt)("em",{parentName:"p"},"DB reference")," in this URI's fragment to remove one or multiple rows from a table using ",(0,i.kt)("inlineCode",{parentName:"p"},"DELETE"),"."),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},(0,i.kt)("inlineCode",{parentName:"strong"},"throws"))," IOError  On I/O errors or if this URI does not have a valid ",(0,i.kt)("em",{parentName:"p"},"DB reference")," fragment."),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},(0,i.kt)("inlineCode",{parentName:"strong"},"throws"))," DBError  On database/query errors."),(0,i.kt)("h4",{id:"type-parameters-12"},"Type parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"T")),(0,i.kt)("td",{parentName:"tr",align:"left"},"extends ",(0,i.kt)("inlineCode",{parentName:"td"},"object")),(0,i.kt)("td",{parentName:"tr",align:"left"},"Object.")))),(0,i.kt)("h4",{id:"parameters-17"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"_recvCT?")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"string")," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},"ContentType")),(0,i.kt)("td",{parentName:"tr",align:"left"},"Must not be used.")))),(0,i.kt)("h4",{id:"returns-19"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"Promise"),"<",(0,i.kt)("inlineCode",{parentName:"p"},"T")," & ",(0,i.kt)("a",{parentName:"p",href:"/WSF/docs/api/interfaces/divine_uri.DBMetadata"},(0,i.kt)("inlineCode",{parentName:"a"},"DBMetadata")),">"),(0,i.kt)("p",null,"Object(",(0,i.kt)("a",{parentName:"p",href:"/WSF/docs/api/classes/divine_uri.DatabaseURI#void"},"VOID"),"), with DBMetadata."),(0,i.kt)("h4",{id:"overrides-10"},"Overrides"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"/WSF/docs/api/classes/divine_uri.URI"},"URI"),".",(0,i.kt)("a",{parentName:"p",href:"/WSF/docs/api/classes/divine_uri.URI#remove"},"remove")),(0,i.kt)("h4",{id:"defined-in-41"},"Defined in"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/Divine-Software/WSF/blob/0c590c3/uri/src/protocols/database.ts#L1061"},"uri/src/protocols/database.ts:1061")),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"save"},"save"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("strong",{parentName:"p"},"save"),"<",(0,i.kt)("inlineCode",{parentName:"p"},"T"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"D"),">","(",(0,i.kt)("inlineCode",{parentName:"p"},"data"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"_sendCT?"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"_recvCT?"),"): ",(0,i.kt)("inlineCode",{parentName:"p"},"Promise"),"<",(0,i.kt)("inlineCode",{parentName:"p"},"T")," & ",(0,i.kt)("a",{parentName:"p",href:"/WSF/docs/api/interfaces/divine_uri.DBMetadata"},(0,i.kt)("inlineCode",{parentName:"a"},"DBMetadata")),">"),(0,i.kt)("p",null,"Uses the ",(0,i.kt)("em",{parentName:"p"},"DB reference")," in this URI's fragment to store one or multiple rows in a table using ",(0,i.kt)("em",{parentName:"p"},"upsert")," semantics\n(using ",(0,i.kt)("inlineCode",{parentName:"p"},"INSERT ... ON CONFLICT UPDATE ...")," or ",(0,i.kt)("inlineCode",{parentName:"p"},"UPSERT"),", for instance, but this depends on the database)."),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},(0,i.kt)("inlineCode",{parentName:"strong"},"throws"))," IOError  On I/O errors or if this URI does not have a valid ",(0,i.kt)("em",{parentName:"p"},"DB reference")," fragment."),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},(0,i.kt)("inlineCode",{parentName:"strong"},"throws"))," DBError  On database/query errors."),(0,i.kt)("h4",{id:"type-parameters-13"},"Type parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"T")),(0,i.kt)("td",{parentName:"tr",align:"left"},"extends ",(0,i.kt)("inlineCode",{parentName:"td"},"object")),(0,i.kt)("td",{parentName:"tr",align:"left"},"The actual type returned.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"D")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"unknown")),(0,i.kt)("td",{parentName:"tr",align:"left"},"The type of data to store.")))),(0,i.kt)("h4",{id:"parameters-18"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"data")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"D")),(0,i.kt)("td",{parentName:"tr",align:"left"},"The data to store in a row (or an array of rows to store).")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"_sendCT?")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"string")," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},"ContentType")),(0,i.kt)("td",{parentName:"tr",align:"left"},"Must not be used.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"_recvCT?")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"string")," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},"ContentType")),(0,i.kt)("td",{parentName:"tr",align:"left"},"Must not be used.")))),(0,i.kt)("h4",{id:"returns-20"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"Promise"),"<",(0,i.kt)("inlineCode",{parentName:"p"},"T")," & ",(0,i.kt)("a",{parentName:"p",href:"/WSF/docs/api/interfaces/divine_uri.DBMetadata"},(0,i.kt)("inlineCode",{parentName:"a"},"DBMetadata")),">"),(0,i.kt)("p",null,"A row or array of rows (if the database supports it), with DBMetadata."),(0,i.kt)("h4",{id:"overrides-11"},"Overrides"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"/WSF/docs/api/classes/divine_uri.URI"},"URI"),".",(0,i.kt)("a",{parentName:"p",href:"/WSF/docs/api/classes/divine_uri.URI#save"},"save")),(0,i.kt)("h4",{id:"defined-in-42"},"Defined in"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/Divine-Software/WSF/blob/0c590c3/uri/src/protocols/database.ts#L1010"},"uri/src/protocols/database.ts:1010")),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"tojson"},"toJSON"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("strong",{parentName:"p"},"toJSON"),"(): ",(0,i.kt)("inlineCode",{parentName:"p"},"string")),(0,i.kt)("h4",{id:"returns-21"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"string")),(0,i.kt)("h4",{id:"inherited-from-30"},"Inherited from"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"/WSF/docs/api/classes/divine_uri.URI"},"URI"),".",(0,i.kt)("a",{parentName:"p",href:"/WSF/docs/api/classes/divine_uri.URI#tojson"},"toJSON")),(0,i.kt)("h4",{id:"defined-in-43"},"Defined in"),(0,i.kt)("p",null,"node_modules/.pnpm/@",(0,i.kt)("a",{parentName:"p",href:"mailto:types+node@12.20.46"},"types+node@12.20.46"),"/node_modules/@types/node/url.d.ts:98"),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"tostring"},"toString"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("strong",{parentName:"p"},"toString"),"(): ",(0,i.kt)("inlineCode",{parentName:"p"},"string")),(0,i.kt)("h4",{id:"returns-22"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"string")),(0,i.kt)("h4",{id:"inherited-from-31"},"Inherited from"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"/WSF/docs/api/classes/divine_uri.URI"},"URI"),".",(0,i.kt)("a",{parentName:"p",href:"/WSF/docs/api/classes/divine_uri.URI#tostring"},"toString")),(0,i.kt)("h4",{id:"defined-in-44"},"Defined in"),(0,i.kt)("p",null,"node_modules/.pnpm/@",(0,i.kt)("a",{parentName:"p",href:"mailto:types+node@12.20.46"},"types+node@12.20.46"),"/node_modules/@types/node/url.d.ts:97"),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"watch"},"watch"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("strong",{parentName:"p"},"watch"),"<",(0,i.kt)("inlineCode",{parentName:"p"},"T"),">","(",(0,i.kt)("inlineCode",{parentName:"p"},"query"),"): ",(0,i.kt)("inlineCode",{parentName:"p"},"AsyncIterable"),"<",(0,i.kt)("inlineCode",{parentName:"p"},"T")," & ",(0,i.kt)("a",{parentName:"p",href:"/WSF/docs/api/interfaces/divine_uri.DBMetadata"},(0,i.kt)("inlineCode",{parentName:"a"},"DBMetadata")),">"),(0,i.kt)("p",null,"Opens a ",(0,i.kt)("em",{parentName:"p"},"change data capture")," channel to the database and returns a stream of change events."),(0,i.kt)("p",null,"Example:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-ts"},"for await (const ev of dbURI.watch(q`listen foo`)) {\n    console.log('New PostgreSQL notification', ev);\n}\n")),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},(0,i.kt)("inlineCode",{parentName:"strong"},"throws"))," IOError    On I/O errors."),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},(0,i.kt)("inlineCode",{parentName:"strong"},"throws"))," DBError    On database/query errors."),(0,i.kt)("h4",{id:"type-parameters-14"},"Type parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"T")),(0,i.kt)("td",{parentName:"tr",align:"left"},"extends ",(0,i.kt)("inlineCode",{parentName:"td"},"object")),(0,i.kt)("td",{parentName:"tr",align:"left"},"The type of events that will be emitted.")))),(0,i.kt)("h4",{id:"parameters-19"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"query")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("a",{parentName:"td",href:"/WSF/docs/api/classes/divine_uri.DBQuery"},(0,i.kt)("inlineCode",{parentName:"a"},"DBQuery"))),(0,i.kt)("td",{parentName:"tr",align:"left"},"The query that opens the change event stream.")))),(0,i.kt)("h4",{id:"returns-23"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"AsyncIterable"),"<",(0,i.kt)("inlineCode",{parentName:"p"},"T")," & ",(0,i.kt)("a",{parentName:"p",href:"/WSF/docs/api/interfaces/divine_uri.DBMetadata"},(0,i.kt)("inlineCode",{parentName:"a"},"DBMetadata")),">"),(0,i.kt)("p",null,"A stream of change events."),(0,i.kt)("h4",{id:"overrides-12"},"Overrides"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"/WSF/docs/api/classes/divine_uri.URI"},"URI"),".",(0,i.kt)("a",{parentName:"p",href:"/WSF/docs/api/classes/divine_uri.URI#watch"},"watch")),(0,i.kt)("h4",{id:"defined-in-45"},"Defined in"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/Divine-Software/WSF/blob/0c590c3/uri/src/protocols/database.ts#L1217"},"uri/src/protocols/database.ts:1217")),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("strong",{parentName:"p"},"watch"),"<",(0,i.kt)("inlineCode",{parentName:"p"},"T"),">","(",(0,i.kt)("inlineCode",{parentName:"p"},"query"),", ...",(0,i.kt)("inlineCode",{parentName:"p"},"params"),"): ",(0,i.kt)("inlineCode",{parentName:"p"},"AsyncIterable"),"<",(0,i.kt)("inlineCode",{parentName:"p"},"T")," & ",(0,i.kt)("a",{parentName:"p",href:"/WSF/docs/api/interfaces/divine_uri.DBMetadata"},(0,i.kt)("inlineCode",{parentName:"a"},"DBMetadata")),">"),(0,i.kt)("p",null,"Opens a ",(0,i.kt)("em",{parentName:"p"},"change data capture")," channel to the database and returns a stream of change events."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-ts"},"for await (const ev of dbURI.watch`experimental changefeed FOR orders`) {\n    console.log('New order from CockroachDB', ev);\n}\n")),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},(0,i.kt)("inlineCode",{parentName:"strong"},"throws"))," TypeError  If one of the parameters is ",(0,i.kt)("inlineCode",{parentName:"p"},"undefined")," or if the arguments are invalid."),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},(0,i.kt)("inlineCode",{parentName:"strong"},"throws"))," IOError    On I/O errors."),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},(0,i.kt)("inlineCode",{parentName:"strong"},"throws"))," DBError    On database/query errors."),(0,i.kt)("h4",{id:"type-parameters-15"},"Type parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"T")),(0,i.kt)("td",{parentName:"tr",align:"left"},"extends ",(0,i.kt)("inlineCode",{parentName:"td"},"object")),(0,i.kt)("td",{parentName:"tr",align:"left"},"The type of events that will be emitted.")))),(0,i.kt)("h4",{id:"parameters-20"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"query")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"TemplateStringsArray")),(0,i.kt)("td",{parentName:"tr",align:"left"},"The query that opens the change event stream.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"...params")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"unknown"),"[]"),(0,i.kt)("td",{parentName:"tr",align:"left"},"The query parameters. Values may be ",(0,i.kt)("a",{parentName:"td",href:"/WSF/docs/api/classes/divine_uri.DBQuery"},"DBQuery")," instances or of any type supported by the                      database.")))),(0,i.kt)("h4",{id:"returns-24"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"AsyncIterable"),"<",(0,i.kt)("inlineCode",{parentName:"p"},"T")," & ",(0,i.kt)("a",{parentName:"p",href:"/WSF/docs/api/interfaces/divine_uri.DBMetadata"},(0,i.kt)("inlineCode",{parentName:"a"},"DBMetadata")),">"),(0,i.kt)("p",null,"A stream of change events."),(0,i.kt)("h4",{id:"overrides-13"},"Overrides"),(0,i.kt)("p",null,"URI.watch"),(0,i.kt)("h4",{id:"defined-in-46"},"Defined in"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/Divine-Software/WSF/blob/0c590c3/uri/src/protocols/database.ts#L1236"},"uri/src/protocols/database.ts:1236")),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("strong",{parentName:"p"},"watch"),"<",(0,i.kt)("inlineCode",{parentName:"p"},"T"),">","(",(0,i.kt)("inlineCode",{parentName:"p"},"query"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"params"),"): ",(0,i.kt)("inlineCode",{parentName:"p"},"AsyncIterable"),"<",(0,i.kt)("inlineCode",{parentName:"p"},"T")," & ",(0,i.kt)("a",{parentName:"p",href:"/WSF/docs/api/interfaces/divine_uri.DBMetadata"},(0,i.kt)("inlineCode",{parentName:"a"},"DBMetadata")),">"),(0,i.kt)("p",null,"Opens a ",(0,i.kt)("em",{parentName:"p"},"change data capture")," channel to the database and returns a stream of change events."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-ts"},"for await (const ev of dbURI.watch('experimental changefeed FOR orders', {})) {\n    console.log('New order from CockroachDB', ev);\n}\n")),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},(0,i.kt)("inlineCode",{parentName:"strong"},"throws"))," TypeError  If one of the parameters is ",(0,i.kt)("inlineCode",{parentName:"p"},"undefined")," or if the arguments are invalid."),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},(0,i.kt)("inlineCode",{parentName:"strong"},"throws"))," IOError    On I/O errors."),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},(0,i.kt)("inlineCode",{parentName:"strong"},"throws"))," DBError    On database/query errors."),(0,i.kt)("h4",{id:"type-parameters-16"},"Type parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"T")),(0,i.kt)("td",{parentName:"tr",align:"left"},"extends ",(0,i.kt)("inlineCode",{parentName:"td"},"object")),(0,i.kt)("td",{parentName:"tr",align:"left"},"The type of events that will be emitted.")))),(0,i.kt)("h4",{id:"parameters-21"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"query")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"string")),(0,i.kt)("td",{parentName:"tr",align:"left"},"The query that opens the change event streamq, with ",(0,i.kt)("inlineCode",{parentName:"td"},"{prop}")," placeholders for parameters.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"params")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"Params")),(0,i.kt)("td",{parentName:"tr",align:"left"},"An record with parameters, used to look up placeholders from the query. Parameters may be                      ",(0,i.kt)("a",{parentName:"td",href:"/WSF/docs/api/classes/divine_uri.DBQuery"},"DBQuery")," instances themselves, or of any type supported by the database.")))),(0,i.kt)("h4",{id:"returns-25"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"AsyncIterable"),"<",(0,i.kt)("inlineCode",{parentName:"p"},"T")," & ",(0,i.kt)("a",{parentName:"p",href:"/WSF/docs/api/interfaces/divine_uri.DBMetadata"},(0,i.kt)("inlineCode",{parentName:"a"},"DBMetadata")),">"),(0,i.kt)("p",null,"A stream of change events."),(0,i.kt)("h4",{id:"overrides-14"},"Overrides"),(0,i.kt)("p",null,"URI.watch"),(0,i.kt)("h4",{id:"defined-in-47"},"Defined in"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/Divine-Software/WSF/blob/0c590c3/uri/src/protocols/database.ts#L1255"},"uri/src/protocols/database.ts:1255")),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"-1"},"$"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("inlineCode",{parentName:"p"},"Static")," ",(0,i.kt)("strong",{parentName:"p"},"$"),"(",(0,i.kt)("inlineCode",{parentName:"p"},"strings"),", ...",(0,i.kt)("inlineCode",{parentName:"p"},"values"),"): ",(0,i.kt)("a",{parentName:"p",href:"/WSF/docs/api/classes/divine_uri.URI"},(0,i.kt)("inlineCode",{parentName:"a"},"URI"))),(0,i.kt)("p",null,"Creates a new URI from a template string, percent-encoding all arguments."),(0,i.kt)("p",null,"Example:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-ts"},"const href = URI.$`http://${host}/blobs/${blob}?as=${ct}\n")),(0,i.kt)("h4",{id:"parameters-22"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"strings")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"TemplateStringsArray")),(0,i.kt)("td",{parentName:"tr",align:"left"},"The template string array.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"...values")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"unknown"),"[]"),(0,i.kt)("td",{parentName:"tr",align:"left"},"The values to be encoded.")))),(0,i.kt)("h4",{id:"returns-26"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"/WSF/docs/api/classes/divine_uri.URI"},(0,i.kt)("inlineCode",{parentName:"a"},"URI"))),(0,i.kt)("p",null,"A new URI subclass instance."),(0,i.kt)("h4",{id:"inherited-from-32"},"Inherited from"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"/WSF/docs/api/classes/divine_uri.URI"},"URI"),".",(0,i.kt)("a",{parentName:"p",href:"/WSF/docs/api/classes/divine_uri.URI#$"},"$")),(0,i.kt)("h4",{id:"defined-in-48"},"Defined in"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/Divine-Software/WSF/blob/0c590c3/uri/src/uri.ts#L187"},"uri/src/uri.ts:187")),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"register"},"register"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("inlineCode",{parentName:"p"},"Static")," ",(0,i.kt)("strong",{parentName:"p"},"register"),"(",(0,i.kt)("inlineCode",{parentName:"p"},"protocol"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"uri"),"): typeof ",(0,i.kt)("a",{parentName:"p",href:"/WSF/docs/api/classes/divine_uri.URI"},(0,i.kt)("inlineCode",{parentName:"a"},"URI"))),(0,i.kt)("p",null,"Registers a new URI protocol. All subclasses must register their URL protocol support with this method."),(0,i.kt)("h4",{id:"parameters-23"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"protocol")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"string")),(0,i.kt)("td",{parentName:"tr",align:"left"},"The URL protocol to register. Must include the trailing colon.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"uri")),(0,i.kt)("td",{parentName:"tr",align:"left"},"typeof ",(0,i.kt)("a",{parentName:"td",href:"/WSF/docs/api/classes/divine_uri.URI"},(0,i.kt)("inlineCode",{parentName:"a"},"URI"))),(0,i.kt)("td",{parentName:"tr",align:"left"},"The URI subclass.")))),(0,i.kt)("h4",{id:"returns-27"},"Returns"),(0,i.kt)("p",null,"typeof ",(0,i.kt)("a",{parentName:"p",href:"/WSF/docs/api/classes/divine_uri.URI"},(0,i.kt)("inlineCode",{parentName:"a"},"URI"))),(0,i.kt)("p",null,"The URI baseclass (for chaining)."),(0,i.kt)("h4",{id:"inherited-from-33"},"Inherited from"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"/WSF/docs/api/classes/divine_uri.URI"},"URI"),".",(0,i.kt)("a",{parentName:"p",href:"/WSF/docs/api/classes/divine_uri.URI#register"},"register")),(0,i.kt)("h4",{id:"defined-in-49"},"Defined in"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/Divine-Software/WSF/blob/0c590c3/uri/src/uri.ts#L169"},"uri/src/uri.ts:169")))}k.isMDXComponent=!0}}]);