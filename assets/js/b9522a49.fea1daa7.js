"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[418],{9613:function(e,t,r){r.d(t,{Zo:function(){return o},kt:function(){return u}});var a=r(9496);function n(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function i(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,a)}return r}function l(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?i(Object(r),!0).forEach((function(t){n(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function p(e,t){if(null==e)return{};var r,a,n=function(e,t){if(null==e)return{};var r,a,n={},i=Object.keys(e);for(a=0;a<i.length;a++)r=i[a],t.indexOf(r)>=0||(n[r]=e[r]);return n}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)r=i[a],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(n[r]=e[r])}return n}var d=a.createContext({}),s=function(e){var t=a.useContext(d),r=t;return e&&(r="function"==typeof e?e(t):l(l({},t),e)),r},o=function(e){var t=s(e.components);return a.createElement(d.Provider,{value:t},e.children)},m={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},k=a.forwardRef((function(e,t){var r=e.components,n=e.mdxType,i=e.originalType,d=e.parentName,o=p(e,["components","mdxType","originalType","parentName"]),k=s(r),u=n,h=k["".concat(d,".").concat(u)]||k[u]||m[u]||i;return r?a.createElement(h,l(l({ref:t},o),{},{components:r})):a.createElement(h,l({ref:t},o))}));function u(e,t){var r=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var i=r.length,l=new Array(i);l[0]=k;var p={};for(var d in t)hasOwnProperty.call(t,d)&&(p[d]=t[d]);p.originalType=e,p.mdxType="string"==typeof e?e:n,l[1]=p;for(var s=2;s<i;s++)l[s]=r[s];return a.createElement.apply(null,l)}return a.createElement.apply(null,r)}k.displayName="MDXCreateElement"},6582:function(e,t,r){r.r(t),r.d(t,{frontMatter:function(){return p},contentTitle:function(){return d},metadata:function(){return s},toc:function(){return o},default:function(){return k}});var a=r(9624),n=r(42),i=(r(9496),r(9613)),l=["components"],p={id:"divine_uri.YAMLParser",title:"Class: YAMLParser",sidebar_label:"YAMLParser",custom_edit_url:null},d=void 0,s={unversionedId:"api/classes/divine_uri.YAMLParser",id:"api/classes/divine_uri.YAMLParser",title:"Class: YAMLParser",description:"@divine/uri.YAMLParser",source:"@site/docs/api/classes/divine_uri.YAMLParser.md",sourceDirName:"api/classes",slug:"/api/classes/divine_uri.YAMLParser",permalink:"/WSF/docs/api/classes/divine_uri.YAMLParser",editUrl:null,tags:[],version:"current",frontMatter:{id:"divine_uri.YAMLParser",title:"Class: YAMLParser",sidebar_label:"YAMLParser",custom_edit_url:null},sidebar:"tutorialSidebar",previous:{title:"UnknownAuthScheme",permalink:"/WSF/docs/api/classes/divine_uri.UnknownAuthScheme"},next:{title:"ZlibEncoder",permalink:"/WSF/docs/api/classes/divine_uri.ZlibEncoder"}},o=[{value:"Hierarchy",id:"hierarchy",children:[],level:2},{value:"Constructors",id:"constructors",children:[{value:"constructor",id:"constructor",children:[{value:"Parameters",id:"parameters",children:[],level:4},{value:"Inherited from",id:"inherited-from",children:[],level:4},{value:"Defined in",id:"defined-in",children:[],level:4}],level:3}],level:2},{value:"Properties",id:"properties",children:[{value:"contentType",id:"contenttype",children:[{value:"Inherited from",id:"inherited-from-1",children:[],level:4}],level:3}],level:2},{value:"Methods",id:"methods",children:[{value:"_assertSerializebleData",id:"_assertserializebledata",children:[{value:"Parameters",id:"parameters-1",children:[],level:4},{value:"Returns",id:"returns",children:[],level:4},{value:"Inherited from",id:"inherited-from-2",children:[],level:4},{value:"Defined in",id:"defined-in-1",children:[],level:4}],level:3},{value:"parse",id:"parse",children:[{value:"Parameters",id:"parameters-2",children:[],level:4},{value:"Returns",id:"returns-1",children:[],level:4},{value:"Overrides",id:"overrides",children:[],level:4},{value:"Defined in",id:"defined-in-2",children:[],level:4}],level:3},{value:"serialize",id:"serialize",children:[{value:"Parameters",id:"parameters-3",children:[],level:4},{value:"Returns",id:"returns-2",children:[],level:4},{value:"Overrides",id:"overrides-1",children:[],level:4},{value:"Defined in",id:"defined-in-3",children:[],level:4}],level:3},{value:"parse",id:"parse-1",children:[{value:"Type parameters",id:"type-parameters",children:[],level:4},{value:"Parameters",id:"parameters-4",children:[],level:4},{value:"Returns",id:"returns-3",children:[],level:4},{value:"Inherited from",id:"inherited-from-3",children:[],level:4},{value:"Defined in",id:"defined-in-4",children:[],level:4}],level:3},{value:"register",id:"register",children:[{value:"Parameters",id:"parameters-5",children:[],level:4},{value:"Returns",id:"returns-4",children:[],level:4},{value:"Inherited from",id:"inherited-from-4",children:[],level:4},{value:"Defined in",id:"defined-in-5",children:[],level:4}],level:3},{value:"serialize",id:"serialize-1",children:[{value:"Type parameters",id:"type-parameters-1",children:[],level:4},{value:"Parameters",id:"parameters-6",children:[],level:4},{value:"Returns",id:"returns-5",children:[],level:4},{value:"Inherited from",id:"inherited-from-5",children:[],level:4},{value:"Defined in",id:"defined-in-6",children:[],level:4}],level:3},{value:"serializeToBuffer",id:"serializetobuffer",children:[{value:"Type parameters",id:"type-parameters-2",children:[],level:4},{value:"Parameters",id:"parameters-7",children:[],level:4},{value:"Returns",id:"returns-6",children:[],level:4},{value:"Inherited from",id:"inherited-from-6",children:[],level:4},{value:"Defined in",id:"defined-in-7",children:[],level:4}],level:3}],level:2}],m={toc:o};function k(e){var t=e.components,r=(0,n.Z)(e,l);return(0,i.kt)("wrapper",(0,a.Z)({},m,r,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"../modules/divine_uri"},"@divine/uri"),".YAMLParser"),(0,i.kt)("p",null,"The ",(0,i.kt)("inlineCode",{parentName:"p"},"application/yaml"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"application/x-yaml"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"text/vnd.yaml"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"text/x-yaml")," and ",(0,i.kt)("inlineCode",{parentName:"p"},"text/yaml")," parser handles\n",(0,i.kt)("a",{parentName:"p",href:"https://yaml.org/"},"YAML")," using ",(0,i.kt)("a",{parentName:"p",href:"https://eemeli.org/yaml/"},"yaml")," and ",(0,i.kt)("a",{parentName:"p",href:"divine_uri.StringParser"},"StringParser"),"."),(0,i.kt)("p",null,"Only the first document in a multi-document YAML file is returned when parsing. To access all documents, use the\n",(0,i.kt)("a",{parentName:"p",href:"../modules/divine_uri#fields"},"FIELDS")," property."),(0,i.kt)("h2",{id:"hierarchy"},"Hierarchy"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("a",{parentName:"p",href:"divine_uri.Parser"},(0,i.kt)("inlineCode",{parentName:"a"},"Parser"))),(0,i.kt)("p",{parentName:"li"},"\u21b3 ",(0,i.kt)("strong",{parentName:"p"},(0,i.kt)("inlineCode",{parentName:"strong"},"YAMLParser"))))),(0,i.kt)("h2",{id:"constructors"},"Constructors"),(0,i.kt)("h3",{id:"constructor"},"constructor"),(0,i.kt)("p",null,"\u2022 ",(0,i.kt)("inlineCode",{parentName:"p"},"Protected")," ",(0,i.kt)("strong",{parentName:"p"},"new YAMLParser"),"(",(0,i.kt)("inlineCode",{parentName:"p"},"contentType"),")"),(0,i.kt)("p",null,"Constructs a new Parser instance."),(0,i.kt)("h4",{id:"parameters"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"contentType")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"ContentType")),(0,i.kt)("td",{parentName:"tr",align:"left"},"The media type this parser object was instanciated for.")))),(0,i.kt)("h4",{id:"inherited-from"},"Inherited from"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"divine_uri.Parser"},"Parser"),".",(0,i.kt)("a",{parentName:"p",href:"divine_uri.Parser#constructor"},"constructor")),(0,i.kt)("h4",{id:"defined-in"},"Defined in"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/Divine-Software/wsf/blob/c27a4d4/uri/src/parsers.ts#L206"},"uri/src/parsers.ts:206")),(0,i.kt)("h2",{id:"properties"},"Properties"),(0,i.kt)("h3",{id:"contenttype"},"contentType"),(0,i.kt)("p",null,"\u2022 ",(0,i.kt)("inlineCode",{parentName:"p"},"Readonly")," ",(0,i.kt)("strong",{parentName:"p"},"contentType"),": ",(0,i.kt)("inlineCode",{parentName:"p"},"ContentType")),(0,i.kt)("h4",{id:"inherited-from-1"},"Inherited from"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"divine_uri.Parser"},"Parser"),".",(0,i.kt)("a",{parentName:"p",href:"divine_uri.Parser#contenttype"},"contentType")),(0,i.kt)("h2",{id:"methods"},"Methods"),(0,i.kt)("h3",{id:"_assertserializebledata"},"_","assertSerializebleData"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("inlineCode",{parentName:"p"},"Protected")," ",(0,i.kt)("strong",{parentName:"p"},"_assertSerializebleData"),"(",(0,i.kt)("inlineCode",{parentName:"p"},"condition"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"data"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"cause?"),"): asserts condition"),(0,i.kt)("p",null,"A helper method used by parser subclasses to report invalid input."),(0,i.kt)("h4",{id:"parameters-1"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"condition")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"boolean")),(0,i.kt)("td",{parentName:"tr",align:"left"},"Must be ",(0,i.kt)("inlineCode",{parentName:"td"},"true"),", or else a ",(0,i.kt)("a",{parentName:"td",href:"divine_uri.ParserError"},"ParserError")," will be raised.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"data")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"unknown")),(0,i.kt)("td",{parentName:"tr",align:"left"},"Some kind of extra information that will be provided in ",(0,i.kt)("a",{parentName:"td",href:"divine_uri.ParserError#data"},"ParserError.data"),".")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"cause?")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"unknown")),(0,i.kt)("td",{parentName:"tr",align:"left"},"If this error was caused by some other kind of failure, the original error will be available as                   ",(0,i.kt)("a",{parentName:"td",href:"divine_uri.ParserError#cause"},"ParserError.cause"),".")))),(0,i.kt)("h4",{id:"returns"},"Returns"),(0,i.kt)("p",null,"asserts condition"),(0,i.kt)("h4",{id:"inherited-from-2"},"Inherited from"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"divine_uri.Parser"},"Parser"),".",(0,i.kt)("a",{parentName:"p",href:"divine_uri.Parser#_assertserializebledata"},"_assertSerializebleData")),(0,i.kt)("h4",{id:"defined-in-1"},"Defined in"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/Divine-Software/wsf/blob/c27a4d4/uri/src/parsers.ts#L238"},"uri/src/parsers.ts:238")),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"parse"},"parse"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("strong",{parentName:"p"},"parse"),"(",(0,i.kt)("inlineCode",{parentName:"p"},"stream"),"): ",(0,i.kt)("inlineCode",{parentName:"p"},"Promise"),"<",(0,i.kt)("inlineCode",{parentName:"p"},"object")," & ",(0,i.kt)("a",{parentName:"p",href:"../interfaces/divine_uri.WithFields"},(0,i.kt)("inlineCode",{parentName:"a"},"WithFields")),"<",(0,i.kt)("inlineCode",{parentName:"p"},"BasicTypes"),">",">"),(0,i.kt)("p",null,"Parses a stream and returns the result as a parser-specific representation."),(0,i.kt)("p",null,"This method must be implemented by the actual subclass."),(0,i.kt)("h4",{id:"parameters-2"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"stream")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"AsyncIterable"),"<",(0,i.kt)("inlineCode",{parentName:"td"},"Buffer"),">")))),(0,i.kt)("h4",{id:"returns-1"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"Promise"),"<",(0,i.kt)("inlineCode",{parentName:"p"},"object")," & ",(0,i.kt)("a",{parentName:"p",href:"../interfaces/divine_uri.WithFields"},(0,i.kt)("inlineCode",{parentName:"a"},"WithFields")),"<",(0,i.kt)("inlineCode",{parentName:"p"},"BasicTypes"),">",">"),(0,i.kt)("p",null,"The parsed stream."),(0,i.kt)("h4",{id:"overrides"},"Overrides"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"divine_uri.Parser"},"Parser"),".",(0,i.kt)("a",{parentName:"p",href:"divine_uri.Parser#parse"},"parse")),(0,i.kt)("h4",{id:"defined-in-2"},"Defined in"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/Divine-Software/wsf/blob/c27a4d4/uri/src/parsers/yaml.ts#L15"},"uri/src/parsers/yaml.ts:15")),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"serialize"},"serialize"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("strong",{parentName:"p"},"serialize"),"(",(0,i.kt)("inlineCode",{parentName:"p"},"data"),"): ",(0,i.kt)("inlineCode",{parentName:"p"},"Buffer")),(0,i.kt)("p",null,"Serializes a parsed or manually constructed object back into a Buffer or byte stream."),(0,i.kt)("p",null,"This method must be implemented by the actual subclass."),(0,i.kt)("h4",{id:"parameters-3"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"data")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"BasicTypes"))))),(0,i.kt)("h4",{id:"returns-2"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"Buffer")),(0,i.kt)("p",null,"A Buffer or a byte stream."),(0,i.kt)("h4",{id:"overrides-1"},"Overrides"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"divine_uri.Parser"},"Parser"),".",(0,i.kt)("a",{parentName:"p",href:"divine_uri.Parser#serialize"},"serialize")),(0,i.kt)("h4",{id:"defined-in-3"},"Defined in"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/Divine-Software/wsf/blob/c27a4d4/uri/src/parsers/yaml.ts#L23"},"uri/src/parsers/yaml.ts:23")),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"parse-1"},"parse"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("inlineCode",{parentName:"p"},"Static")," ",(0,i.kt)("strong",{parentName:"p"},"parse"),"<",(0,i.kt)("inlineCode",{parentName:"p"},"T"),">","(",(0,i.kt)("inlineCode",{parentName:"p"},"stream"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"contentType"),"): ",(0,i.kt)("inlineCode",{parentName:"p"},"Promise"),"<",(0,i.kt)("inlineCode",{parentName:"p"},"T")," & ",(0,i.kt)("a",{parentName:"p",href:"../interfaces/divine_uri.Finalizable"},(0,i.kt)("inlineCode",{parentName:"a"},"Finalizable")),">"),(0,i.kt)("p",null,"Parses a given string, Buffer or byte stream using a parser registered for a specific media type."),(0,i.kt)("p",null,"NOTE: This method ",(0,i.kt)("em",{parentName:"p"},"always returns an object"),". Primitives are never returned. This means that text, for instance\nwill be returned as a String object, ",(0,i.kt)("inlineCode",{parentName:"p"},"null")," as Object(",(0,i.kt)("a",{parentName:"p",href:"../modules/divine_uri#null"},"NULL"),") and ",(0,i.kt)("inlineCode",{parentName:"p"},"undefined")," as Object(",(0,i.kt)("a",{parentName:"p",href:"../modules/divine_uri#void"},"VOID"),"). You may use\n",(0,i.kt)("a",{parentName:"p",href:"../modules/divine_uri#toprimitive"},"toPrimitive")," to return the original value, or use ",(0,i.kt)("inlineCode",{parentName:"p"},".valueOf()")," and test the result against the ",(0,i.kt)("a",{parentName:"p",href:"../modules/divine_uri#null"},"NULL")," and\n",(0,i.kt)("a",{parentName:"p",href:"../modules/divine_uri#void"},"VOID")," symbols."),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},(0,i.kt)("inlineCode",{parentName:"strong"},"throws"))," ParserError  On parser errors or if the media type is not recognized."),(0,i.kt)("h4",{id:"type-parameters"},"Type parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"T")),(0,i.kt)("td",{parentName:"tr",align:"left"},"extends ",(0,i.kt)("inlineCode",{parentName:"td"},"object")),(0,i.kt)("td",{parentName:"tr",align:"left"},"The type of the returned object.")))),(0,i.kt)("h4",{id:"parameters-4"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"stream")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"string")," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},"Buffer")," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},"AsyncIterable"),"<",(0,i.kt)("inlineCode",{parentName:"td"},"Buffer"),">"),(0,i.kt)("td",{parentName:"tr",align:"left"},"The source that should be parsed.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"contentType")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"string")," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},"ContentType")),(0,i.kt)("td",{parentName:"tr",align:"left"},"The media type that specifies what parser to use.")))),(0,i.kt)("h4",{id:"returns-3"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"Promise"),"<",(0,i.kt)("inlineCode",{parentName:"p"},"T")," & ",(0,i.kt)("a",{parentName:"p",href:"../interfaces/divine_uri.Finalizable"},(0,i.kt)("inlineCode",{parentName:"a"},"Finalizable")),">"),(0,i.kt)("p",null,"An ",(0,i.kt)("em",{parentName:"p"},"object")," (always an object) that represents the original source after parsing. It's\npossible that the Parser subclass allocated temporary resources as part of the process.\nThese resources may be cleaned up by calling ",(0,i.kt)("a",{parentName:"p",href:"../modules/divine_uri#finalize"},"FINALIZE"),"."),(0,i.kt)("h4",{id:"inherited-from-3"},"Inherited from"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"divine_uri.Parser"},"Parser"),".",(0,i.kt)("a",{parentName:"p",href:"divine_uri.Parser#parse"},"parse")),(0,i.kt)("h4",{id:"defined-in-4"},"Defined in"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/Divine-Software/wsf/blob/c27a4d4/uri/src/parsers.ts#L105"},"uri/src/parsers.ts:105")),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"register"},"register"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("inlineCode",{parentName:"p"},"Static")," ",(0,i.kt)("strong",{parentName:"p"},"register"),"(",(0,i.kt)("inlineCode",{parentName:"p"},"type"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"parser"),"): typeof ",(0,i.kt)("a",{parentName:"p",href:"divine_uri.Parser"},(0,i.kt)("inlineCode",{parentName:"a"},"Parser"))),(0,i.kt)("p",null,"Registers a new parser/serializer. All subclasses must register their MIME media type support with this method."),(0,i.kt)("h4",{id:"parameters-5"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"type")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"string")," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},"RegExp")),(0,i.kt)("td",{parentName:"tr",align:"left"},"The content/media type the parser can handle.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"parser")),(0,i.kt)("td",{parentName:"tr",align:"left"},"typeof ",(0,i.kt)("a",{parentName:"td",href:"divine_uri.Parser"},(0,i.kt)("inlineCode",{parentName:"a"},"Parser"))),(0,i.kt)("td",{parentName:"tr",align:"left"},"The Parser subclass to register.")))),(0,i.kt)("h4",{id:"returns-4"},"Returns"),(0,i.kt)("p",null,"typeof ",(0,i.kt)("a",{parentName:"p",href:"divine_uri.Parser"},(0,i.kt)("inlineCode",{parentName:"a"},"Parser"))),(0,i.kt)("p",null,"The Parser base class (for method chaining)."),(0,i.kt)("h4",{id:"inherited-from-4"},"Inherited from"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"divine_uri.Parser"},"Parser"),".",(0,i.kt)("a",{parentName:"p",href:"divine_uri.Parser#register"},"register")),(0,i.kt)("h4",{id:"defined-in-5"},"Defined in"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/Divine-Software/wsf/blob/c27a4d4/uri/src/parsers.ts#L84"},"uri/src/parsers.ts:84")),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"serialize-1"},"serialize"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("inlineCode",{parentName:"p"},"Static")," ",(0,i.kt)("strong",{parentName:"p"},"serialize"),"<",(0,i.kt)("inlineCode",{parentName:"p"},"T"),">","(",(0,i.kt)("inlineCode",{parentName:"p"},"data"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"contentType?"),"): ","[",(0,i.kt)("inlineCode",{parentName:"p"},"Buffer")," ","|"," ",(0,i.kt)("inlineCode",{parentName:"p"},"AsyncIterable"),"<",(0,i.kt)("inlineCode",{parentName:"p"},"Buffer"),">",", ",(0,i.kt)("inlineCode",{parentName:"p"},"ContentType"),"]"),(0,i.kt)("p",null,"Converts a parsed (or manually constructed) object back into a byte stream representation."),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},(0,i.kt)("inlineCode",{parentName:"strong"},"throws"))," ParserError  On serialization errors or if the media type is not recognized."),(0,i.kt)("h4",{id:"type-parameters-1"},"Type parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"T")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"unknown")),(0,i.kt)("td",{parentName:"tr",align:"left"},"The type of the object that is to be serialized.")))),(0,i.kt)("h4",{id:"parameters-6"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"data")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"T")),(0,i.kt)("td",{parentName:"tr",align:"left"},"The object that is to be serialized.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"contentType?")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"string")," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},"ContentType")),(0,i.kt)("td",{parentName:"tr",align:"left"},"The media type that specifies what parser to use.")))),(0,i.kt)("h4",{id:"returns-5"},"Returns"),(0,i.kt)("p",null,"[",(0,i.kt)("inlineCode",{parentName:"p"},"Buffer")," ","|"," ",(0,i.kt)("inlineCode",{parentName:"p"},"AsyncIterable"),"<",(0,i.kt)("inlineCode",{parentName:"p"},"Buffer"),">",", ",(0,i.kt)("inlineCode",{parentName:"p"},"ContentType"),"]"),(0,i.kt)("p",null,"A tuple containing the Buffer/byte stream and the actual media type. Note that the parser\nmay return a slightly different media type than was given (for instance,\n",(0,i.kt)("a",{parentName:"p",href:"divine_uri.MultiPartParser"},"MultiPartParser")," might add a boundary param if none was given)."),(0,i.kt)("h4",{id:"inherited-from-5"},"Inherited from"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"divine_uri.Parser"},"Parser"),".",(0,i.kt)("a",{parentName:"p",href:"divine_uri.Parser#serialize"},"serialize")),(0,i.kt)("h4",{id:"defined-in-6"},"Defined in"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/Divine-Software/wsf/blob/c27a4d4/uri/src/parsers.ts#L128"},"uri/src/parsers.ts:128")),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"serializetobuffer"},"serializeToBuffer"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("inlineCode",{parentName:"p"},"Static")," ",(0,i.kt)("strong",{parentName:"p"},"serializeToBuffer"),"<",(0,i.kt)("inlineCode",{parentName:"p"},"T"),">","(",(0,i.kt)("inlineCode",{parentName:"p"},"data"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"contentType?"),"): ",(0,i.kt)("inlineCode",{parentName:"p"},"Promise"),"<","[",(0,i.kt)("inlineCode",{parentName:"p"},"Buffer"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"ContentType"),"]",">"),(0,i.kt)("p",null,"Converts a parsed (or manually constructed) object into a Buffer."),(0,i.kt)("p",null,"This is a convenience method that just invokes ",(0,i.kt)("a",{parentName:"p",href:"divine_uri.YAMLParser#parse"},"parse")," and then converts the byte stream into a single Buffer."),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},(0,i.kt)("inlineCode",{parentName:"strong"},"throws"))," ParserError  On serialization errors or if the media type is not recognized."),(0,i.kt)("h4",{id:"type-parameters-2"},"Type parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"T")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"unknown"))))),(0,i.kt)("h4",{id:"parameters-7"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"data")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"T")),(0,i.kt)("td",{parentName:"tr",align:"left"},"The object that is to be serialized.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"contentType?")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"string")," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},"ContentType")),(0,i.kt)("td",{parentName:"tr",align:"left"},"The media type that specifies what parser to use.")))),(0,i.kt)("h4",{id:"returns-6"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"Promise"),"<","[",(0,i.kt)("inlineCode",{parentName:"p"},"Buffer"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"ContentType"),"]",">"),(0,i.kt)("p",null,"A tuple containing the Buffer and the actual media type. Note that the parser may return a\nslightly different media type than was given (for instance, ",(0,i.kt)("a",{parentName:"p",href:"divine_uri.MultiPartParser"},"MultiPartParser")," might add\na boundary param if none was given)."),(0,i.kt)("h4",{id:"inherited-from-6"},"Inherited from"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"divine_uri.Parser"},"Parser"),".",(0,i.kt)("a",{parentName:"p",href:"divine_uri.Parser#serializetobuffer"},"serializeToBuffer")),(0,i.kt)("h4",{id:"defined-in-7"},"Defined in"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/Divine-Software/wsf/blob/c27a4d4/uri/src/parsers.ts#L175"},"uri/src/parsers.ts:175")))}k.isMDXComponent=!0}}]);