"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[7012],{9613:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>h});var a=n(9496);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var l=a.createContext({}),p=function(e){var t=a.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},c=function(e){var t=p(e.components);return a.createElement(l.Provider,{value:t},e.children)},d="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},u=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,i=e.originalType,l=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),d=p(n),u=r,h=d["".concat(l,".").concat(u)]||d[u]||m[u]||i;return n?a.createElement(h,o(o({ref:t},c),{},{components:n})):a.createElement(h,o({ref:t},c))}));function h(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=n.length,o=new Array(i);o[0]=u;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s[d]="string"==typeof e?e:r,o[1]=s;for(var p=2;p<i;p++)o[p]=n[p];return a.createElement.apply(null,o)}return a.createElement.apply(null,n)}u.displayName="MDXCreateElement"},1328:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>o,default:()=>m,frontMatter:()=>i,metadata:()=>s,toc:()=>p});var a=n(2564),r=(n(9496),n(9613));const i={sidebar_position:2},o="Web Resources",s={unversionedId:"connect/http",id:"connect/http",title:"Web Resources",description:"Obviously, talking to HTTP/HTTPS services is fully supported, including authentication and automatic redirect handling",source:"@site/docs/connect/http.md",sourceDirName:"connect",slug:"/connect/http",permalink:"/WSF/docs/connect/http",draft:!1,editUrl:"https://github.com/Divine-Software/WSF/tree/master/website/docs/connect/http.md",tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2},sidebar:"tutorialSidebar",previous:{title:"Local Files",permalink:"/WSF/docs/connect/files"},next:{title:"Databases",permalink:"/WSF/docs/connect/databases"}},l={},p=[{value:"Common Operations",id:"common-operations",level:2},{value:"Custom Queries",id:"custom-queries",level:2},{value:"Authentication and Custom Headers",id:"authentication-and-custom-headers",level:2}],c={toc:p},d="wrapper";function m(e){let{components:t,...n}=e;return(0,r.kt)(d,(0,a.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"web-resources"},"Web Resources"),(0,r.kt)("p",null,"Obviously, talking to HTTP/HTTPS services is fully supported, including authentication and automatic redirect handling\n(both according to the ",(0,r.kt)("a",{parentName:"p",href:"https://fetch.spec.whatwg.org"},"Fetch")," standard). Any response outside the ",(0,r.kt)("inlineCode",{parentName:"p"},"2xx")," range will throw an ",(0,r.kt)("a",{parentName:"p",href:"/WSF/docs/api/classes/divine_uri.IOError"},"IOError"),", as will any\nother network error. The ",(0,r.kt)("inlineCode",{parentName:"p"},"data")," member will contain error metadata and also, if available, the original response."),(0,r.kt)("h2",{id:"common-operations"},"Common Operations"),(0,r.kt)("p",null,"Here is how the ",(0,r.kt)("a",{parentName:"p",href:"/WSF/docs/api/classes/divine_uri.URI"},"URI")," methods relate to the most common HTTP verbs:"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"HTTP verb"),(0,r.kt)("th",{parentName:"tr",align:null},"URI method"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"HEAD")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"/WSF/docs/api/classes/divine_uri.HTTPURI#info"},"info"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"GET")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"/WSF/docs/api/classes/divine_uri.HTTPURI#load"},"load"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"PUT")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"/WSF/docs/api/classes/divine_uri.HTTPURI#save"},"save"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"POST")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"/WSF/docs/api/classes/divine_uri.HTTPURI#append"},"append"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"PATCH")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"/WSF/docs/api/classes/divine_uri.HTTPURI#modify"},"modify"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"DELETE")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"/WSF/docs/api/classes/divine_uri.HTTPURI#remove"},"remove"))))),(0,r.kt)("p",null,"Example:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ts"},"import { URI } from '@divine/uri';\nimport { XML } from '@divine/x4e';\nimport { SEP01, Product } from '...';\nimport '@divine/uri-x4e-parser'; // Activate optional XML & HTML parsers\n\nconst sep01 = await new URI('https://www.stellar.org/.well-known/stellar.toml').load<SEP01>(); // Parse TOML\nconst ginfo = await new URI('http://google.com').load<XML>(); // Handle redirect, parse HTML\n\nconst apiBase = new URI('https://ws.example.com/v1/');\nlet  newBread = await apiBase.$`products`.append<Product>({ name: 'Bread', price: 5.99 });\nnewBread = await apiBase.$`products`.modify<Product>({ id: newBread.id, price: 6.99 });\n")),(0,r.kt)("p",null,"Remember that the ",(0,r.kt)("inlineCode",{parentName:"p"},"$")," method in URI just creates a new relative URI from a template literal. It can take a while to get\nused to the syntax."),(0,r.kt)("h2",{id:"custom-queries"},"Custom Queries"),(0,r.kt)("p",null,"The ",(0,r.kt)("a",{parentName:"p",href:"/WSF/docs/api/classes/divine_uri.HTTPURI#query"},"query")," method in ",(0,r.kt)("a",{parentName:"p",href:"/WSF/docs/api/classes/divine_uri.HTTPURI"},"HTTPURI")," can be used to send arbitrary HTTP requests with custom headers:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ts"},"import { HTTPURI, URI } from '@divine/uri';\n\nconst apiBase = new URI('https://ws.example.com/v1/') as HTTPURI;\nconst respose = apiBase.query('POST', { 'X-RPC-Operation': 'calculatePI' }, { digits: 13 });\n")),(0,r.kt)("h2",{id:"authentication-and-custom-headers"},"Authentication and Custom Headers"),(0,r.kt)("p",null,"Independent of what URI method is used to issue the request, ",(0,r.kt)("a",{parentName:"p",href:"/WSF/docs/api/classes/divine_uri.URI#addselector"},"selectors")," are used to specify credentials or custom HTTP\nheaders to send. For example:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ts"},"import { URI } from '@divine/uri';\nimport { MetaResponse } from '...';\n\nconst clientID = '...', clientSecret = '...';\n\nconst apiBase = new URI('https://api.example.com/')\n    .addSelector({\n        selector:    { authScheme: 'Basic' },\n        credentials: { identity: clientID, secret: clientSecret },\n        preemptive:  true,\n    })\n    .addSelector({ headers: {\n        'x-protocol-version': '1.0',\n    }});\n\nconst meta = await apiBase.$`meta`.load<MetaResponse>();\n")))}m.isMDXComponent=!0}}]);