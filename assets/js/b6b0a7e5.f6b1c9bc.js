"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[2442],{9613:function(e,t,a){a.d(t,{Zo:function(){return l},kt:function(){return u}});var n=a(9496);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function i(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function s(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?i(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):i(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function o(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},i=Object.keys(e);for(n=0;n<i.length;n++)a=i[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)a=i[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var p=n.createContext({}),c=function(e){var t=n.useContext(p),a=t;return e&&(a="function"==typeof e?e(t):s(s({},t),e)),a},l=function(e){var t=c(e.components);return n.createElement(p.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},m=n.forwardRef((function(e,t){var a=e.components,r=e.mdxType,i=e.originalType,p=e.parentName,l=o(e,["components","mdxType","originalType","parentName"]),m=c(a),u=r,h=m["".concat(p,".").concat(u)]||m[u]||d[u]||i;return a?n.createElement(h,s(s({ref:t},l),{},{components:a})):n.createElement(h,s({ref:t},l))}));function u(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=a.length,s=new Array(i);s[0]=m;var o={};for(var p in t)hasOwnProperty.call(t,p)&&(o[p]=t[p]);o.originalType=e,o.mdxType="string"==typeof e?e:r,s[1]=o;for(var c=2;c<i;c++)s[c]=a[c];return n.createElement.apply(null,s)}return n.createElement.apply(null,a)}m.displayName="MDXCreateElement"},7415:function(e,t,a){a.r(t),a.d(t,{assets:function(){return l},contentTitle:function(){return p},default:function(){return u},frontMatter:function(){return o},metadata:function(){return c},toc:function(){return d}});var n=a(7813),r=a(7044),i=(a(9496),a(9613)),s=["components"],o={sidebar_position:1},p="HTTP Resources",c={unversionedId:"serve/resources",id:"serve/resources",title:"HTTP Resources",description:"The [WebResource] interface defines how to handle requests to a specific path or path pattern. The resource handlers are",source:"@site/docs/serve/resources.md",sourceDirName:"serve",slug:"/serve/resources",permalink:"/WSF/docs/serve/resources",editUrl:"https://github.com/Divine-Software/WSF/tree/master/website/docs/serve/resources.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"tutorialSidebar",previous:{title:"Handling HTTP Requests",permalink:"/WSF/docs/serve/"},next:{title:"Filters",permalink:"/WSF/docs/serve/filters"}},l={},d=[{value:"The Resource Lifecycle",id:"the-resource-lifecycle",level:2},{value:"Request Arguments",id:"request-arguments",level:2},{value:"Generating Responses",id:"generating-responses",level:2}],m={toc:d};function u(e){var t=e.components,a=(0,r.Z)(e,s);return(0,i.kt)("wrapper",(0,n.Z)({},m,a,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"http-resources"},"HTTP Resources"),(0,i.kt)("p",null,"The ",(0,i.kt)("a",{parentName:"p",href:"/WSF/docs/api/interfaces/divine_web_service.WebResource"},"WebResource")," interface defines how to handle requests to a specific path or path pattern. The resource handlers are\nusually implemented as classes that implements the ",(0,i.kt)("a",{parentName:"p",href:"/WSF/docs/api/interfaces/divine_web_service.WebResource"},"WebResource")," interface, with a static ",(0,i.kt)("a",{parentName:"p",href:"/WSF/docs/api/interfaces/divine_web_service.WebResourceCtor#path"},"path")," property that defines\nthe locations of the handled resource. The path pattern is specified as a ",(0,i.kt)("a",{parentName:"p",href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Regular_Expressions"},"regular expression")," and can include ",(0,i.kt)("a",{parentName:"p",href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Regular_Expressions/Groups_and_Ranges#using_named_groups"},"named\ncapture groups")," to make certain parts of the path available as request arguments."),(0,i.kt)("p",null,"The path pattern should neither begin nor end with a slash, so to match the root path, you need to write an empty\nregular expression: ",(0,i.kt)("inlineCode",{parentName:"p"},"RegExp('')"),". A request can only be handled by one single ",(0,i.kt)("a",{parentName:"p",href:"/WSF/docs/api/interfaces/divine_web_service.WebResource"},"WebResource"),"; if multiple resources' path\npattern matches a request, only the one registered first will be used."),(0,i.kt)("div",{className:"admonition admonition-warning alert alert--danger"},(0,i.kt)("div",{parentName:"div",className:"admonition-heading"},(0,i.kt)("h5",{parentName:"div"},(0,i.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,i.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,i.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M5.05.31c.81 2.17.41 3.38-.52 4.31C3.55 5.67 1.98 6.45.9 7.98c-1.45 2.05-1.7 6.53 3.53 7.7-2.2-1.16-2.67-4.52-.3-6.61-.61 2.03.53 3.33 1.94 2.86 1.39-.47 2.3.53 2.27 1.67-.02.78-.31 1.44-1.13 1.81 3.42-.59 4.78-3.42 4.78-5.56 0-2.84-2.53-3.22-1.25-5.61-1.52.13-2.03 1.13-1.89 2.75.09 1.08-1.02 1.8-1.86 1.33-.67-.41-.66-1.19-.06-1.78C8.18 5.31 8.68 2.45 5.05.32L5.03.3l.02.01z"}))),"warning")),(0,i.kt)("div",{parentName:"div",className:"admonition-content"},(0,i.kt)("p",{parentName:"div"},"When using ",(0,i.kt)("em",{parentName:"p"},"regular expression literals"),", the forward slash \u2014 which is used as a path separator in URLs \u2014 must be\nescaped with a backslash (like ",(0,i.kt)("inlineCode",{parentName:"p"},"/path\\/to\\/resource/"),"), or else the regular expression literal will be terminated\nprematurely. It's also not possible to write an empty expression using literals \u2014 ",(0,i.kt)("inlineCode",{parentName:"p"},"//")," is a comment, not an empty\nregular expression literal. We'll provide helper functions to build these regular expressions in the future, but for\nnow, you'll need to write them by hand."))),(0,i.kt)("h2",{id:"the-resource-lifecycle"},"The Resource Lifecycle"),(0,i.kt)("p",null,"Resource classes are registered once via the ",(0,i.kt)("a",{parentName:"p",href:"/WSF/docs/api/classes/divine_web_service.WebService#addresource"},"addResource")," or ",(0,i.kt)("a",{parentName:"p",href:"/WSF/docs/api/classes/divine_web_service.WebService#addresources"},"addResources")," methods."),(0,i.kt)("p",null,"When a ",(0,i.kt)("a",{parentName:"p",href:"/WSF/docs/api/interfaces/divine_web_service.WebResource"},"WebResource")," matches an incoming request, an instance is ",(0,i.kt)("a",{parentName:"p",href:"/WSF/docs/api/interfaces/divine_web_service.WebResourceCtor#constructor"},"constructed")," (via ",(0,i.kt)("inlineCode",{parentName:"p"},"new"),"), where it\nreceives a reference to the ",(0,i.kt)("a",{parentName:"p",href:"/WSF/docs/api/classes/divine_web_service.WebService#context"},"WebService Context"),", a custom object that you provide when the ",(0,i.kt)("a",{parentName:"p",href:"/WSF/docs/api/classes/divine_web_service.WebService"},"WebService")," is created.\nThis is how the resource instances can access various services and configurations in your application."),(0,i.kt)("p",null,"After that, it optional ",(0,i.kt)("a",{parentName:"p",href:"/WSF/docs/api/interfaces/divine_web_service.WebResource#init"},"init")," method is invoked, if present, allowing the resource to perform asynchronous\ninitialization. Candidate operations for this method is to perform authentication",(0,i.kt)("sup",{parentName:"p",id:"fnref-1"},(0,i.kt)("a",{parentName:"sup",href:"#fn-1",className:"footnote-ref"},"1")),", look up parent resources or otherwise\nensure that the resource being accessed is valid."),(0,i.kt)("div",{className:"admonition admonition-info alert alert--info"},(0,i.kt)("div",{parentName:"div",className:"admonition-heading"},(0,i.kt)("h5",{parentName:"div"},(0,i.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,i.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,i.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"}))),"info")),(0,i.kt)("div",{parentName:"div",className:"admonition-content"},(0,i.kt)("p",{parentName:"div"},"For security reasons, we always instantiate a fresh ",(0,i.kt)("a",{parentName:"p",href:"/WSF/docs/api/interfaces/divine_web_service.WebResource"},"WebResource")," for each request. We don't ever want information\n(authentication, sessions etc) to leak between requests; by always creating new objects, this entire class of\nvulnerabilities is effectively eliminated."))),(0,i.kt)("p",null,"Then, one of the ",(0,i.kt)("a",{parentName:"p",href:"/WSF/docs/api/interfaces/divine_web_service.WebResource#head"},"HEAD"),", ",(0,i.kt)("a",{parentName:"p",href:"/WSF/docs/api/interfaces/divine_web_service.WebResource#get"},"GET"),", ",(0,i.kt)("a",{parentName:"p",href:"/WSF/docs/api/interfaces/divine_web_service.WebResource#put"},"PUT"),", ",(0,i.kt)("a",{parentName:"p",href:"/WSF/docs/api/interfaces/divine_web_service.WebResource#post"},"POST"),", ",(0,i.kt)("a",{parentName:"p",href:"/WSF/docs/api/interfaces/divine_web_service.WebResource#patch"},"PATCH"),", ",(0,i.kt)("a",{parentName:"p",href:"/WSF/docs/api/interfaces/divine_web_service.WebResource#delete"},"DELETE")," or ",(0,i.kt)("a",{parentName:"p",href:"/WSF/docs/api/interfaces/divine_web_service.WebResource#options"},"OPTIONS"),"\u200b",(0,i.kt)("sup",{parentName:"p",id:"fnref-2"},(0,i.kt)("a",{parentName:"sup",href:"#fn-2",className:"footnote-ref"},"2"))," methods is invoked. If\nno such method is defined, ",(0,i.kt)("a",{parentName:"p",href:"/WSF/docs/api/interfaces/divine_web_service.WebResource#default"},"default")," is called (",(0,i.kt)("a",{parentName:"p",href:"/WSF/docs/api/interfaces/divine_web_service.WebResource#head"},"HEAD")," falls back to ",(0,i.kt)("a",{parentName:"p",href:"/WSF/docs/api/interfaces/divine_web_service.WebResource#get"},"GET")," first, then ",(0,i.kt)("a",{parentName:"p",href:"/WSF/docs/api/interfaces/divine_web_service.WebResource#default"},"default"),")."),(0,i.kt)("p",null,"Should any method throw an exception, ",(0,i.kt)("a",{parentName:"p",href:"/WSF/docs/api/interfaces/divine_web_service.WebResource#catch"},"catch")," is given a chance to handle the exception, before the error is propagated\nto the handler registered via ",(0,i.kt)("a",{parentName:"p",href:"/WSF/docs/api/classes/divine_web_service.WebService#seterrorhandler"},"setErrorHandler"),", or sent back to the client. The ",(0,i.kt)("a",{parentName:"p",href:"/WSF/docs/api/classes/divine_web_service.WebError"},"WebError")," exception (or a subclass\nthereof) is the preferred exception to throw, since it can hold all information required in order to construct a valid\nHTTP response. Any other exception will result in a ",(0,i.kt)("em",{parentName:"p"},"500 \u2013 Internal Server Error")," response."),(0,i.kt)("p",null,"Finally, ",(0,i.kt)("a",{parentName:"p",href:"/WSF/docs/api/interfaces/divine_web_service.WebResource#close"},"close")," is invoked and the object is disposed of. If the resource needs to perform any cleanup tasks, this is\nthe place to do that."),(0,i.kt)("p",null,"All methods in the ",(0,i.kt)("a",{parentName:"p",href:"/WSF/docs/api/interfaces/divine_web_service.WebResource"},"WebResource")," interface are optional. If no matching method handler is found, ",(0,i.kt)("em",{parentName:"p"},"405 \u2013 Method Not\nAllowed")," is returned; if no resource matched at all, ",(0,i.kt)("em",{parentName:"p"},"404 \u2013 Not Found")," is instead returned."),(0,i.kt)("h2",{id:"request-arguments"},"Request Arguments"),(0,i.kt)("p",null,"The method handlers in ",(0,i.kt)("a",{parentName:"p",href:"/WSF/docs/api/interfaces/divine_web_service.WebResource"},"WebResource")," receives a single argument, a ",(0,i.kt)("a",{parentName:"p",href:"/WSF/docs/api/classes/divine_web_service.WebArguments"},"WebArguments")," instance, that provides access the\nincoming request and parameters derived from it. This object contains utility methods to access and convert various\nrequest parameters. To determine from where a parameter should be fetched, a single-character ",(0,i.kt)("em",{parentName:"p"},"type prefix")," is used:"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:null},"Type prefix"),(0,i.kt)("th",{parentName:"tr",align:null},"Parameter source"),(0,i.kt)("th",{parentName:"tr",align:null},"Example Input"),(0,i.kt)("th",{parentName:"tr",align:null},"Example Usage"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"?")),(0,i.kt)("td",{parentName:"tr",align:null},"URL query parameter"),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"http://example.com?search=that&sort=name")),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"?sort"))),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"$")),(0,i.kt)("td",{parentName:"tr",align:null},"Capture groups from ",(0,i.kt)("a",{parentName:"td",href:"/WSF/docs/api/interfaces/divine_web_service.WebResourceCtor#path"},"path")," pattern"),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},'RegExp("products/(?<product_id>[0-9]+)")')),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"$product_id"))),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"@")),(0,i.kt)("td",{parentName:"tr",align:null},"Request header"),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"Content-Type: application/json")),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"@content-type"))),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},".")),(0,i.kt)("td",{parentName:"tr",align:null},"Request body"),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},'{ "userName": "joe" }')),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},".userName"))),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"~")),(0,i.kt)("td",{parentName:"tr",align:null},"Custom parameter"),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("a",{parentName:"td",href:"/WSF/docs/api/classes/divine_web_service.WebRequest#setparam"},"WebRequest.setParam"),(0,i.kt)("inlineCode",{parentName:"td"},'("user", { ... })')),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"~user"))))),(0,i.kt)("h2",{id:"generating-responses"},"Generating Responses"),(0,i.kt)("p",null,"To return a response with a ",(0,i.kt)("em",{parentName:"p"},"200 \u2013 OK")," status code, well, just return it. This works for values of type ",(0,i.kt)("inlineCode",{parentName:"p"},"Buffer")," and\nbyte streams a.k.a. ",(0,i.kt)("inlineCode",{parentName:"p"},"AsyncIterable<Buffer>")," (",(0,i.kt)("em",{parentName:"p"},"application/octet-stream"),"), plain old objects and arrays\n(",(0,i.kt)("em",{parentName:"p"},"application/json"),"), ",(0,i.kt)("inlineCode",{parentName:"p"},"string"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"number"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"bigint"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"boolean")," and ",(0,i.kt)("inlineCode",{parentName:"p"},"Date")," (",(0,i.kt)("em",{parentName:"p"},"text/plain"),"), and ",(0,i.kt)("a",{parentName:"p",href:"/WSF/docs/api/modules/divine_x4e#xml"},"XML")," objects, including\nthose constructed via the ",(0,i.kt)("a",{parentName:"p",href:"/WSF/docs/api/modules/divine_x4e#html"},"html")," tagged template literal or via TSX (",(0,i.kt)("em",{parentName:"p"},"application/xml")," or ",(0,i.kt)("em",{parentName:"p"},"text/html"),", based on the XML\nnamespace)."),(0,i.kt)("p",null,"If you need to specify the status code or add response headers (including the ",(0,i.kt)("inlineCode",{parentName:"p"},"content-type"),"), wrap the response in a\n",(0,i.kt)("a",{parentName:"p",href:"/WSF/docs/api/classes/divine_web_service.WebResponse"},"WebResponse")," object."),(0,i.kt)("div",{className:"admonition admonition-note alert alert--secondary"},(0,i.kt)("div",{parentName:"div",className:"admonition-heading"},(0,i.kt)("h5",{parentName:"div"},(0,i.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,i.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,i.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"}))),"note")),(0,i.kt)("div",{parentName:"div",className:"admonition-content"},(0,i.kt)("p",{parentName:"div"},"In the future, the WSF will automatically negotiate the media type based on the return value and the ",(0,i.kt)("inlineCode",{parentName:"p"},"accept")," and\n",(0,i.kt)("inlineCode",{parentName:"p"},"accept-charset")," request parameters and serialize the response accordingly."))),(0,i.kt)("div",{className:"footnotes"},(0,i.kt)("hr",{parentName:"div"}),(0,i.kt)("ol",{parentName:"div"},(0,i.kt)("li",{parentName:"ol",id:"fn-1"},"Another common pattern is to use a ",(0,i.kt)("a",{parentName:"li",href:"/WSF/docs/api/interfaces/divine_web_service.WebFilter"},"WebFilter")," to perform authentication for a wide range of resources, and simply\nprovide the resources with some kind of ",(0,i.kt)("em",{parentName:"li"},"User")," object via ",(0,i.kt)("a",{parentName:"li",href:"/WSF/docs/api/classes/divine_web_service.WebRequest#setparam"},"WebRequest.setParam")," if authentication (and\nauthorization) succeeded.",(0,i.kt)("a",{parentName:"li",href:"#fnref-1",className:"footnote-backref"},"\u21a9")),(0,i.kt)("li",{parentName:"ol",id:"fn-2"},"By default, ",(0,i.kt)("inlineCode",{parentName:"li"},"OPTIONS")," is handled automatically by inspecting what methods the resource implements. However, if you\nuse ",(0,i.kt)("a",{parentName:"li",href:"/WSF/docs/api/interfaces/divine_web_service.WebResource#default"},"default"),", you need to process ",(0,i.kt)("inlineCode",{parentName:"li"},"OPTIONS")," manually since there is no way for the WSF to know what methods you\nhandle.",(0,i.kt)("a",{parentName:"li",href:"#fnref-2",className:"footnote-backref"},"\u21a9")))))}u.isMDXComponent=!0}}]);