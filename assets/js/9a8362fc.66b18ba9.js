"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[3469],{9613:(e,t,a)=>{a.d(t,{Zo:()=>o,kt:()=>N});var n=a(9496);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function i(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function l(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?i(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):i(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function p(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},i=Object.keys(e);for(n=0;n<i.length;n++)a=i[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)a=i[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var s=n.createContext({}),d=function(e){var t=n.useContext(s),a=t;return e&&(a="function"==typeof e?e(t):l(l({},t),e)),a},o=function(e){var t=d(e.components);return n.createElement(s.Provider,{value:t},e.children)},m="mdxType",k={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},c=n.forwardRef((function(e,t){var a=e.components,r=e.mdxType,i=e.originalType,s=e.parentName,o=p(e,["components","mdxType","originalType","parentName"]),m=d(a),c=r,N=m["".concat(s,".").concat(c)]||m[c]||k[c]||i;return a?n.createElement(N,l(l({ref:t},o),{},{components:a})):n.createElement(N,l({ref:t},o))}));function N(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=a.length,l=new Array(i);l[0]=c;var p={};for(var s in t)hasOwnProperty.call(t,s)&&(p[s]=t[s]);p.originalType=e,p[m]="string"==typeof e?e:r,l[1]=p;for(var d=2;d<i;d++)l[d]=a[d];return n.createElement.apply(null,l)}return n.createElement.apply(null,a)}c.displayName="MDXCreateElement"},2902:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>s,contentTitle:()=>l,default:()=>k,frontMatter:()=>i,metadata:()=>p,toc:()=>d});var n=a(2564),r=(a(9496),a(9613));const i={id:"divine_web_service",title:"Module: @divine/web-service",sidebar_label:"@divine/web-service",sidebar_position:0,custom_edit_url:null},l=void 0,p={unversionedId:"api/modules/divine_web_service",id:"api/modules/divine_web_service",title:"Module: @divine/web-service",description:"Enumerations",source:"@site/docs/api/modules/divine_web_service.md",sourceDirName:"api/modules",slug:"/api/modules/divine_web_service",permalink:"/WSF/docs/api/modules/divine_web_service",draft:!1,editUrl:null,tags:[],version:"current",sidebarPosition:0,frontMatter:{id:"divine_web_service",title:"Module: @divine/web-service",sidebar_label:"@divine/web-service",sidebar_position:0,custom_edit_url:null},sidebar:"tutorialSidebar",previous:{title:"@divine/uri-x4e-parser",permalink:"/WSF/docs/api/modules/divine_uri_x4e_parser"},next:{title:"@divine/x4e",permalink:"/WSF/docs/api/modules/divine_x4e"}},s={},d=[{value:"Enumerations",id:"enumerations",level:2},{value:"Classes",id:"classes",level:2},{value:"Interfaces",id:"interfaces",level:2},{value:"Type Aliases",id:"type-aliases",level:2},{value:"RPCClient",id:"rpcclient",level:3},{value:"Type parameters",id:"type-parameters",level:4},{value:"Defined in",id:"defined-in",level:4},{value:"RPCClientProxy",id:"rpcclientproxy",level:3},{value:"Type parameters",id:"type-parameters-1",level:4},{value:"Type declaration",id:"type-declaration",level:4},{value:"Parameters",id:"parameters",level:5},{value:"Returns",id:"returns",level:5},{value:"Defined in",id:"defined-in-1",level:4},{value:"RPCEndpoints",id:"rpcendpoints",level:3},{value:"Type parameters",id:"type-parameters-2",level:4},{value:"Defined in",id:"defined-in-2",level:4},{value:"RPCParams",id:"rpcparams",level:3},{value:"Type parameters",id:"type-parameters-3",level:4},{value:"Defined in",id:"defined-in-3",level:4},{value:"RPCResult",id:"rpcresult",level:3},{value:"Type parameters",id:"type-parameters-4",level:4},{value:"Defined in",id:"defined-in-4",level:4},{value:"RPCService",id:"rpcservice",level:3},{value:"Type parameters",id:"type-parameters-5",level:4},{value:"Defined in",id:"defined-in-5",level:4},{value:"RPCSeviceProxy",id:"rpcseviceproxy",level:3},{value:"Type parameters",id:"type-parameters-6",level:4},{value:"Type declaration",id:"type-declaration-1",level:4},{value:"Parameters",id:"parameters-1",level:5},{value:"Returns",id:"returns-1",level:5},{value:"Defined in",id:"defined-in-6",level:4},{value:"WebErrorHandler",id:"weberrorhandler",level:3},{value:"Type parameters",id:"type-parameters-7",level:4},{value:"Type declaration",id:"type-declaration-2",level:4},{value:"Parameters",id:"parameters-2",level:5},{value:"Returns",id:"returns-2",level:5},{value:"Defined in",id:"defined-in-7",level:4},{value:"WebResponses",id:"webresponses",level:3},{value:"Defined in",id:"defined-in-8",level:4},{value:"Variables",id:"variables",level:2},{value:"EVENT_ID",id:"event_id",level:3},{value:"Defined in",id:"defined-in-9",level:4},{value:"EVENT_RETRY",id:"event_retry",level:3},{value:"Defined in",id:"defined-in-10",level:4},{value:"EVENT_TYPE",id:"event_type",level:3},{value:"Defined in",id:"defined-in-11",level:4},{value:"RPC_DEFAULT_KEEPALIVE",id:"rpc_default_keepalive",level:3},{value:"Defined in",id:"defined-in-12",level:4},{value:"RPC_DISABLE_KEEPALIVE",id:"rpc_disable_keepalive",level:3},{value:"Defined in",id:"defined-in-13",level:4},{value:"Functions",id:"functions",level:2},{value:"createRPCClient",id:"createrpcclient",level:3},{value:"Type parameters",id:"type-parameters-8",level:4},{value:"Parameters",id:"parameters-3",level:4},{value:"Returns",id:"returns-3",level:4},{value:"Defined in",id:"defined-in-14",level:4},{value:"createRPCService",id:"createrpcservice",level:3},{value:"Type parameters",id:"type-parameters-9",level:4},{value:"Parameters",id:"parameters-4",level:4},{value:"Returns",id:"returns-4",level:4},{value:"Defined in",id:"defined-in-15",level:4},{value:"Type parameters",id:"type-parameters-10",level:4},{value:"Parameters",id:"parameters-5",level:4},{value:"Returns",id:"returns-5",level:4},{value:"Defined in",id:"defined-in-16",level:4}],o={toc:d},m="wrapper";function k(e){let{components:t,...a}=e;return(0,r.kt)(m,(0,n.Z)({},o,a,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h2",{id:"enumerations"},"Enumerations"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/WSF/docs/api/enums/divine_web_service.WebStatus"},"WebStatus"))),(0,r.kt)("h2",{id:"classes"},"Classes"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/WSF/docs/api/classes/divine_web_service.CORSFilter"},"CORSFilter")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/WSF/docs/api/classes/divine_web_service.EventStreamResponse"},"EventStreamResponse")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/WSF/docs/api/classes/divine_web_service.WebArguments"},"WebArguments")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/WSF/docs/api/classes/divine_web_service.WebError"},"WebError")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/WSF/docs/api/classes/divine_web_service.WebFilterBase"},"WebFilterBase")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/WSF/docs/api/classes/divine_web_service.WebRequest"},"WebRequest")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/WSF/docs/api/classes/divine_web_service.WebResourceBase"},"WebResourceBase")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/WSF/docs/api/classes/divine_web_service.WebResponse"},"WebResponse")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/WSF/docs/api/classes/divine_web_service.WebServer"},"WebServer")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/WSF/docs/api/classes/divine_web_service.WebService"},"WebService"))),(0,r.kt)("h2",{id:"interfaces"},"Interfaces"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/WSF/docs/api/interfaces/divine_web_service.CORSFilterParams"},"CORSFilterParams")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/WSF/docs/api/interfaces/divine_web_service.EventAttributes"},"EventAttributes")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/WSF/docs/api/interfaces/divine_web_service.RPCEndpointOptions"},"RPCEndpointOptions")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/WSF/docs/api/interfaces/divine_web_service.RPCServiceCtor"},"RPCServiceCtor")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/WSF/docs/api/interfaces/divine_web_service.StartOptions"},"StartOptions")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/WSF/docs/api/interfaces/divine_web_service.UserAgent"},"UserAgent")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/WSF/docs/api/interfaces/divine_web_service.WebFilter"},"WebFilter")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/WSF/docs/api/interfaces/divine_web_service.WebFilterCtor"},"WebFilterCtor")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/WSF/docs/api/interfaces/divine_web_service.WebResource"},"WebResource")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/WSF/docs/api/interfaces/divine_web_service.WebResourceCtor"},"WebResourceCtor")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/WSF/docs/api/interfaces/divine_web_service.WebResponseHeaders"},"WebResponseHeaders")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/WSF/docs/api/interfaces/divine_web_service.WebServiceConfig"},"WebServiceConfig"))),(0,r.kt)("h2",{id:"type-aliases"},"Type Aliases"),(0,r.kt)("h3",{id:"rpcclient"},"RPCClient"),(0,r.kt)("p",null,"\u01ac ",(0,r.kt)("strong",{parentName:"p"},"RPCClient"),"<",(0,r.kt)("inlineCode",{parentName:"p"},"M"),">",": { ","[K in keyof M]",": Function }"),(0,r.kt)("p",null,"The RPC client API. Used by clients to call an RPC method."),(0,r.kt)("h4",{id:"type-parameters"},"Type parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"M")),(0,r.kt)("td",{parentName:"tr",align:"left"},"extends ",(0,r.kt)("inlineCode",{parentName:"td"},"RPCMethods"),"<",(0,r.kt)("inlineCode",{parentName:"td"},"M"),">"),(0,r.kt)("td",{parentName:"tr",align:"left"},"The interface that defines all RPC method request and response types (as tuples).")))),(0,r.kt)("h4",{id:"defined-in"},"Defined in"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://github.com/Divine-Software/WSF/blob/c3447be/web-service/src/rpc.ts#L28"},"web-service/src/rpc.ts:28")),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"rpcclientproxy"},"RPCClientProxy"),(0,r.kt)("p",null,"\u01ac ",(0,r.kt)("strong",{parentName:"p"},"RPCClientProxy"),"<",(0,r.kt)("inlineCode",{parentName:"p"},"M"),">",": (",(0,r.kt)("inlineCode",{parentName:"p"},"method"),": keyof ",(0,r.kt)("inlineCode",{parentName:"p"},"M"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"options"),": ",(0,r.kt)("inlineCode",{parentName:"p"},"Required"),"<",(0,r.kt)("a",{parentName:"p",href:"/WSF/docs/api/interfaces/divine_web_service.RPCEndpointOptions"},(0,r.kt)("inlineCode",{parentName:"a"},"RPCEndpointOptions")),">",", ",(0,r.kt)("inlineCode",{parentName:"p"},"params"),": ",(0,r.kt)("inlineCode",{parentName:"p"},"RPCParamsType"),") => ",(0,r.kt)("inlineCode",{parentName:"p"},"Promise"),"<",(0,r.kt)("inlineCode",{parentName:"p"},"RPCResultType"),">"),(0,r.kt)("h4",{id:"type-parameters-1"},"Type parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"M")),(0,r.kt)("td",{parentName:"tr",align:"left"},"extends ",(0,r.kt)("inlineCode",{parentName:"td"},"RPCMethods"),"<",(0,r.kt)("inlineCode",{parentName:"td"},"M"),">"),(0,r.kt)("td",{parentName:"tr",align:"left"},"The interface that defines all RPC method request and response types (as tuples).")))),(0,r.kt)("h4",{id:"type-declaration"},"Type declaration"),(0,r.kt)("p",null,"\u25b8 (",(0,r.kt)("inlineCode",{parentName:"p"},"method"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"options"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"params"),"): ",(0,r.kt)("inlineCode",{parentName:"p"},"Promise"),"<",(0,r.kt)("inlineCode",{parentName:"p"},"RPCResultType"),">"),(0,r.kt)("p",null,"This function should issue an HTTP ",(0,r.kt)("inlineCode",{parentName:"p"},"POST")," request to the remote server and return the response."),(0,r.kt)("p",null,"A minimal implementation using ",(0,r.kt)("inlineCode",{parentName:"p"},"@divine/uri")," could look like this:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ts"},"interface MyAPI {\n    hello: [ { who?: string }, { greeting: string } ];\n}\n\nconst clientProxy: RPCClientProxy<MyAPI> = (method, options, params) =>\n    new URI(options.path, 'http://api.example.com/my-api/').append(params);\n")),(0,r.kt)("h5",{id:"parameters"},"Parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"method")),(0,r.kt)("td",{parentName:"tr",align:"left"},"keyof ",(0,r.kt)("inlineCode",{parentName:"td"},"M")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The name of the RPC method to invoke.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"options")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"Required"),"<",(0,r.kt)("a",{parentName:"td",href:"/WSF/docs/api/interfaces/divine_web_service.RPCEndpointOptions"},(0,r.kt)("inlineCode",{parentName:"a"},"RPCEndpointOptions")),">"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Contains the RPC method endpoint in the ",(0,r.kt)("a",{parentName:"td",href:"/WSF/docs/api/interfaces/divine_web_service.RPCEndpointOptions#path"},"path")," property.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"params")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"RPCParamsType")),(0,r.kt)("td",{parentName:"tr",align:"left"},"RPC method parameters to be ",(0,r.kt)("inlineCode",{parentName:"td"},"POST"),"'ed.")))),(0,r.kt)("h5",{id:"returns"},"Returns"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"Promise"),"<",(0,r.kt)("inlineCode",{parentName:"p"},"RPCResultType"),">"),(0,r.kt)("p",null,"The response as receieved from the RPC serivce."),(0,r.kt)("h4",{id:"defined-in-1"},"Defined in"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://github.com/Divine-Software/WSF/blob/c3447be/web-service/src/rpc.ts#L109"},"web-service/src/rpc.ts:109")),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"rpcendpoints"},"RPCEndpoints"),(0,r.kt)("p",null,"\u01ac ",(0,r.kt)("strong",{parentName:"p"},"RPCEndpoints"),"<",(0,r.kt)("inlineCode",{parentName:"p"},"M"),">",": ",(0,r.kt)("inlineCode",{parentName:"p"},"Record"),"<keyof ",(0,r.kt)("inlineCode",{parentName:"p"},"M"),", ",(0,r.kt)("a",{parentName:"p",href:"/WSF/docs/api/interfaces/divine_web_service.RPCEndpointOptions"},(0,r.kt)("inlineCode",{parentName:"a"},"RPCEndpointOptions"))," ","|"," ",(0,r.kt)("inlineCode",{parentName:"p"},"null"),">"),(0,r.kt)("p",null,"RPC endpoint configuration. For each RPC method (the key) this interface contains either an\n",(0,r.kt)("a",{parentName:"p",href:"/WSF/docs/api/interfaces/divine_web_service.RPCEndpointOptions"},"RPCEndpointOptions")," object or ",(0,r.kt)("inlineCode",{parentName:"p"},"null")," for defaults."),(0,r.kt)("p",null,"This object is the run-time (JavaScript) view of the RPC service API. It's important that every RPC method is present\nin this object, even if its configuration is ",(0,r.kt)("inlineCode",{parentName:"p"},"null"),", becasue this is the only source of method names for JavaScript.\nBoth ",(0,r.kt)("a",{parentName:"p",href:"/WSF/docs/api/modules/divine_web_service#createrpcclient"},"createRPCClient")," and ",(0,r.kt)("a",{parentName:"p",href:"/WSF/docs/api/modules/divine_web_service#createrpcservice"},"createRPCService")," use this object as input when creating the RPC client or\nservice proxy."),(0,r.kt)("h4",{id:"type-parameters-2"},"Type parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"M")),(0,r.kt)("td",{parentName:"tr",align:"left"},"extends ",(0,r.kt)("inlineCode",{parentName:"td"},"RPCMethods"),"<",(0,r.kt)("inlineCode",{parentName:"td"},"M"),">"),(0,r.kt)("td",{parentName:"tr",align:"left"},"The interface that defines all RPC method request and response types (as tuples). This is the compile-time (TypeScript) view of the RPC service API.")))),(0,r.kt)("h4",{id:"defined-in-2"},"Defined in"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://github.com/Divine-Software/WSF/blob/c3447be/web-service/src/rpc.ts#L68"},"web-service/src/rpc.ts:68")),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"rpcparams"},"RPCParams"),(0,r.kt)("p",null,"\u01ac ",(0,r.kt)("strong",{parentName:"p"},"RPCParams"),"<",(0,r.kt)("inlineCode",{parentName:"p"},"M"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"K"),">",": ",(0,r.kt)("inlineCode",{parentName:"p"},"M"),"[",(0,r.kt)("inlineCode",{parentName:"p"},"K"),"]"," extends ","[infer A, infer ","_","B]"," ? ",(0,r.kt)("inlineCode",{parentName:"p"},"A")," : ",(0,r.kt)("inlineCode",{parentName:"p"},"never")),(0,r.kt)("p",null,"Given the compile-time RPC service API interface and a method name, extracs the request parameters."),(0,r.kt)("h4",{id:"type-parameters-3"},"Type parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"M")),(0,r.kt)("td",{parentName:"tr",align:"left"},"extends ",(0,r.kt)("inlineCode",{parentName:"td"},"RPCMethods"),"<",(0,r.kt)("inlineCode",{parentName:"td"},"M"),">"),(0,r.kt)("td",{parentName:"tr",align:"left"},"The interface that defines all RPC method request and response types (as tuples).")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"K")),(0,r.kt)("td",{parentName:"tr",align:"left"},"extends keyof ",(0,r.kt)("inlineCode",{parentName:"td"},"M")),(0,r.kt)("td",{parentName:"tr",align:"left"},"-")))),(0,r.kt)("h4",{id:"defined-in-3"},"Defined in"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://github.com/Divine-Software/WSF/blob/c3447be/web-service/src/rpc.ts#L14"},"web-service/src/rpc.ts:14")),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"rpcresult"},"RPCResult"),(0,r.kt)("p",null,"\u01ac ",(0,r.kt)("strong",{parentName:"p"},"RPCResult"),"<",(0,r.kt)("inlineCode",{parentName:"p"},"M"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"K"),">",": ",(0,r.kt)("inlineCode",{parentName:"p"},"M"),"[",(0,r.kt)("inlineCode",{parentName:"p"},"K"),"]"," extends ","[infer ","_","A, infer B]"," ? ",(0,r.kt)("inlineCode",{parentName:"p"},"B")," : ",(0,r.kt)("inlineCode",{parentName:"p"},"never")),(0,r.kt)("p",null,"Given the compile-time RPC service API interface and a method name, extracs the result/response type."),(0,r.kt)("h4",{id:"type-parameters-4"},"Type parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"M")),(0,r.kt)("td",{parentName:"tr",align:"left"},"extends ",(0,r.kt)("inlineCode",{parentName:"td"},"RPCMethods"),"<",(0,r.kt)("inlineCode",{parentName:"td"},"M"),">"),(0,r.kt)("td",{parentName:"tr",align:"left"},"The interface that defines all RPC method request and response types (as tuples).")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"K")),(0,r.kt)("td",{parentName:"tr",align:"left"},"extends keyof ",(0,r.kt)("inlineCode",{parentName:"td"},"M")),(0,r.kt)("td",{parentName:"tr",align:"left"},"-")))),(0,r.kt)("h4",{id:"defined-in-4"},"Defined in"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://github.com/Divine-Software/WSF/blob/c3447be/web-service/src/rpc.ts#L21"},"web-service/src/rpc.ts:21")),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"rpcservice"},"RPCService"),(0,r.kt)("p",null,"\u01ac ",(0,r.kt)("strong",{parentName:"p"},"RPCService"),"<",(0,r.kt)("inlineCode",{parentName:"p"},"M"),">",": { ","[K in keyof M]",": Function }"),(0,r.kt)("p",null,"The RPC service API. The server should implement this API to handle incoming RPC method calls."),(0,r.kt)("h4",{id:"type-parameters-5"},"Type parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"M")),(0,r.kt)("td",{parentName:"tr",align:"left"},"extends ",(0,r.kt)("inlineCode",{parentName:"td"},"RPCMethods"),"<",(0,r.kt)("inlineCode",{parentName:"td"},"M"),">"),(0,r.kt)("td",{parentName:"tr",align:"left"},"The interface that defines all RPC method request and response types (as tuples).")))),(0,r.kt)("h4",{id:"defined-in-5"},"Defined in"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://github.com/Divine-Software/WSF/blob/c3447be/web-service/src/rpc.ts#L37"},"web-service/src/rpc.ts:37")),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"rpcseviceproxy"},"RPCSeviceProxy"),(0,r.kt)("p",null,"\u01ac ",(0,r.kt)("strong",{parentName:"p"},"RPCSeviceProxy"),"<",(0,r.kt)("inlineCode",{parentName:"p"},"M"),">",": (",(0,r.kt)("inlineCode",{parentName:"p"},"method"),": keyof ",(0,r.kt)("inlineCode",{parentName:"p"},"M"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"options"),": ",(0,r.kt)("inlineCode",{parentName:"p"},"Required"),"<",(0,r.kt)("a",{parentName:"p",href:"/WSF/docs/api/interfaces/divine_web_service.RPCEndpointOptions"},(0,r.kt)("inlineCode",{parentName:"a"},"RPCEndpointOptions")),">",", ",(0,r.kt)("inlineCode",{parentName:"p"},"args"),": ",(0,r.kt)("a",{parentName:"p",href:"/WSF/docs/api/classes/divine_web_service.WebArguments"},(0,r.kt)("inlineCode",{parentName:"a"},"WebArguments")),", ",(0,r.kt)("inlineCode",{parentName:"p"},"fn"),": (",(0,r.kt)("inlineCode",{parentName:"p"},"params"),": ",(0,r.kt)("inlineCode",{parentName:"p"},"RPCParamsType"),") => ",(0,r.kt)("inlineCode",{parentName:"p"},"Promise"),"<",(0,r.kt)("inlineCode",{parentName:"p"},"RPCResultType"),">",") => ",(0,r.kt)("inlineCode",{parentName:"p"},"Promise"),"<",(0,r.kt)("inlineCode",{parentName:"p"},"RPCResultType"),">"),(0,r.kt)("h4",{id:"type-parameters-6"},"Type parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"M")),(0,r.kt)("td",{parentName:"tr",align:"left"},"extends ",(0,r.kt)("inlineCode",{parentName:"td"},"RPCMethods"),"<",(0,r.kt)("inlineCode",{parentName:"td"},"M"),">"),(0,r.kt)("td",{parentName:"tr",align:"left"},"The interface that defines all RPC method request and response types (as tuples).")))),(0,r.kt)("h4",{id:"type-declaration-1"},"Type declaration"),(0,r.kt)("p",null,"\u25b8 (",(0,r.kt)("inlineCode",{parentName:"p"},"method"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"options"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"args"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"fn"),"): ",(0,r.kt)("inlineCode",{parentName:"p"},"Promise"),"<",(0,r.kt)("inlineCode",{parentName:"p"},"RPCResultType"),">"),(0,r.kt)("p",null,"This function should load the request parameters from ",(0,r.kt)("a",{parentName:"p",href:"/WSF/docs/api/classes/divine_web_service.WebArguments#body"},"body")," and invoke the callback function."),(0,r.kt)("p",null,"This is a great place to perform input validation (perhaps using a schema), authenticate the client somehow or add\ncustom response headers. If an ",(0,r.kt)("inlineCode",{parentName:"p"},"AsyncIterable")," is returned, it will automatically be wrapped in an\n",(0,r.kt)("a",{parentName:"p",href:"/WSF/docs/api/classes/divine_web_service.EventStreamResponse"},"EventStreamResponse"),", but otherwise, you're free to constuct the response as you wish."),(0,r.kt)("p",null,"A minimal implementation could look like this:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ts"},"interface MyAPI {\n    hello: [ { who?: string }, { greeting: string } ];\n}\n\nconst serviceProxy: RPCSeviceProxy<MyAPI> = async (method, options, args, fn) =>\n    fn(await args.body());\n")),(0,r.kt)("h5",{id:"parameters-1"},"Parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"method")),(0,r.kt)("td",{parentName:"tr",align:"left"},"keyof ",(0,r.kt)("inlineCode",{parentName:"td"},"M")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The name of the RPC method that should be invoked.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"options")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"Required"),"<",(0,r.kt)("a",{parentName:"td",href:"/WSF/docs/api/interfaces/divine_web_service.RPCEndpointOptions"},(0,r.kt)("inlineCode",{parentName:"a"},"RPCEndpointOptions")),">"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Contains the configured options for the RPC endpoint.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"args")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("a",{parentName:"td",href:"/WSF/docs/api/classes/divine_web_service.WebArguments"},(0,r.kt)("inlineCode",{parentName:"a"},"WebArguments"))),(0,r.kt)("td",{parentName:"tr",align:"left"},"Incoming HTTP request arguments. You should at least load the body from it.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"fn")),(0,r.kt)("td",{parentName:"tr",align:"left"},"(",(0,r.kt)("inlineCode",{parentName:"td"},"params"),": ",(0,r.kt)("inlineCode",{parentName:"td"},"RPCParamsType"),") => ",(0,r.kt)("inlineCode",{parentName:"td"},"Promise"),"<",(0,r.kt)("inlineCode",{parentName:"td"},"RPCResultType"),">"),(0,r.kt)("td",{parentName:"tr",align:"left"},"The RPC service method that should be invoked with the request parameters.")))),(0,r.kt)("h5",{id:"returns-1"},"Returns"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"Promise"),"<",(0,r.kt)("inlineCode",{parentName:"p"},"RPCResultType"),">"),(0,r.kt)("p",null,"The return value of the ",(0,r.kt)("inlineCode",{parentName:"p"},"fn")," service method, either directly or wrapped in a ",(0,r.kt)("a",{parentName:"p",href:"/WSF/docs/api/classes/divine_web_service.WebResponse"},"WebResponse"),"."),(0,r.kt)("h4",{id:"defined-in-6"},"Defined in"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://github.com/Divine-Software/WSF/blob/c3447be/web-service/src/rpc.ts#L136"},"web-service/src/rpc.ts:136")),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"weberrorhandler"},"WebErrorHandler"),(0,r.kt)("p",null,"\u01ac ",(0,r.kt)("strong",{parentName:"p"},"WebErrorHandler"),"<",(0,r.kt)("inlineCode",{parentName:"p"},"Context"),">",": (",(0,r.kt)("inlineCode",{parentName:"p"},"err"),": ",(0,r.kt)("inlineCode",{parentName:"p"},"Error"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"context"),": ",(0,r.kt)("inlineCode",{parentName:"p"},"Context"),") => ",(0,r.kt)("inlineCode",{parentName:"p"},"Promise"),"<",(0,r.kt)("a",{parentName:"p",href:"/WSF/docs/api/classes/divine_web_service.WebResponse"},(0,r.kt)("inlineCode",{parentName:"a"},"WebResponse")),">"),(0,r.kt)("h4",{id:"type-parameters-7"},"Type parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"Context")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The type of the WebService context.")))),(0,r.kt)("h4",{id:"type-declaration-2"},"Type declaration"),(0,r.kt)("p",null,"\u25b8 (",(0,r.kt)("inlineCode",{parentName:"p"},"err"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"context"),"): ",(0,r.kt)("inlineCode",{parentName:"p"},"Promise"),"<",(0,r.kt)("a",{parentName:"p",href:"/WSF/docs/api/classes/divine_web_service.WebResponse"},(0,r.kt)("inlineCode",{parentName:"a"},"WebResponse")),">"),(0,r.kt)("p",null,"A custom error handler."),(0,r.kt)("h5",{id:"parameters-2"},"Parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"err")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"Error")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The error that caused the handler to be invoked.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"context")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"Context")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The WebService context.")))),(0,r.kt)("h5",{id:"returns-2"},"Returns"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"Promise"),"<",(0,r.kt)("a",{parentName:"p",href:"/WSF/docs/api/classes/divine_web_service.WebResponse"},(0,r.kt)("inlineCode",{parentName:"a"},"WebResponse")),">"),(0,r.kt)("p",null,"A response that should be sent back to the client."),(0,r.kt)("h4",{id:"defined-in-7"},"Defined in"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://github.com/Divine-Software/WSF/blob/c3447be/web-service/src/resource.ts#L15"},"web-service/src/resource.ts:15")),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"webresponses"},"WebResponses"),(0,r.kt)("p",null,"\u01ac ",(0,r.kt)("strong",{parentName:"p"},"WebResponses"),": ",(0,r.kt)("a",{parentName:"p",href:"/WSF/docs/api/classes/divine_web_service.WebResponse"},(0,r.kt)("inlineCode",{parentName:"a"},"WebResponse"))," ","|"," ",(0,r.kt)("inlineCode",{parentName:"p"},"BasicTypes")," ","|"," ",(0,r.kt)("inlineCode",{parentName:"p"},"Date")," ","|"," ",(0,r.kt)("inlineCode",{parentName:"p"},"URI")," ","|"," ",(0,r.kt)("inlineCode",{parentName:"p"},"NodeJS.ReadableStream")," ","|"," ",(0,r.kt)("inlineCode",{parentName:"p"},"Buffer")," ","|"," ",(0,r.kt)("inlineCode",{parentName:"p"},"AsyncIterable"),"<",(0,r.kt)("inlineCode",{parentName:"p"},"BasicTypes")," ","|"," ",(0,r.kt)("inlineCode",{parentName:"p"},"undefined"),">"),(0,r.kt)("p",null,"A union of all types a ",(0,r.kt)("a",{parentName:"p",href:"/WSF/docs/api/interfaces/divine_web_service.WebResource"},"WebResource")," method may return."),(0,r.kt)("h4",{id:"defined-in-8"},"Defined in"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://github.com/Divine-Software/WSF/blob/c3447be/web-service/src/response.ts#L336"},"web-service/src/response.ts:336")),(0,r.kt)("h2",{id:"variables"},"Variables"),(0,r.kt)("h3",{id:"event_id"},"EVENT","_","ID"),(0,r.kt)("p",null,"\u2022 ",(0,r.kt)("inlineCode",{parentName:"p"},"Const")," ",(0,r.kt)("strong",{parentName:"p"},"EVENT","_","ID"),": typeof ",(0,r.kt)("a",{parentName:"p",href:"/WSF/docs/api/modules/divine_web_service#event_id"},(0,r.kt)("inlineCode",{parentName:"a"},"EVENT_ID"))),(0,r.kt)("p",null,"A symbol in ",(0,r.kt)("a",{parentName:"p",href:"/WSF/docs/api/interfaces/divine_web_service.EventAttributes"},"EventAttributes")," representing the event's ",(0,r.kt)("inlineCode",{parentName:"p"},"id")," field"),(0,r.kt)("h4",{id:"defined-in-9"},"Defined in"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://github.com/Divine-Software/WSF/blob/c3447be/web-service/src/helpers.ts#L152"},"web-service/src/helpers.ts:152")),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"event_retry"},"EVENT","_","RETRY"),(0,r.kt)("p",null,"\u2022 ",(0,r.kt)("inlineCode",{parentName:"p"},"Const")," ",(0,r.kt)("strong",{parentName:"p"},"EVENT","_","RETRY"),": typeof ",(0,r.kt)("a",{parentName:"p",href:"/WSF/docs/api/modules/divine_web_service#event_retry"},(0,r.kt)("inlineCode",{parentName:"a"},"EVENT_RETRY"))),(0,r.kt)("p",null,"A symbol in ",(0,r.kt)("a",{parentName:"p",href:"/WSF/docs/api/interfaces/divine_web_service.EventAttributes"},"EventAttributes")," representing the event's ",(0,r.kt)("inlineCode",{parentName:"p"},"retry")," field"),(0,r.kt)("h4",{id:"defined-in-10"},"Defined in"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://github.com/Divine-Software/WSF/blob/c3447be/web-service/src/helpers.ts#L158"},"web-service/src/helpers.ts:158")),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"event_type"},"EVENT","_","TYPE"),(0,r.kt)("p",null,"\u2022 ",(0,r.kt)("inlineCode",{parentName:"p"},"Const")," ",(0,r.kt)("strong",{parentName:"p"},"EVENT","_","TYPE"),": typeof ",(0,r.kt)("a",{parentName:"p",href:"/WSF/docs/api/modules/divine_web_service#event_type"},(0,r.kt)("inlineCode",{parentName:"a"},"EVENT_TYPE"))),(0,r.kt)("p",null,"A symbol in ",(0,r.kt)("a",{parentName:"p",href:"/WSF/docs/api/interfaces/divine_web_service.EventAttributes"},"EventAttributes")," representing the event's ",(0,r.kt)("inlineCode",{parentName:"p"},"event")," field"),(0,r.kt)("h4",{id:"defined-in-11"},"Defined in"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://github.com/Divine-Software/WSF/blob/c3447be/web-service/src/helpers.ts#L155"},"web-service/src/helpers.ts:155")),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"rpc_default_keepalive"},"RPC","_","DEFAULT","_","KEEPALIVE"),(0,r.kt)("p",null,"\u2022 ",(0,r.kt)("inlineCode",{parentName:"p"},"Const")," ",(0,r.kt)("strong",{parentName:"p"},"RPC","_","DEFAULT","_","KEEPALIVE"),": ",(0,r.kt)("inlineCode",{parentName:"p"},"10000")),(0,r.kt)("p",null,"The default keep-alive time for event streams, in milliseconds (10 s)."),(0,r.kt)("h4",{id:"defined-in-12"},"Defined in"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://github.com/Divine-Software/WSF/blob/c3447be/web-service/src/rpc.ts#L42"},"web-service/src/rpc.ts:42")),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"rpc_disable_keepalive"},"RPC","_","DISABLE","_","KEEPALIVE"),(0,r.kt)("p",null,"\u2022 ",(0,r.kt)("inlineCode",{parentName:"p"},"Const")," ",(0,r.kt)("strong",{parentName:"p"},"RPC","_","DISABLE","_","KEEPALIVE"),": ",(0,r.kt)("inlineCode",{parentName:"p"},"null")),(0,r.kt)("p",null,"The value to specify if keep-alive for event streams should be disabled."),(0,r.kt)("h4",{id:"defined-in-13"},"Defined in"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://github.com/Divine-Software/WSF/blob/c3447be/web-service/src/rpc.ts#L45"},"web-service/src/rpc.ts:45")),(0,r.kt)("h2",{id:"functions"},"Functions"),(0,r.kt)("h3",{id:"createrpcclient"},"createRPCClient"),(0,r.kt)("p",null,"\u25b8 ",(0,r.kt)("strong",{parentName:"p"},"createRPCClient"),"<",(0,r.kt)("inlineCode",{parentName:"p"},"M"),">","(",(0,r.kt)("inlineCode",{parentName:"p"},"config"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"clientProxy"),"): ",(0,r.kt)("a",{parentName:"p",href:"/WSF/docs/api/modules/divine_web_service#rpcclient"},(0,r.kt)("inlineCode",{parentName:"a"},"RPCClient")),"<",(0,r.kt)("inlineCode",{parentName:"p"},"M"),">"),(0,r.kt)("p",null,"Enumerates all keys in the ",(0,r.kt)("a",{parentName:"p",href:"/WSF/docs/api/modules/divine_web_service#rpcendpoints"},"RPCEndpoints")," object and generates an ",(0,r.kt)("a",{parentName:"p",href:"/WSF/docs/api/modules/divine_web_service#rpcclient"},"RPCClient"),"."),(0,r.kt)("p",null,"Example usage:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ts"},"interface MyAPI {\n    hello: [ { who?: string; }, { greeting: string } ];\n}\n\nconst MyAPI: RPCEndpoints<MyAPI> = {\n    hello: null,\n}\n\nconst myAPI = createRPCClient(MyAPI, async (method, options, params) =>\n                  new URI(options.path, 'http://api.example.com/my-api/').append(params));\n\nconst { greeting } = await myAPI.hello({ who: 'beautiful' });\nconsole.log(greeting);\n")),(0,r.kt)("h4",{id:"type-parameters-8"},"Type parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"M")),(0,r.kt)("td",{parentName:"tr",align:"left"},"extends ",(0,r.kt)("inlineCode",{parentName:"td"},"RPCMethods"),"<",(0,r.kt)("inlineCode",{parentName:"td"},"M"),">"),(0,r.kt)("td",{parentName:"tr",align:"left"},"The interface that defines all RPC method request and response types (as tuples).")))),(0,r.kt)("h4",{id:"parameters-3"},"Parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"config")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("a",{parentName:"td",href:"/WSF/docs/api/modules/divine_web_service#rpcendpoints"},(0,r.kt)("inlineCode",{parentName:"a"},"RPCEndpoints")),"<",(0,r.kt)("inlineCode",{parentName:"td"},"M"),">"),(0,r.kt)("td",{parentName:"tr",align:"left"},"RPC endpoint configuration to generate a client API for.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"clientProxy")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("a",{parentName:"td",href:"/WSF/docs/api/modules/divine_web_service#rpcclientproxy"},(0,r.kt)("inlineCode",{parentName:"a"},"RPCClientProxy")),"<",(0,r.kt)("inlineCode",{parentName:"td"},"M"),">"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Utility function that makes the actual HTTP request.")))),(0,r.kt)("h4",{id:"returns-3"},"Returns"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"/WSF/docs/api/modules/divine_web_service#rpcclient"},(0,r.kt)("inlineCode",{parentName:"a"},"RPCClient")),"<",(0,r.kt)("inlineCode",{parentName:"p"},"M"),">"),(0,r.kt)("p",null,"A class that implements the client-side view of the RPC service API."),(0,r.kt)("h4",{id:"defined-in-14"},"Defined in"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://github.com/Divine-Software/WSF/blob/c3447be/web-service/src/rpc.ts#L173"},"web-service/src/rpc.ts:173")),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"createrpcservice"},"createRPCService"),(0,r.kt)("p",null,"\u25b8 ",(0,r.kt)("strong",{parentName:"p"},"createRPCService"),"<",(0,r.kt)("inlineCode",{parentName:"p"},"M"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"Context"),">","(",(0,r.kt)("inlineCode",{parentName:"p"},"config"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"impl"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"serviceProxy"),"): ",(0,r.kt)("a",{parentName:"p",href:"/WSF/docs/api/interfaces/divine_web_service.WebResourceCtor"},(0,r.kt)("inlineCode",{parentName:"a"},"WebResourceCtor")),"<",(0,r.kt)("inlineCode",{parentName:"p"},"Context"),">","[]"),(0,r.kt)("p",null,"Enumerates all keys in the ",(0,r.kt)("a",{parentName:"p",href:"/WSF/docs/api/modules/divine_web_service#rpcendpoints"},"RPCEndpoints")," object and generates an array of ",(0,r.kt)("a",{parentName:"p",href:"/WSF/docs/api/interfaces/divine_web_service.WebResource"},"WebResource")," classes which\nwill invoke the RPC service methods provided."),(0,r.kt)("p",null,"Example usage:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ts"},"interface MyAPI {\n    hello: [ { who?: string; }, { greeting: string } ];\n}\n\nconst MyAPI: RPCEndpoints<MyAPI> = {\n    hello: null,\n}\n\nclass MyAPIService implements RPCService<MyAPI> {\n    async hello({ who }: RPCParams<MyAPI, 'hello'>): Promise<RPCResult<MyAPI, 'hello'>> {\n        return { greeting: `Hello, ${who ?? 'World'}!` };\n    }\n}\n\nconst ws = new WebService(null)\n    .addResources(createRPCService(MyAPI, MyAPIService,\n        async (method, options, args, fn) => fn(await args.body())));\n")),(0,r.kt)("h4",{id:"type-parameters-9"},"Type parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"M")),(0,r.kt)("td",{parentName:"tr",align:"left"},"extends ",(0,r.kt)("inlineCode",{parentName:"td"},"RPCMethods"),"<",(0,r.kt)("inlineCode",{parentName:"td"},"M"),">"),(0,r.kt)("td",{parentName:"tr",align:"left"},"The interface that defines all RPC method request and response types (as tuples).")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"Context")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"Context")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The ",(0,r.kt)("a",{parentName:"td",href:"/WSF/docs/api/classes/divine_web_service.WebService"},"WebService")," context type.")))),(0,r.kt)("h4",{id:"parameters-4"},"Parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"config")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("a",{parentName:"td",href:"/WSF/docs/api/modules/divine_web_service#rpcendpoints"},(0,r.kt)("inlineCode",{parentName:"a"},"RPCEndpoints")),"<",(0,r.kt)("inlineCode",{parentName:"td"},"M"),">"),(0,r.kt)("td",{parentName:"tr",align:"left"},"RPC endpoint configuration to generate a client API for.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"impl")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("a",{parentName:"td",href:"/WSF/docs/api/interfaces/divine_web_service.RPCServiceCtor"},(0,r.kt)("inlineCode",{parentName:"a"},"RPCServiceCtor")),"<",(0,r.kt)("inlineCode",{parentName:"td"},"Context"),", ",(0,r.kt)("inlineCode",{parentName:"td"},"M"),">"),(0,r.kt)("td",{parentName:"tr",align:"left"},"An RPC service class. A new instance will be constructed for each incoming request.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"serviceProxy")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("a",{parentName:"td",href:"/WSF/docs/api/modules/divine_web_service#rpcseviceproxy"},(0,r.kt)("inlineCode",{parentName:"a"},"RPCSeviceProxy")),"<",(0,r.kt)("inlineCode",{parentName:"td"},"M"),">"),(0,r.kt)("td",{parentName:"tr",align:"left"},"A function that extracts the request parameters, calls the RPC service method and retuns the result.")))),(0,r.kt)("h4",{id:"returns-4"},"Returns"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"/WSF/docs/api/interfaces/divine_web_service.WebResourceCtor"},(0,r.kt)("inlineCode",{parentName:"a"},"WebResourceCtor")),"<",(0,r.kt)("inlineCode",{parentName:"p"},"Context"),">","[]"),(0,r.kt)("p",null,"An array of ",(0,r.kt)("a",{parentName:"p",href:"/WSF/docs/api/interfaces/divine_web_service.WebResource"},"WebResource")," classes that should be registered to a WebService via\n",(0,r.kt)("a",{parentName:"p",href:"/WSF/docs/api/classes/divine_web_service.WebService#addresources"},"addResources"),"."),(0,r.kt)("h4",{id:"defined-in-15"},"Defined in"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://github.com/Divine-Software/WSF/blob/c3447be/web-service/src/rpc.ts#L220"},"web-service/src/rpc.ts:220")),(0,r.kt)("p",null,"\u25b8 ",(0,r.kt)("strong",{parentName:"p"},"createRPCService"),"<",(0,r.kt)("inlineCode",{parentName:"p"},"M"),">","(",(0,r.kt)("inlineCode",{parentName:"p"},"config"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"impl"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"serviceProxy"),"): ",(0,r.kt)("a",{parentName:"p",href:"/WSF/docs/api/interfaces/divine_web_service.WebResourceCtor"},(0,r.kt)("inlineCode",{parentName:"a"},"WebResourceCtor")),"<",(0,r.kt)("inlineCode",{parentName:"p"},"unknown"),">","[]"),(0,r.kt)("p",null,"Enumerates all keys in the ",(0,r.kt)("a",{parentName:"p",href:"/WSF/docs/api/modules/divine_web_service#rpcendpoints"},"RPCEndpoints")," object and generates an array of ",(0,r.kt)("a",{parentName:"p",href:"/WSF/docs/api/interfaces/divine_web_service.WebResource"},"WebResource")," classes which\nwill invoke the RPC service methods provided."),(0,r.kt)("p",null,"Example usage:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ts"},"interface MyAPI {\n    hello: [ { who?: string; }, { greeting: string } ];\n}\n\nconst MyAPI: RPCEndpoints<MyAPI> = {\n    hello: null,\n}\n\nconst myAPIService = new class implements RPCService<MyAPI> {\n    async hello({ who }: RPCParams<MyAPI, 'hello'>): Promise<RPCResult<MyAPI, 'hello'>> {\n        return { greeting: `Hello, ${who ?? 'World'}!` };\n    }\n}\n\nconst ws = new WebService(null)\n    .addResources(createRPCService(MyAPI, myAPIService,\n        async (method, options, args, fn) => fn(await args.body())));\n")),(0,r.kt)("h4",{id:"type-parameters-10"},"Type parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"M")),(0,r.kt)("td",{parentName:"tr",align:"left"},"extends ",(0,r.kt)("inlineCode",{parentName:"td"},"RPCMethods"),"<",(0,r.kt)("inlineCode",{parentName:"td"},"M"),">"),(0,r.kt)("td",{parentName:"tr",align:"left"},"The interface that defines all RPC method request and response types (as tuples).")))),(0,r.kt)("h4",{id:"parameters-5"},"Parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"config")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("a",{parentName:"td",href:"/WSF/docs/api/modules/divine_web_service#rpcendpoints"},(0,r.kt)("inlineCode",{parentName:"a"},"RPCEndpoints")),"<",(0,r.kt)("inlineCode",{parentName:"td"},"M"),">"),(0,r.kt)("td",{parentName:"tr",align:"left"},"RPC endpoint configuration to generate a client API for.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"impl")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("a",{parentName:"td",href:"/WSF/docs/api/modules/divine_web_service#rpcservice"},(0,r.kt)("inlineCode",{parentName:"a"},"RPCService")),"<",(0,r.kt)("inlineCode",{parentName:"td"},"M"),">"),(0,r.kt)("td",{parentName:"tr",align:"left"},"An RPC service instance (which may be stateful). Its methods will be invoked directly.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"serviceProxy")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("a",{parentName:"td",href:"/WSF/docs/api/modules/divine_web_service#rpcseviceproxy"},(0,r.kt)("inlineCode",{parentName:"a"},"RPCSeviceProxy")),"<",(0,r.kt)("inlineCode",{parentName:"td"},"M"),">"),(0,r.kt)("td",{parentName:"tr",align:"left"},"A function that extracts the request parameters, calls the RPC service method and retuns the result.")))),(0,r.kt)("h4",{id:"returns-5"},"Returns"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"/WSF/docs/api/interfaces/divine_web_service.WebResourceCtor"},(0,r.kt)("inlineCode",{parentName:"a"},"WebResourceCtor")),"<",(0,r.kt)("inlineCode",{parentName:"p"},"unknown"),">","[]"),(0,r.kt)("p",null,"An array of ",(0,r.kt)("a",{parentName:"p",href:"/WSF/docs/api/interfaces/divine_web_service.WebResource"},"WebResource")," classes that should be registered to a WebService via\n",(0,r.kt)("a",{parentName:"p",href:"/WSF/docs/api/classes/divine_web_service.WebService#addresources"},"addResources"),"."),(0,r.kt)("h4",{id:"defined-in-16"},"Defined in"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://github.com/Divine-Software/WSF/blob/c3447be/web-service/src/rpc.ts#L256"},"web-service/src/rpc.ts:256")))}k.isMDXComponent=!0}}]);