"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[1434],{9613:(e,t,r)=>{r.d(t,{Zo:()=>c,kt:()=>m});var n=r(9496);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function i(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function o(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?i(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function l(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},i=Object.keys(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var s=n.createContext({}),p=function(e){var t=n.useContext(s),r=t;return e&&(r="function"==typeof e?e(t):o(o({},t),e)),r},c=function(e){var t=p(e.components);return n.createElement(s.Provider,{value:t},e.children)},u="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},f=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,i=e.originalType,s=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),u=p(r),f=a,m=u["".concat(s,".").concat(f)]||u[f]||d[f]||i;return r?n.createElement(m,o(o({ref:t},c),{},{components:r})):n.createElement(m,o({ref:t},c))}));function m(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=r.length,o=new Array(i);o[0]=f;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l[u]="string"==typeof e?e:a,o[1]=l;for(var p=2;p<i;p++)o[p]=r[p];return n.createElement.apply(null,o)}return n.createElement.apply(null,r)}f.displayName="MDXCreateElement"},8908:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>s,contentTitle:()=>o,default:()=>d,frontMatter:()=>i,metadata:()=>l,toc:()=>p});var n=r(2564),a=(r(9496),r(9613));const i={id:"divine_uri.DBTransactionParams",title:"Interface: DBTransactionParams",sidebar_label:"@divine/uri.DBTransactionParams",custom_edit_url:null},o=void 0,l={unversionedId:"api/interfaces/divine_uri.DBTransactionParams",id:"api/interfaces/divine_uri.DBTransactionParams",title:"Interface: DBTransactionParams",description:"@divine/uri.DBTransactionParams",source:"@site/docs/api/interfaces/divine_uri.DBTransactionParams.md",sourceDirName:"api/interfaces",slug:"/api/interfaces/divine_uri.DBTransactionParams",permalink:"/WSF/docs/api/interfaces/divine_uri.DBTransactionParams",draft:!1,editUrl:null,tags:[],version:"current",frontMatter:{id:"divine_uri.DBTransactionParams",title:"Interface: DBTransactionParams",sidebar_label:"@divine/uri.DBTransactionParams",custom_edit_url:null},sidebar:"tutorialSidebar",previous:{title:"@divine/uri.DBParamsSelector",permalink:"/WSF/docs/api/interfaces/divine_uri.DBParamsSelector"},next:{title:"@divine/uri.DirectoryEntry",permalink:"/WSF/docs/api/interfaces/divine_uri.DirectoryEntry"}},s={},p=[{value:"Properties",id:"properties",level:2},{value:"backoff",id:"backoff",level:3},{value:"Type declaration",id:"type-declaration",level:4},{value:"Parameters",id:"parameters",level:5},{value:"Returns",id:"returns",level:5},{value:"Defined in",id:"defined-in",level:4},{value:"options",id:"options",level:3},{value:"Defined in",id:"defined-in-1",level:4},{value:"retries",id:"retries",level:3},{value:"Defined in",id:"defined-in-2",level:4}],c={toc:p},u="wrapper";function d(e){let{components:t,...r}=e;return(0,a.kt)(u,(0,n.Z)({},c,r,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"/WSF/docs/api/modules/divine_uri"},"@divine/uri"),".DBTransactionParams"),(0,a.kt)("p",null,"Transaction parameters."),(0,a.kt)("h2",{id:"properties"},"Properties"),(0,a.kt)("h3",{id:"backoff"},"backoff"),(0,a.kt)("p",null,"\u2022 ",(0,a.kt)("inlineCode",{parentName:"p"},"Optional")," ",(0,a.kt)("strong",{parentName:"p"},"backoff"),": (",(0,a.kt)("inlineCode",{parentName:"p"},"count"),": ",(0,a.kt)("inlineCode",{parentName:"p"},"number"),") => ",(0,a.kt)("inlineCode",{parentName:"p"},"number")),(0,a.kt)("h4",{id:"type-declaration"},"Type declaration"),(0,a.kt)("p",null,"\u25b8 (",(0,a.kt)("inlineCode",{parentName:"p"},"count"),"): ",(0,a.kt)("inlineCode",{parentName:"p"},"number")),(0,a.kt)("p",null,"The backoff function to use when calculating the time to wait between retries. Default is\n",(0,a.kt)("a",{parentName:"p",href:"/WSF/docs/api/classes/divine_uri.DBDriver.DBConnectionPool#defaultbackoff"},"defaultBackoff")," (exponential backoff \u2014 100 ms, 200 ms, 400 ms etc \u2014 with random jitter)."),(0,a.kt)("h5",{id:"parameters"},"Parameters"),(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,a.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:"left"},(0,a.kt)("inlineCode",{parentName:"td"},"count")),(0,a.kt)("td",{parentName:"tr",align:"left"},(0,a.kt)("inlineCode",{parentName:"td"},"number"))))),(0,a.kt)("h5",{id:"returns"},"Returns"),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"number")),(0,a.kt)("h4",{id:"defined-in"},"Defined in"),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"https://github.com/Divine-Software/WSF/blob/c3447be/uri/src/protocols/database.ts#L280"},"uri/src/protocols/database.ts:280")),(0,a.kt)("hr",null),(0,a.kt)("h3",{id:"options"},"options"),(0,a.kt)("p",null,"\u2022 ",(0,a.kt)("inlineCode",{parentName:"p"},"Optional")," ",(0,a.kt)("strong",{parentName:"p"},"options"),": ",(0,a.kt)("a",{parentName:"p",href:"/WSF/docs/api/classes/divine_uri.DBQuery"},(0,a.kt)("inlineCode",{parentName:"a"},"DBQuery"))),(0,a.kt)("p",null,"A database-specific subquery to send as options when starting the transaction. An example would be ",(0,a.kt)("inlineCode",{parentName:"p"},"ISOLATION\nLEVEL SNAPSHOT"),"."),(0,a.kt)("h4",{id:"defined-in-1"},"Defined in"),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"https://github.com/Divine-Software/WSF/blob/c3447be/uri/src/protocols/database.ts#L286"},"uri/src/protocols/database.ts:286")),(0,a.kt)("hr",null),(0,a.kt)("h3",{id:"retries"},"retries"),(0,a.kt)("p",null,"\u2022 ",(0,a.kt)("inlineCode",{parentName:"p"},"Optional")," ",(0,a.kt)("strong",{parentName:"p"},"retries"),": ",(0,a.kt)("inlineCode",{parentName:"p"},"number")),(0,a.kt)("p",null,"The number of times to retry the transaction in case of a deadlock. Default is\n",(0,a.kt)("a",{parentName:"p",href:"/WSF/docs/api/classes/divine_uri.DBDriver.DBConnectionPool#defaultretries"},"defaultRetries")," (8 times)."),(0,a.kt)("h4",{id:"defined-in-2"},"Defined in"),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"https://github.com/Divine-Software/WSF/blob/c3447be/uri/src/protocols/database.ts#L274"},"uri/src/protocols/database.ts:274")))}d.isMDXComponent=!0}}]);