export interface URIComponents {
	scheme?:string,
	userinfo?:string,
	host?:string,
	port?:number|string,
	path?:string,
	query?:string,
	fragment?:string,
	reference?:string,
	error?:string
}

interface MailtoHeaders {
	[hfname:string]:string
}

interface MailtoComponents extends URIComponents {
	to:Array<string>,
	headers?:MailtoHeaders,
	subject?:string,
	body?:string
}

export interface URIOptions {
	scheme?:string,
	reference?:string,
	tolerant?:boolean,
	absolutePath?:boolean,
	iri?:boolean,
	unicodeSupport?:boolean,
	domainHost?:boolean
}

export function parse(uriString:string, options?:URIOptions):URIComponents;
export function removeDotSegments(input:string):string;
export function serialize(components:URIComponents, options?:URIOptions):string;
export function resolveComponents(base:URIComponents, relative:URIComponents, options?:URIOptions, skipNormalization?:boolean):URIComponents;
export function resolve(baseURI:string, relativeURI:string, options?:URIOptions):string;
export function normalize(uri:string, options?:URIOptions):string;
export function normalize(uri:URIComponents, options?:URIOptions):URIComponents;
export function equal(uriA:string, uriB:string, options?: URIOptions):boolean;
export function equal(uriA:URIComponents, uriB:URIComponents, options?:URIOptions):boolean;
export function escapeComponent(str:string, options?:URIOptions):string;
export function unescapeComponent(str:string, options?:URIOptions):string;
